# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .image_status_enum import ImageStatusEnum


class StatusForImageResponse(pydantic.BaseModel):
    """
    Status response for a single image
    """

    coactive_image_id: str = pydantic.Field(alias="coactiveImageId", description="The coactive image id of the image")
    path: str = pydantic.Field(description="The path of the image")
    status: ImageStatusEnum = pydantic.Field(description="The status of the image")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
