# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .visual_safety_classification import VisualSafetyClassification


class VisualSafetyClassificationResponse(pydantic.BaseModel):
    """
    Visual safety classifications of assets
    """

    results: typing.List[VisualSafetyClassification] = pydantic.Field(
        description="Classifications of one or more assets for one or more concepts"
    )
    model_id: str = pydantic.Field(alias="modelId", description="The id of the model used for classification")
    duplicate_detection_model_id: str = pydantic.Field(
        alias="duplicateDetectionModelId", description="The id of model used for duplicate detection"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
