# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .asset_type import AssetType
from .audio_segment import AudioSegment
from .preview_images import PreviewImages
from .shot import Shot
from .video_asset import VideoAsset


class AssetMetadata(pydantic.BaseModel):
    """
    Metadata about an image, video, or a keyframe of a video
    """

    asset_type: AssetType = pydantic.Field(alias="assetType", description="The type of asset")
    coactive_image_id: str = pydantic.Field(
        alias="coactiveImageId", description="The coactive image id (if the asset_type is 'image' or 'keyframe')"
    )
    preview_images: PreviewImages = pydantic.Field(alias="previewImages", description="Preview images in various sizes")
    path: typing.Optional[str] = pydantic.Field(
        description="The original path of the asset. This is the video path if the asset_type is 'keyframe'."
    )
    video: typing.Optional[VideoAsset] = pydantic.Field(description="Video metadata (if the asset_type is 'keyframe').")
    shot: typing.Optional[Shot] = pydantic.Field(description="Video shot metadata (if the asset_type is 'keyframe')")
    sensitive: typing.Optional[bool] = pydantic.Field(description="Flag for a sensitive content warning")
    audio_segment: typing.Optional[AudioSegment] = pydantic.Field(
        alias="audioSegment", description="Audio segment associated with the keyframe (if the asset_type is 'keyframe')"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
