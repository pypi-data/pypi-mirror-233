{"ast":null,"code":"var _jsxFileName = \"/Users/maciel/Projects/aiconsole/web/src/app.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useState, useRef, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './code_block';\nimport { CommandInput } from './components/command_input';\nimport TrashIcon from '@heroicons/react/24/solid/TrashIcon';\n//import \"highlight.js/styles/dracula.css\"; // use dracula.css as highlight.js theme\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [scrolling, setScrolling] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // This effect is going to attach scroll listener to messagesEndRef\n    const {\n      current\n    } = messagesEndRef;\n    if (!current) return;\n    const handleScroll = () => {\n      setScrolling(true);\n      setTimeout(() => setScrolling(false), 1000); // Reset scrolling after 1 second.\n    };\n\n    current.addEventListener('scroll', handleScroll);\n    return () => {\n      current === null || current === void 0 ? void 0 : current.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  useEffect(() => {\n    const {\n      current\n    } = messagesEndRef;\n    if (!current || scrolling) return; // Check if scrolling is true, if so return without updating scrollTop\n\n    if (Math.abs(current.scrollTop - (current.scrollHeight - current.clientHeight)) < 300) {\n      let newValue = Math.max(current.scrollHeight - current.clientHeight, 0);\n      current.scrollTop = newValue;\n    }\n  }, [messages, scrolling]); // Added scrolling as a dependency.\n\n  const removeMessage = index => {\n    setMessages(oldMessages => {\n      return messages.filter((_, i) => i !== index);\n    });\n  };\n  const handleSubmit = useCallback(async prompt => {\n    let newMessages = [...messages, {\n      role: 'user',\n      content: prompt\n    }];\n    setMessages(newMessages);\n    let postRequest = async messages => {\n      return await fetch(`http://${window.location.hostname}:8000/gpt`, {\n        method: 'POST',\n        body: JSON.stringify({\n          messages: messages,\n          model: 'gpt-4'\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    };\n    let handleResponse = async (messages, response) => {\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8');\n      let newMessages = [...messages, {\n        role: 'assistant',\n        content: ''\n      }];\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        let text = decoder.decode(value);\n        if (text.includes('§§§§§CLEAR§§§§§')) {\n          newMessages[newMessages.length - 1].content = '';\n          //delete everything up to $$$CLEAR$$$ in text\n          text = text.substring(text.indexOf('§§§§§CLEAR§§§§§') + 15);\n        }\n        newMessages[newMessages.length - 1].content += text;\n        setMessages(newMessages.slice());\n        //console.log(newMessages);\n\n        if (done) {\n          break;\n        }\n      }\n    };\n    let response = await postRequest(newMessages);\n    await handleResponse(newMessages, response);\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App flex flex-col fixed top-0 left-0 bottom-0 right-0 p-5 justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto flex flex-col\",\n      ref: messagesEndRef,\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center max-w-900px w-full px-5 py-5 rounded-lg bg-slate-700  shadow-lg mb-5 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prose prose-stone dark:prose-invert\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              components: {\n                code: ({\n                  node,\n                  ...props\n                }) => /*#__PURE__*/_jsxDEV(CodeBlock, {\n                  language: props.lang,\n                  val: node.children.map(e => e.value).join(' ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 25\n                }, this)\n              },\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeMessage(index),\n            className: \" self-start\",\n            children: [/*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(CommandInput, {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pJy6wmVTNEaFifdomY5oiw3xYOU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useState","useRef","useEffect","ReactMarkdown","CodeBlock","CommandInput","TrashIcon","jsxDEV","_jsxDEV","App","_s","messages","setMessages","scrolling","setScrolling","messagesEndRef","current","handleScroll","setTimeout","addEventListener","removeEventListener","Math","abs","scrollTop","scrollHeight","clientHeight","newValue","max","removeMessage","index","oldMessages","filter","_","i","handleSubmit","prompt","newMessages","role","content","postRequest","fetch","window","location","hostname","method","body","JSON","stringify","model","headers","handleResponse","response","reader","getReader","decoder","TextDecoder","value","done","read","text","decode","includes","length","substring","indexOf","slice","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","map","message","components","code","node","props","language","lang","val","e","join","onClick","onSubmit","_c","$RefreshReg$"],"sources":["/Users/maciel/Projects/aiconsole/web/src/app.tsx"],"sourcesContent":["import { useCallback, useState, useRef, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './code_block';\nimport { CommandInput } from './components/command_input';\nimport TrashIcon from '@heroicons/react/24/solid/TrashIcon';\n//import \"highlight.js/styles/dracula.css\"; // use dracula.css as highlight.js theme\n\ntype Message = {\n  role: string;\n  content: string;\n};\n\nfunction App() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [scrolling, setScrolling] = useState<boolean>(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // This effect is going to attach scroll listener to messagesEndRef\n    const { current } = messagesEndRef;\n    if (!current) return;\n\n    const handleScroll = () => {\n      setScrolling(true);\n      setTimeout(() => setScrolling(false), 1000); // Reset scrolling after 1 second.\n    };\n\n    current.addEventListener('scroll', handleScroll);\n    return () => {\n      current?.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  \n  useEffect(() => {\n    const { current } = messagesEndRef;\n    if (!current || scrolling) return; // Check if scrolling is true, if so return without updating scrollTop\n\n    if (Math.abs(current.scrollTop - (current.scrollHeight - current.clientHeight)) < 300) {\n      let newValue = Math.max(current.scrollHeight - current.clientHeight, 0);\n      current.scrollTop = newValue;\n    }\n  }, [messages, scrolling]); // Added scrolling as a dependency.\n\n  const removeMessage = (index: number) => {\n    setMessages((oldMessages) => {\n      return messages.filter((_, i) => i !== index);\n    });\n  };\n\n  const handleSubmit = useCallback(\n    async (prompt: string) => {\n      let newMessages = [...messages, { role: 'user', content: prompt }];\n      setMessages(newMessages);\n\n      let postRequest = async (messages: Message[]) => {\n        return await fetch(`http://${window.location.hostname}:8000/gpt`, {\n          method: 'POST',\n          body: JSON.stringify({\n            messages: messages,\n            model: 'gpt-4',\n          }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n      };\n\n      let handleResponse = async (messages: Message[], response: any) => {\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder('utf-8');\n\n        let newMessages = [...messages, { role: 'assistant', content: '' }];\n\n        while (true) {\n          const { value, done } = await reader.read();\n          let text = decoder.decode(value);\n          if (text.includes('§§§§§CLEAR§§§§§')) {\n            newMessages[newMessages.length - 1].content = '';\n            //delete everything up to $$$CLEAR$$$ in text\n            text = text.substring(text.indexOf('§§§§§CLEAR§§§§§') + 15);\n          }\n\n          newMessages[newMessages.length - 1].content += text;\n          setMessages(newMessages.slice());\n          //console.log(newMessages);\n\n          if (done) {\n            break;\n          }\n        }\n      };\n\n      let response = await postRequest(newMessages);\n\n      await handleResponse(newMessages, response);\n    },\n    [messages],\n  );\n\n  return (\n    <div className=\"App flex flex-col fixed top-0 left-0 bottom-0 right-0 p-5 justify-between\">\n      <div className=\"flex-grow overflow-y-auto flex flex-col\" ref={messagesEndRef}>\n        {messages.length === 0 ? (\n          <div>No messages</div>\n        ) : (\n          <div>\n            {messages.map((message, index) => (\n              <div\n                key={index}\n                className=\"flex justify-between items-center max-w-900px w-full px-5 py-5 rounded-lg bg-slate-700  shadow-lg mb-5 \"\n              >\n                <div className=\"prose prose-stone dark:prose-invert\">\n                  <ReactMarkdown\n                    components={{\n                      code: ({ node, ...props }) => (\n                        <CodeBlock\n                          language={props.lang}\n                          val={node.children.map((e) => (e as any).value).join(' ')}\n                        />\n                      ),\n                    }}\n                  >\n                    {message.content}\n                  </ReactMarkdown>\n                </div>\n                <button onClick={() => removeMessage(index)} className=\" self-start\">\n                  <TrashIcon className=\"h-5 w-5 text-white\" />{' '}\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      <div className=\"\">\n        <CommandInput onSubmit={handleSubmit} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}