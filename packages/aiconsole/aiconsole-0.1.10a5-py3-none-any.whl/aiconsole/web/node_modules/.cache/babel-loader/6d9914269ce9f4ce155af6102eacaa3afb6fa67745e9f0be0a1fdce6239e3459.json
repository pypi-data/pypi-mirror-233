{"ast":null,"code":"var _jsxFileName = \"/Users/maciel/Projects/ai-console/web/src/app.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './code_block';\nimport { CommandInput } from './components/command_input';\n//import \"highlight.js/styles/dracula.css\"; // use dracula.css as highlight.js theme\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const messagesEndRef = useRef(null);\n  const [scrollerHeight, setScrollerHeight] = useState(0); // New state to keep track of height\n\n  const dyanmicStyle = {\n    //adding dynamic style for transition\n    scrollTop: scrollerHeight,\n    transition: 'height 0.25s'\n  };\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      setScrollerHeight(Math.max(messagesEndRef.current.scrollHeight - messagesEndRef.current.clientHeight, 0)); // Set new height when there is a new message\n    }\n  }, [messages]);\n  const handleSubmit = useCallback(async prompt => {\n    let newMessages = [...messages, {\n      role: 'user',\n      content: prompt\n    }];\n    setMessages(newMessages);\n    let postRequest = async messages => {\n      console.log(messages);\n      return await fetch(`http://${window.location.hostname}:8000/gpt4`, {\n        method: 'POST',\n        body: JSON.stringify({\n          messages: messages,\n          model_type: 'gpt-4'\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    };\n    let handleResponse = async (messages, response) => {\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8');\n      let newMessages = [...messages, {\n        role: 'assistant',\n        content: ''\n      }];\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        const text = decoder.decode(value);\n        newMessages[newMessages.length - 1].content += text;\n        setMessages(newMessages.slice());\n        console.log(newMessages);\n        if (done) {\n          break;\n        }\n      }\n    };\n    let response = await postRequest(newMessages);\n    await handleResponse(newMessages, response);\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App flex flex-col fixed top-0 left-0 bottom-0 right-0 p-5 justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto flex flex-col\",\n      ref: messagesEndRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: dyanmicStyle,\n        children: [' ', messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-900px w-full px-5 py-3 rounded-lg bg-black-alpha-70 backdrop-blur-sm border-black-alpha-40 shadow-lg \",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              components: {\n                code: ({\n                  node,\n                  ...props\n                }) => /*#__PURE__*/_jsxDEV(CodeBlock, {\n                  language: props.lang,\n                  val: node.children.map(e => e.value).join(' ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this)\n              },\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(CommandInput, {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EnrZuOJrjho3YXAOUfXP8+83v6U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","useRef","useEffect","ReactMarkdown","CodeBlock","CommandInput","jsxDEV","_jsxDEV","App","_s","messages","setMessages","messagesEndRef","scrollerHeight","setScrollerHeight","dyanmicStyle","scrollTop","transition","current","Math","max","scrollHeight","clientHeight","handleSubmit","prompt","newMessages","role","content","postRequest","console","log","fetch","window","location","hostname","method","body","JSON","stringify","model_type","headers","handleResponse","response","reader","getReader","decoder","TextDecoder","value","done","read","text","decode","length","slice","className","children","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","components","code","node","props","language","lang","val","e","join","onSubmit","_c","$RefreshReg$"],"sources":["/Users/maciel/Projects/ai-console/web/src/app.tsx"],"sourcesContent":["import React, { useCallback, useState, useRef, useEffect, CSSProperties } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './code_block';\nimport { CommandInput } from './components/command_input';\n//import \"highlight.js/styles/dracula.css\"; // use dracula.css as highlight.js theme\n\ntype Message = {\n  role: string;\n  content: string;\n};\n\nfunction App() {\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const [scrollerHeight, setScrollerHeight] = useState(0); // New state to keep track of height\n\n  const dyanmicStyle = {\n    //adding dynamic style for transition\n    scrollTop: scrollerHeight,\n    transition: 'height 0.25s',\n  };\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      setScrollerHeight(\n        Math.max(messagesEndRef.current.scrollHeight - messagesEndRef.current.clientHeight, 0),\n      ); // Set new height when there is a new message\n    }\n  }, [messages]);\n  const handleSubmit = useCallback(\n    async (prompt: string) => {\n      let newMessages = [...messages, { role: 'user', content: prompt }];\n      setMessages(newMessages);\n\n      let postRequest = async (messages: Message[]) => {\n        console.log(messages);\n        return await fetch(`http://${window.location.hostname}:8000/gpt4`, {\n          method: 'POST',\n          body: JSON.stringify({\n            messages: messages,\n            model_type: 'gpt-4',\n          }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n      };\n\n      let handleResponse = async (messages: Message[], response: any) => {\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder('utf-8');\n\n        let newMessages = [...messages, { role: 'assistant', content: '' }];\n\n        while (true) {\n          const { value, done } = await reader.read();\n\n          const text = decoder.decode(value);\n          newMessages[newMessages.length - 1].content += text;\n          setMessages(newMessages.slice());\n          console.log(newMessages);\n\n          if (done) {\n            break;\n          }\n        }\n      };\n\n      let response = await postRequest(newMessages);\n\n      await handleResponse(newMessages, response);\n    },\n    [messages],\n  );\n\n  return (\n    <div className=\"App flex flex-col fixed top-0 left-0 bottom-0 right-0 p-5 justify-between\">\n      <div className=\"flex-grow overflow-y-auto flex flex-col\" ref={messagesEndRef}>\n        <div style={dyanmicStyle}>\n          {' '}\n          {/* adding dynamic style */}\n          {messages.length === 0 ? (\n            <div>No messages</div>\n          ) : (\n            <div>\n              {messages.map((message, index) => (\n                <div\n                  key={index}\n                  className=\"max-w-900px w-full px-5 py-3 rounded-lg bg-black-alpha-70 backdrop-blur-sm border-black-alpha-40 shadow-lg \"\n                >\n                  <ReactMarkdown\n                    components={{\n                      code: ({ node, ...props }) => (\n                        <CodeBlock\n                          language={props.lang}\n                          val={node.children.map((e) => (e as any).value).join(' ')}\n                        />\n                      ),\n                    }}\n                  >\n                    {message.content}\n                  </ReactMarkdown>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>{' '}\n        {/* closing tag for the new div */}\n      </div>\n      <div className=\"\">\n        <CommandInput onSubmit={handleSubmit} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}