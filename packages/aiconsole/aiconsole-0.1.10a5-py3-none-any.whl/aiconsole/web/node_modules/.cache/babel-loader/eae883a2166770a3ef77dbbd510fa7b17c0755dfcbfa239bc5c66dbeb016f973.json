{"ast":null,"code":"var _jsxFileName = \"/Users/maciel/Projects/aiconsole/web/src/components/app.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { usePromptStore } from '../workspace/prompt_store';\nimport { CommandInput } from './command_input';\nimport { Message } from './message';\nimport { Pill } from './pill';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [scrolling, setScrolling] = useState(false);\n  const messagesEndRef = useRef(null);\n  const strategy = usePromptStore(state => state.strategy);\n  const mode = usePromptStore(state => state.mode);\n  const manuals = usePromptStore(state => state.manuals);\n  const usedTokens = usePromptStore(state => state.usedTokens);\n  const availableTokens = usePromptStore(state => state.availableTokens);\n  const messages = usePromptStore(state => state.messages);\n  const setMessages = usePromptStore(state => state.setMessages);\n  const doGPT = usePromptStore(state => state.doGPT);\n  const loadingAnalysis = usePromptStore(state => state.analysisAbortController && !state.analysisTimeoutId);\n  const timerIdRef = useRef(null);\n  useEffect(() => {\n    const {\n      current\n    } = messagesEndRef;\n    if (!current) return;\n    const handleScroll = () => {\n      if (timerIdRef.current) {\n        clearTimeout(timerIdRef.current);\n      }\n      setScrolling(true);\n      timerIdRef.current = setTimeout(() => setScrolling(false), 1000); // Reset scrolling after 1 second.\n    };\n\n    current.addEventListener('scroll', handleScroll);\n    return () => {\n      current.removeEventListener('scroll', handleScroll);\n      // It's important to also clear the timer when the component unmounts.\n      if (timerIdRef.current) {\n        clearTimeout(timerIdRef.current);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const {\n      current\n    } = messagesEndRef;\n    if (!current || scrolling) return;\n    if (Math.abs(current.scrollTop - (current.scrollHeight - current.clientHeight)) < 300) {\n      let newValue = Math.max(current.scrollHeight - current.clientHeight, 0);\n      current.scrollTop = newValue;\n    }\n  }, [messages, scrolling]);\n  const handleSubmit = useCallback(async prompt => {\n    setMessages([...messages, {\n      role: 'user',\n      content: prompt\n    }]);\n    doGPT();\n  }, [messages, setMessages, doGPT]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App flex flex-col fixed top-0 left-0 bottom-0 right-0 p-5 justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto flex flex-col\",\n      ref: messagesEndRef,\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n          message: message,\n          index: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(CommandInput, {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row gap-2\",\n      children: [strategy && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Strategy: \", /*#__PURE__*/_jsxDEV(Pill, {\n          color: \"red\",\n          children: strategy.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Mode: \", /*#__PURE__*/_jsxDEV(Pill, {\n          color: \"blue\",\n          children: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Manuals:\", manuals.map(manual => /*#__PURE__*/_jsxDEV(Pill, {\n          color: \"red\",\n          children: manual.id\n        }, manual.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 35\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Memory: \", /*#__PURE__*/_jsxDEV(Pill, {\n          color: \"green\",\n          children: [(100 * (availableTokens - usedTokens) / availableTokens).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loadingAnalysis && /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \" animate-spin -ml-1 mr-3 h-8 w-8 text-white\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"opacity-25\",\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            stroke: \"currentColor\",\n            strokeWidth: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"opacity-75\",\n            fill: \"currentColor\",\n            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"79Effy1O73RBsC1K8HAol4vWV0g=\", false, function () {\n  return [usePromptStore, usePromptStore, usePromptStore, usePromptStore, usePromptStore, usePromptStore, usePromptStore, usePromptStore, usePromptStore];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","usePromptStore","CommandInput","Message","Pill","jsxDEV","_jsxDEV","App","_s","scrolling","setScrolling","messagesEndRef","strategy","state","mode","manuals","usedTokens","availableTokens","messages","setMessages","doGPT","loadingAnalysis","analysisAbortController","analysisTimeoutId","timerIdRef","current","handleScroll","clearTimeout","setTimeout","addEventListener","removeEventListener","Math","abs","scrollTop","scrollHeight","clientHeight","newValue","max","handleSubmit","prompt","role","content","className","children","ref","length","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","onSubmit","color","id","manual","toFixed","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","_c","$RefreshReg$"],"sources":["/Users/maciel/Projects/aiconsole/web/src/components/app.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { usePromptStore } from '../workspace/prompt_store';\nimport { CommandInput } from './command_input';\nimport { Message } from './message';\nimport { Pill } from './pill';\n\nfunction App() {\n  const [scrolling, setScrolling] = useState<boolean>(false);\n  \n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const strategy = usePromptStore((state) => state.strategy);\n  const mode = usePromptStore((state) => state.mode);\n  const manuals = usePromptStore((state) => state.manuals);\n  const usedTokens = usePromptStore((state) => state.usedTokens);\n  const availableTokens = usePromptStore((state) => state.availableTokens);\n  const messages = usePromptStore((state) => state.messages);\n  const setMessages = usePromptStore((state) => state.setMessages);\n  const doGPT = usePromptStore((state) => state.doGPT);\n  const loadingAnalysis = usePromptStore((state) => state.analysisAbortController && !state.analysisTimeoutId);  \n\n  const timerIdRef = useRef<NodeJS.Timeout | null>(null);\n  useEffect(() => {\n    const { current } = messagesEndRef;\n    if (!current) return;\n\n    const handleScroll = () => {\n      if (timerIdRef.current) {\n        clearTimeout(timerIdRef.current);\n      }\n      setScrolling(true);\n      timerIdRef.current = setTimeout(() => setScrolling(false), 1000); // Reset scrolling after 1 second.\n    };\n\n    current.addEventListener('scroll', handleScroll);\n    return () => {\n      current.removeEventListener('scroll', handleScroll);\n      // It's important to also clear the timer when the component unmounts.\n      if (timerIdRef.current) {\n        clearTimeout(timerIdRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const { current } = messagesEndRef;\n    if (!current || scrolling) return;\n\n    if (Math.abs(current.scrollTop - (current.scrollHeight - current.clientHeight)) < 300) {\n      let newValue = Math.max(current.scrollHeight - current.clientHeight, 0);\n      current.scrollTop = newValue;\n    }\n  }, [messages, scrolling]);\n\n  const handleSubmit = useCallback(\n    async (prompt: string) => {\n      setMessages([...messages, { role: 'user', content: prompt }]);\n      doGPT();\n    },\n    [messages, setMessages, doGPT]\n  );\n\n  return (\n    <div className=\"App flex flex-col fixed top-0 left-0 bottom-0 right-0 p-5 justify-between\">\n      <div className=\"flex-grow overflow-y-auto flex flex-col\" ref={messagesEndRef}>\n        {messages.length === 0 ? (\n          <div>No messages</div>\n        ) : (\n          <div>\n            {messages.map((message, index) => <Message message={message} index={index} key={index} />)}\n          </div>\n        )}\n      </div>\n      <div className=\"\">\n        <CommandInput onSubmit={handleSubmit} />\n      </div>\n      <div className=\"flex flex-row gap-2\">\n        { strategy && <div>\n          Strategy: <Pill color=\"red\">{strategy.id}</Pill>\n        </div> }\n        <div>\n          Mode: <Pill color=\"blue\">{mode}</Pill>\n        </div>\n        <div>\n          Manuals: \n          {\n            manuals.map(manual => <Pill key={manual.id} color=\"red\">{manual.id}</Pill>)\n          }\n        </div>\n        <div>\n          Memory: <Pill color=\"green\">{\n            (100 * (availableTokens - usedTokens) / availableTokens).toFixed(1)\n          }%</Pill>\n        </div>\n        <div>\n          { loadingAnalysis && <svg className=\" animate-spin -ml-1 mr-3 h-8 w-8 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg> }  \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAChE,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,IAAI,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EAE1D,MAAMW,cAAc,GAAGZ,MAAM,CAAiB,IAAI,CAAC;EACnD,MAAMa,QAAQ,GAAGX,cAAc,CAAEY,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAAC;EAC1D,MAAME,IAAI,GAAGb,cAAc,CAAEY,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAClD,MAAMC,OAAO,GAAGd,cAAc,CAAEY,KAAK,IAAKA,KAAK,CAACE,OAAO,CAAC;EACxD,MAAMC,UAAU,GAAGf,cAAc,CAAEY,KAAK,IAAKA,KAAK,CAACG,UAAU,CAAC;EAC9D,MAAMC,eAAe,GAAGhB,cAAc,CAAEY,KAAK,IAAKA,KAAK,CAACI,eAAe,CAAC;EACxE,MAAMC,QAAQ,GAAGjB,cAAc,CAAEY,KAAK,IAAKA,KAAK,CAACK,QAAQ,CAAC;EAC1D,MAAMC,WAAW,GAAGlB,cAAc,CAAEY,KAAK,IAAKA,KAAK,CAACM,WAAW,CAAC;EAChE,MAAMC,KAAK,GAAGnB,cAAc,CAAEY,KAAK,IAAKA,KAAK,CAACO,KAAK,CAAC;EACpD,MAAMC,eAAe,GAAGpB,cAAc,CAAEY,KAAK,IAAKA,KAAK,CAACS,uBAAuB,IAAI,CAACT,KAAK,CAACU,iBAAiB,CAAC;EAE5G,MAAMC,UAAU,GAAGzB,MAAM,CAAwB,IAAI,CAAC;EACtDD,SAAS,CAAC,MAAM;IACd,MAAM;MAAE2B;IAAQ,CAAC,GAAGd,cAAc;IAClC,IAAI,CAACc,OAAO,EAAE;IAEd,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIF,UAAU,CAACC,OAAO,EAAE;QACtBE,YAAY,CAACH,UAAU,CAACC,OAAO,CAAC;MAClC;MACAf,YAAY,CAAC,IAAI,CAAC;MAClBc,UAAU,CAACC,OAAO,GAAGG,UAAU,CAAC,MAAMlB,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACpE,CAAC;;IAEDe,OAAO,CAACI,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAChD,OAAO,MAAM;MACXD,OAAO,CAACK,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;MACnD;MACA,IAAIF,UAAU,CAACC,OAAO,EAAE;QACtBE,YAAY,CAACH,UAAU,CAACC,OAAO,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN3B,SAAS,CAAC,MAAM;IACd,MAAM;MAAE2B;IAAQ,CAAC,GAAGd,cAAc;IAClC,IAAI,CAACc,OAAO,IAAIhB,SAAS,EAAE;IAE3B,IAAIsB,IAAI,CAACC,GAAG,CAACP,OAAO,CAACQ,SAAS,IAAIR,OAAO,CAACS,YAAY,GAAGT,OAAO,CAACU,YAAY,CAAC,CAAC,GAAG,GAAG,EAAE;MACrF,IAAIC,QAAQ,GAAGL,IAAI,CAACM,GAAG,CAACZ,OAAO,CAACS,YAAY,GAAGT,OAAO,CAACU,YAAY,EAAE,CAAC,CAAC;MACvEV,OAAO,CAACQ,SAAS,GAAGG,QAAQ;IAC9B;EACF,CAAC,EAAE,CAAClB,QAAQ,EAAET,SAAS,CAAC,CAAC;EAEzB,MAAM6B,YAAY,GAAGzC,WAAW,CAC9B,MAAO0C,MAAc,IAAK;IACxBpB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEsB,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEF;IAAO,CAAC,CAAC,CAAC;IAC7DnB,KAAK,CAAC,CAAC;EACT,CAAC,EACD,CAACF,QAAQ,EAAEC,WAAW,EAAEC,KAAK,CAC/B,CAAC;EAED,oBACEd,OAAA;IAAKoC,SAAS,EAAC,2EAA2E;IAAAC,QAAA,gBACxFrC,OAAA;MAAKoC,SAAS,EAAC,yCAAyC;MAACE,GAAG,EAAEjC,cAAe;MAAAgC,QAAA,EAC1EzB,QAAQ,CAAC2B,MAAM,KAAK,CAAC,gBACpBvC,OAAA;QAAAqC,QAAA,EAAK;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAEtB3C,OAAA;QAAAqC,QAAA,EACGzB,QAAQ,CAACgC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAAK9C,OAAA,CAACH,OAAO;UAACgD,OAAO,EAAEA,OAAQ;UAACC,KAAK,EAAEA;QAAM,GAAMA,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN3C,OAAA;MAAKoC,SAAS,EAAC,EAAE;MAAAC,QAAA,eACfrC,OAAA,CAACJ,YAAY;QAACmD,QAAQ,EAAEf;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACN3C,OAAA;MAAKoC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GAChC/B,QAAQ,iBAAIN,OAAA;QAAAqC,QAAA,GAAK,YACP,eAAArC,OAAA,CAACF,IAAI;UAACkD,KAAK,EAAC,KAAK;UAAAX,QAAA,EAAE/B,QAAQ,CAAC2C;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACN3C,OAAA;QAAAqC,QAAA,GAAK,QACG,eAAArC,OAAA,CAACF,IAAI;UAACkD,KAAK,EAAC,MAAM;UAAAX,QAAA,EAAE7B;QAAI;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACN3C,OAAA;QAAAqC,QAAA,GAAK,UAEH,EACE5B,OAAO,CAACmC,GAAG,CAACM,MAAM,iBAAIlD,OAAA,CAACF,IAAI;UAAiBkD,KAAK,EAAC,KAAK;UAAAX,QAAA,EAAEa,MAAM,CAACD;QAAE,GAAjCC,MAAM,CAACD,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE1E,CAAC,eACN3C,OAAA;QAAAqC,QAAA,GAAK,UACK,eAAArC,OAAA,CAACF,IAAI;UAACkD,KAAK,EAAC,OAAO;UAAAX,QAAA,GACzB,CAAC,GAAG,IAAI1B,eAAe,GAAGD,UAAU,CAAC,GAAGC,eAAe,EAAEwC,OAAO,CAAC,CAAC,CAAC,EACpE,GAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN3C,OAAA;QAAAqC,QAAA,EACItB,eAAe,iBAAIf,OAAA;UAAKoC,SAAS,EAAC,6CAA6C;UAACgB,KAAK,EAAC,4BAA4B;UAACC,IAAI,EAAC,MAAM;UAACC,OAAO,EAAC,WAAW;UAAAjB,QAAA,gBAClJrC,OAAA;YAAQoC,SAAS,EAAC,YAAY;YAACmB,EAAE,EAAC,IAAI;YAACC,EAAE,EAAC,IAAI;YAACC,CAAC,EAAC,IAAI;YAACC,MAAM,EAAC,cAAc;YAACC,WAAW,EAAC;UAAG;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eACrG3C,OAAA;YAAMoC,SAAS,EAAC,YAAY;YAACiB,IAAI,EAAC,cAAc;YAACO,CAAC,EAAC;UAAiH;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzC,EAAA,CAhGQD,GAAG;EAAA,QAION,cAAc,EAClBA,cAAc,EACXA,cAAc,EACXA,cAAc,EACTA,cAAc,EACrBA,cAAc,EACXA,cAAc,EACpBA,cAAc,EACJA,cAAc;AAAA;AAAAkE,EAAA,GAZ/B5D,GAAG;AAkGZ,eAAeA,GAAG;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}