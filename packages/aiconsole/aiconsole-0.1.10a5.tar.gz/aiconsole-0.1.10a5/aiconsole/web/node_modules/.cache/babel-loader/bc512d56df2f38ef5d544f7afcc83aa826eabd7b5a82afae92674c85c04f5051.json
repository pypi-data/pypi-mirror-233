{"ast":null,"code":"var _jsxFileName = \"/Users/maciel/Projects/aiconsole/web/src/app.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useState, useRef, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './code_block';\nimport { CommandInput } from './components/command_input';\nimport TrashIcon from '@heroicons/react/24/solid/TrashIcon';\nimport { Pill } from './components/pill';\nimport { usePromptStore } from './workspace/prompt_store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [scrolling, setScrolling] = useState(false);\n  const messagesEndRef = useRef(null);\n  const state = usePromptStore(state => ({\n    strategy: state.strategy,\n    mode: state.mode,\n    messages: state.messages,\n    removeMessage: state.removeMessage,\n    setMessages: state.setMessages,\n    manuals: state.manuals\n  }));\n  const timerIdRef = useRef(null);\n  useEffect(() => {\n    const {\n      current\n    } = messagesEndRef;\n    if (!current) return;\n    const handleScroll = () => {\n      // If a timer already exists from a previous scroll event, clear it.\n      if (timerIdRef.current) {\n        clearTimeout(timerIdRef.current);\n      }\n      setScrolling(true);\n      timerIdRef.current = setTimeout(() => setScrolling(false), 1000); // Reset scrolling after 1 second.\n    };\n\n    current.addEventListener('scroll', handleScroll);\n    return () => {\n      current.removeEventListener('scroll', handleScroll);\n      // It's important to also clear the timer when the component unmounts.\n      if (timerIdRef.current) {\n        clearTimeout(timerIdRef.current);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const {\n      current\n    } = messagesEndRef;\n    if (!current || scrolling) return; // Check if scrolling is true, if so return without updating scrollTop\n\n    if (Math.abs(current.scrollTop - (current.scrollHeight - current.clientHeight)) < 300) {\n      let newValue = Math.max(current.scrollHeight - current.clientHeight, 0);\n      current.scrollTop = newValue;\n    }\n  }, [state.messages, scrolling]); // Added scrolling as a dependency.\n\n  const handleSubmit = useCallback(async prompt => {\n    let newMessages = [...state.messages, {\n      role: 'user',\n      content: prompt\n    }];\n    state.setMessages(newMessages);\n    let postRequest = async messages => {\n      return await fetch(`http://${window.location.hostname}:8000/gpt`, {\n        method: 'POST',\n        body: JSON.stringify({\n          messages: messages,\n          model: 'gpt-4'\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    };\n    let handleResponse = async (messages, response) => {\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8');\n      let newMessages = [...messages, {\n        role: 'assistant',\n        content: ''\n      }];\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        let text = decoder.decode(value);\n        if (text.includes('§§§§§CLEAR§§§§§')) {\n          newMessages[newMessages.length - 1].content = '';\n          //delete everything up to $$$CLEAR$$$ in text\n          text = text.substring(text.indexOf('§§§§§CLEAR§§§§§') + 15);\n        }\n        newMessages[newMessages.length - 1].content += text;\n        state.setMessages(newMessages.slice());\n        //console.log(newMessages);\n\n        if (done) {\n          break;\n        }\n      }\n    };\n    let response = await postRequest(newMessages);\n    await handleResponse(newMessages, response);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App flex flex-col fixed top-0 left-0 bottom-0 right-0 p-5 justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto flex flex-col\",\n      ref: messagesEndRef,\n      children: state.messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: state.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center max-w-900px w-full px-5 py-5 rounded-lg bg-slate-700  shadow-lg mb-5 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prose prose-stone dark:prose-invert\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              components: {\n                code: ({\n                  node,\n                  ...props\n                }) => /*#__PURE__*/_jsxDEV(CodeBlock, {\n                  language: props.lang,\n                  val: node.children.map(e => e.value).join(' ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 25\n                }, this)\n              },\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => state.removeMessage(index),\n            className: \" self-start\",\n            children: [/*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(CommandInput, {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Strategy: \", /*#__PURE__*/_jsxDEV(Pill, {\n          color: \"red\",\n          children: state.strategy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Mode: \", /*#__PURE__*/_jsxDEV(Pill, {\n          color: \"blue\",\n          children: state.mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Manuals:\", state.manuals.map(manual => /*#__PURE__*/_jsxDEV(Pill, {\n          color: \"red\",\n          children: manual.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 41\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Memory: \", /*#__PURE__*/_jsxDEV(Pill, {\n          color: \"green\",\n          children: [state.usedTokens / state.availableTokens, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4039MogYaCJd44wRkOnzGwnD5qc=\", false, function () {\n  return [usePromptStore];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useState","useRef","useEffect","ReactMarkdown","CodeBlock","CommandInput","TrashIcon","Pill","usePromptStore","jsxDEV","_jsxDEV","App","_s","scrolling","setScrolling","messagesEndRef","state","strategy","mode","messages","removeMessage","setMessages","manuals","timerIdRef","current","handleScroll","clearTimeout","setTimeout","addEventListener","removeEventListener","Math","abs","scrollTop","scrollHeight","clientHeight","newValue","max","handleSubmit","prompt","newMessages","role","content","postRequest","fetch","window","location","hostname","method","body","JSON","stringify","model","headers","handleResponse","response","reader","getReader","decoder","TextDecoder","value","done","read","text","decode","includes","length","substring","indexOf","slice","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","components","code","node","props","language","lang","val","e","join","onClick","onSubmit","color","manual","name","usedTokens","availableTokens","_c","$RefreshReg$"],"sources":["/Users/maciel/Projects/aiconsole/web/src/app.tsx"],"sourcesContent":["import { useCallback, useState, useRef, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './code_block';\nimport { CommandInput } from './components/command_input';\nimport TrashIcon from '@heroicons/react/24/solid/TrashIcon';\nimport { Pill } from './components/pill';\nimport { usePromptStore, GPTMessage } from './workspace/prompt_store';\n\nfunction App() {\n  const [scrolling, setScrolling] = useState<boolean>(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const state = usePromptStore((state) => ({\n    strategy: state.strategy,\n    mode: state.mode,\n    messages: state.messages,\n    removeMessage: state.removeMessage,\n    setMessages: state.setMessages,\n    manuals: state.manuals\n  }));\n  \n\n  const timerIdRef = useRef<NodeJS.Timeout | null>(null);\n  useEffect(() => {\n    const { current } = messagesEndRef;\n    if (!current) return;\n\n    const handleScroll = () => {\n      // If a timer already exists from a previous scroll event, clear it.\n      if (timerIdRef.current) {\n        clearTimeout(timerIdRef.current);\n      }\n      setScrolling(true);\n      timerIdRef.current = setTimeout(() => setScrolling(false), 1000); // Reset scrolling after 1 second.\n    };\n\n    current.addEventListener('scroll', handleScroll);\n    return () => {\n      current.removeEventListener('scroll', handleScroll);\n      // It's important to also clear the timer when the component unmounts.\n      if (timerIdRef.current) {\n        clearTimeout(timerIdRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const { current } = messagesEndRef;\n    if (!current || scrolling) return; // Check if scrolling is true, if so return without updating scrollTop\n\n    if (Math.abs(current.scrollTop - (current.scrollHeight - current.clientHeight)) < 300) {\n      let newValue = Math.max(current.scrollHeight - current.clientHeight, 0);\n      current.scrollTop = newValue;\n    }\n  }, [state.messages, scrolling]); // Added scrolling as a dependency.\n\n  const handleSubmit = useCallback(\n    async (prompt: string) => {\n      let newMessages = [...state.messages, { role: 'user', content: prompt }];\n      state.setMessages(newMessages);\n\n      let postRequest = async (messages: GPTMessage[]) => {\n        return await fetch(`http://${window.location.hostname}:8000/gpt`, {\n          method: 'POST',\n          body: JSON.stringify({\n            messages: messages,\n            model: 'gpt-4',\n          }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n      };\n\n      let handleResponse = async (messages: GPTMessage[], response: any) => {\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder('utf-8');\n\n        let newMessages = [...messages, { role: 'assistant', content: '' }];\n\n        while (true) {\n          const { value, done } = await reader.read();\n          let text = decoder.decode(value);\n          if (text.includes('§§§§§CLEAR§§§§§')) {\n            newMessages[newMessages.length - 1].content = '';\n            //delete everything up to $$$CLEAR$$$ in text\n            text = text.substring(text.indexOf('§§§§§CLEAR§§§§§') + 15);\n          }\n\n          newMessages[newMessages.length - 1].content += text;\n          state.setMessages(newMessages.slice());\n          //console.log(newMessages);\n\n          if (done) {\n            break;\n          }\n        }\n      };\n\n      let response = await postRequest(newMessages);\n\n      await handleResponse(newMessages, response);\n    },\n    [state],\n  );\n\n  return (\n    <div className=\"App flex flex-col fixed top-0 left-0 bottom-0 right-0 p-5 justify-between\">\n      <div className=\"flex-grow overflow-y-auto flex flex-col\" ref={messagesEndRef}>\n        {state.messages.length === 0 ? (\n          <div>No messages</div>\n        ) : (\n          <div>\n            {state.messages.map((message, index) => (\n              <div\n                key={index}\n                className=\"flex justify-between items-center max-w-900px w-full px-5 py-5 rounded-lg bg-slate-700  shadow-lg mb-5 \"\n              >\n                <div className=\"prose prose-stone dark:prose-invert\">\n                  <ReactMarkdown\n                    components={{\n                      code: ({ node, ...props }) => (\n                        <CodeBlock\n                          language={props.lang}\n                          val={node.children.map((e) => (e as any).value).join(' ')}\n                        />\n                      ),\n                    }}\n                  >\n                    {message.content}\n                  </ReactMarkdown>\n                </div>\n                <button onClick={() => state.removeMessage(index)} className=\" self-start\">\n                  <TrashIcon className=\"h-5 w-5 text-white\" />{' '}\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      <div className=\"\">\n        <CommandInput onSubmit={handleSubmit} />\n      </div>\n      <div className=\"flex flex-row gap-2\">\n        <div>\n          Strategy: <Pill color=\"red\">{state.strategy}</Pill>\n        </div>\n        <div>\n          Mode: <Pill color=\"blue\">{state.mode}</Pill>\n        </div>\n        <div>\n          Manuals: \n          {\n            state.manuals.map(manual => <Pill color=\"red\">{manual.name}</Pill>)\n          }\n        </div>\n        <div>\n          Memory: <Pill color=\"green\">{\n            state.usedTokens / state.availableTokens\n          }%</Pill>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}