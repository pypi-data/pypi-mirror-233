{"ast":null,"code":"var _jsxFileName = \"/Users/maciel/Projects/aiconsole/web/src/app.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useState, useRef, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './code_block';\nimport { CommandInput } from './components/command_input';\nimport TrashIcon from '@heroicons/react/24/solid/TrashIcon';\n//import \"highlight.js/styles/dracula.css\"; // use dracula.css as highlight.js theme\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [lastScroll, setLastScroll] = useState(0);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const {\n      current\n    } = containerRef;\n    if (!current) return;\n    if (current.scrollTop + current.clientHeight === current.scrollHeight) {\n      current.scrollTo({\n        top: current.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      let newValue = Math.max(messagesEndRef.current.scrollHeight - messagesEndRef.current.clientHeight, 0);\n      if (newValue !== lastScroll) {\n        setLastScroll(newValue);\n        console.log(lastScroll, newValue);\n        messagesEndRef.current.scrollTop = newValue;\n      }\n    }\n  }, [messages, lastScroll]);\n  const removeMessage = index => {\n    setMessages(oldMessages => {\n      return messages.filter((_, i) => i !== index);\n    });\n  };\n  const handleSubmit = useCallback(async prompt => {\n    let newMessages = [...messages, {\n      role: 'user',\n      content: prompt\n    }];\n    setMessages(newMessages);\n    let postRequest = async messages => {\n      console.log(messages);\n      return await fetch(`http://${window.location.hostname}:8000/gpt`, {\n        method: 'POST',\n        body: JSON.stringify({\n          messages: messages,\n          model: 'gpt-4'\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    };\n    let handleResponse = async (messages, response) => {\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8');\n      let newMessages = [...messages, {\n        role: 'assistant',\n        content: ''\n      }];\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        let text = decoder.decode(value);\n        console.log(text);\n        if (text.includes('§§§§§CLEAR§§§§§')) {\n          newMessages[newMessages.length - 1].content = '';\n          //delete everything up to $$$CLEAR$$$ in text\n          text = text.substring(text.indexOf('§§§§§CLEAR§§§§§') + 15);\n        }\n        newMessages[newMessages.length - 1].content += text;\n        setMessages(newMessages.slice());\n        //console.log(newMessages);\n\n        if (done) {\n          break;\n        }\n      }\n    };\n    let response = await postRequest(newMessages);\n    await handleResponse(newMessages, response);\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App flex flex-col fixed top-0 left-0 bottom-0 right-0 p-5 justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto flex flex-col\",\n      ref: containerRef,\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center max-w-900px w-full px-5 py-5 rounded-lg bg-slate-700  shadow-lg mb-5 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prose prose-stone dark:prose-invert\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              components: {\n                code: ({\n                  node,\n                  ...props\n                }) => /*#__PURE__*/_jsxDEV(CodeBlock, {\n                  language: props.lang,\n                  val: node.children.map(e => e.value).join(' ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 25\n                }, this)\n              },\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeMessage(index),\n            className: \" self-start\",\n            children: [/*#__PURE__*/_jsxDEV(TrashIcon, {\n              className: \"h-5 w-5 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(CommandInput, {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+QVjeTcZTJ3Ryj7bv2OS8FqPcv4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useState","useRef","useEffect","ReactMarkdown","CodeBlock","CommandInput","TrashIcon","jsxDEV","_jsxDEV","App","_s","messages","setMessages","lastScroll","setLastScroll","messagesEndRef","current","containerRef","scrollTop","clientHeight","scrollHeight","scrollTo","top","behavior","newValue","Math","max","console","log","removeMessage","index","oldMessages","filter","_","i","handleSubmit","prompt","newMessages","role","content","postRequest","fetch","window","location","hostname","method","body","JSON","stringify","model","headers","handleResponse","response","reader","getReader","decoder","TextDecoder","value","done","read","text","decode","includes","length","substring","indexOf","slice","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","map","message","components","code","node","props","language","lang","val","e","join","onClick","onSubmit","_c","$RefreshReg$"],"sources":["/Users/maciel/Projects/aiconsole/web/src/app.tsx"],"sourcesContent":["import { useCallback, useState, useRef, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './code_block';\nimport { CommandInput } from './components/command_input';\nimport TrashIcon from '@heroicons/react/24/solid/TrashIcon';\n//import \"highlight.js/styles/dracula.css\"; // use dracula.css as highlight.js theme\n\ntype Message = {\n  role: string;\n  content: string;\n};\n\nfunction App() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [lastScroll, setLastScroll] = useState<number>(0);\n\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const { current } = containerRef;\n    if (!current) return;\n\n    if (current.scrollTop + current.clientHeight === current.scrollHeight) {\n      current.scrollTo({ top: current.scrollHeight, behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      let newValue = Math.max(\n        messagesEndRef.current.scrollHeight - messagesEndRef.current.clientHeight,\n        0,\n      );\n      if (newValue !== lastScroll) {\n        setLastScroll(newValue);\n        console.log(lastScroll, newValue);\n        messagesEndRef.current.scrollTop = newValue;\n      }\n    }\n  }, [messages, lastScroll]);\n\n  const removeMessage = (index: number) => {\n    setMessages((oldMessages) => {\n      return messages.filter((_, i) => i !== index);\n    });\n  };\n\n  const handleSubmit = useCallback(\n    async (prompt: string) => {\n      let newMessages = [...messages, { role: 'user', content: prompt }];\n      setMessages(newMessages);\n\n      let postRequest = async (messages: Message[]) => {\n        console.log(messages);\n        return await fetch(`http://${window.location.hostname}:8000/gpt`, {\n          method: 'POST',\n          body: JSON.stringify({\n            messages: messages,\n            model: 'gpt-4',\n          }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n      };\n\n      let handleResponse = async (messages: Message[], response: any) => {\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder('utf-8');\n\n        let newMessages = [...messages, { role: 'assistant', content: '' }];\n\n        while (true) {\n          const { value, done } = await reader.read();\n          let text = decoder.decode(value);\n          console.log(text);\n          if (text.includes('§§§§§CLEAR§§§§§')) {\n            newMessages[newMessages.length - 1].content = '';\n            //delete everything up to $$$CLEAR$$$ in text\n            text = text.substring(text.indexOf('§§§§§CLEAR§§§§§') + 15);\n          }\n\n          newMessages[newMessages.length - 1].content += text;\n          setMessages(newMessages.slice());\n          //console.log(newMessages);\n\n          if (done) {\n            break;\n          }\n        }\n      };\n\n      let response = await postRequest(newMessages);\n\n      await handleResponse(newMessages, response);\n    },\n    [messages],\n  );\n\n  return (\n    <div className=\"App flex flex-col fixed top-0 left-0 bottom-0 right-0 p-5 justify-between\">\n      <div\n        className=\"flex-grow overflow-y-auto flex flex-col\"\n        ref={containerRef} \n      >\n        {messages.length === 0 ? (\n          <div>No messages</div>\n        ) : (\n          <div>\n            {messages.map((message, index) => (\n              <div key={index}\n                className=\"flex justify-between items-center max-w-900px w-full px-5 py-5 rounded-lg bg-slate-700  shadow-lg mb-5 \"\n              >\n                <div className=\"prose prose-stone dark:prose-invert\">\n                  <ReactMarkdown\n                    components={{\n                      code: ({ node, ...props }) => (\n                        <CodeBlock\n                          language={props.lang}\n                          val={node.children.map((e) => (e as any).value).join(' ')}\n                        />\n                      ),\n                    }}\n                  >\n                    {message.content}\n                  </ReactMarkdown>\n                </div>\n                <button onClick={() => removeMessage(index)} className=\" self-start\">\n                  <TrashIcon className=\"h-5 w-5 text-white\" />{' '}\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      <div className=\"\">\n        <CommandInput onSubmit={handleSubmit} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}