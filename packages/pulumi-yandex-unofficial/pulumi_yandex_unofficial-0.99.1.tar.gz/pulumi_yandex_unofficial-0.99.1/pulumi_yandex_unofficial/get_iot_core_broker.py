# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetIotCoreBrokerResult',
    'AwaitableGetIotCoreBrokerResult',
    'get_iot_core_broker',
    'get_iot_core_broker_output',
]

@pulumi.output_type
class GetIotCoreBrokerResult:
    """
    A collection of values returned by getIotCoreBroker.
    """
    def __init__(__self__, broker_id=None, certificates=None, created_at=None, description=None, folder_id=None, id=None, labels=None, name=None):
        if broker_id and not isinstance(broker_id, str):
            raise TypeError("Expected argument 'broker_id' to be a str")
        pulumi.set(__self__, "broker_id", broker_id)
        if certificates and not isinstance(certificates, list):
            raise TypeError("Expected argument 'certificates' to be a list")
        pulumi.set(__self__, "certificates", certificates)
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if folder_id and not isinstance(folder_id, str):
            raise TypeError("Expected argument 'folder_id' to be a str")
        pulumi.set(__self__, "folder_id", folder_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if labels and not isinstance(labels, dict):
            raise TypeError("Expected argument 'labels' to be a dict")
        pulumi.set(__self__, "labels", labels)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="brokerId")
    def broker_id(self) -> Optional[str]:
        return pulumi.get(self, "broker_id")

    @property
    @pulumi.getter
    def certificates(self) -> Sequence[str]:
        """
        A set of certificates fingerprints for the IoT Core Broker
        """
        return pulumi.get(self, "certificates")

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> str:
        """
        Creation timestamp of the IoT Core Broker
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Description of the IoT Core Broker
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="folderId")
    def folder_id(self) -> Optional[str]:
        return pulumi.get(self, "folder_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def labels(self) -> Mapping[str, str]:
        """
        A set of key/value label pairs to assign to the IoT Core Broker.
        """
        return pulumi.get(self, "labels")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")


class AwaitableGetIotCoreBrokerResult(GetIotCoreBrokerResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIotCoreBrokerResult(
            broker_id=self.broker_id,
            certificates=self.certificates,
            created_at=self.created_at,
            description=self.description,
            folder_id=self.folder_id,
            id=self.id,
            labels=self.labels,
            name=self.name)


def get_iot_core_broker(broker_id: Optional[str] = None,
                        folder_id: Optional[str] = None,
                        name: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIotCoreBrokerResult:
    """
    Get information about a Yandex IoT Core Broker. For more information IoT Core, see
    [Yandex.Cloud IoT Broker](https://cloud.yandex.com/docs/iot-core/quickstart).

    The service is at the Preview stage.

    ```python
    import pulumi
    import pulumi_yandex as yandex

    my_broker = yandex.get_iot_core_broker(broker_id="are1samplebroker11")
    ```

    This data source is used to define [Yandex.Cloud IoT Broker](https://cloud.yandex.com/docs/iot-core/quickstart) that can be used by other resources.


    :param str broker_id: IoT Core Broker id used to define broker
    :param str folder_id: Folder ID for the IoT Core Broker
    :param str name: IoT Core Broker name used to define broker
    """
    __args__ = dict()
    __args__['brokerId'] = broker_id
    __args__['folderId'] = folder_id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('yandex:index/getIotCoreBroker:getIotCoreBroker', __args__, opts=opts, typ=GetIotCoreBrokerResult).value

    return AwaitableGetIotCoreBrokerResult(
        broker_id=__ret__.broker_id,
        certificates=__ret__.certificates,
        created_at=__ret__.created_at,
        description=__ret__.description,
        folder_id=__ret__.folder_id,
        id=__ret__.id,
        labels=__ret__.labels,
        name=__ret__.name)


@_utilities.lift_output_func(get_iot_core_broker)
def get_iot_core_broker_output(broker_id: Optional[pulumi.Input[Optional[str]]] = None,
                               folder_id: Optional[pulumi.Input[Optional[str]]] = None,
                               name: Optional[pulumi.Input[Optional[str]]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetIotCoreBrokerResult]:
    """
    Get information about a Yandex IoT Core Broker. For more information IoT Core, see
    [Yandex.Cloud IoT Broker](https://cloud.yandex.com/docs/iot-core/quickstart).

    The service is at the Preview stage.

    ```python
    import pulumi
    import pulumi_yandex as yandex

    my_broker = yandex.get_iot_core_broker(broker_id="are1samplebroker11")
    ```

    This data source is used to define [Yandex.Cloud IoT Broker](https://cloud.yandex.com/docs/iot-core/quickstart) that can be used by other resources.


    :param str broker_id: IoT Core Broker id used to define broker
    :param str folder_id: Folder ID for the IoT Core Broker
    :param str name: IoT Core Broker name used to define broker
    """
    ...
