Metadata-Version: 2.1
Name: prefect-openmetadata
Version: 0.3.0
Summary: Prefect integration with OpenMetadata
Home-page: https://github.com/PrefectHQ/prefect-openmetadata
Author: prefect-openmetadata
Author-email: anna@prefect.io
License: Apache License 2.0
Keywords: prefect
Classifier: Natural Language :: English
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: prefect
Requires-Dist: openmetadata-ingestion[docker]
Provides-Extra: dev
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: black ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: mypy ; extra == 'dev'
Requires-Dist: mkdocs ; extra == 'dev'
Requires-Dist: mkdocs-material ; extra == 'dev'
Requires-Dist: mkdocstrings[python] ; extra == 'dev'
Requires-Dist: isort ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'
Requires-Dist: pytest-asyncio ; extra == 'dev'
Requires-Dist: mkdocs-gen-files ; extra == 'dev'
Requires-Dist: interrogate ; extra == 'dev'
Requires-Dist: coverage ; extra == 'dev'
Requires-Dist: openmetadata-ingestion ; extra == 'dev'
Requires-Dist: mock ; (python_version < "3.8") and extra == 'dev'

# prefect-openmetadata

## Welcome!

Using [Prefect](https://prefect.io/) and [OpenMetadata](https://open-metadata.org/) together will help you build and maintain a **data platform you can trust**. 

Prefect allows you to coordinate your dataflow and provides visibility into the health of your **workflow execution** and **workflow lineage**. With OpenMetadata integration, you can enrich your orchestration system with metadata about data lineage, data catalog, data quality and governance, giving you more information about the health of your system. 


## Getting Started


### Python setup

Requires an installation of Python 3.8+.

We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv.

### Installation

Install `prefect-openmetadata` with `pip`:

```bash
pip install prefect-openmetadata
```

### Install `OpenMetadata` and ``Prefect``

Head over to the [install OpenMetadata](install_openmetadata.md) page for detailed instructions on how to install and configure both platforms.

### Write and run metadata ingestion flow

```python
from prefect_openmetadata.flows import ingest_metadata

config = """See an example in the section: Run ingestion flow"""

if __name__ == "__main__":
    ingest_metadata(config)
```

For more details, check the [run ingestion flow](docs/run_ingestion_flow.md) section.

### Schedule a metadata ingestion flow

Simple example:
```bash
prefect deployment build -a -n dev myflow.py:ingest_metadata --interval 900
```

For more details, check the [schedule ingestion flow](schedule_ingestion_flow.md) section.


## Resources

If you encounter any bugs while using `prefect-openmetadata`, feel free to open an issue in the [prefect-openmetadata](https://github.com/PrefectHQ/prefect-openmetadata) repository.

If you have any questions or issues while using `prefect-openmetadata`, you can find help in either the [Prefect Discourse forum](https://discourse.prefect.io/) or the [Prefect Slack community](https://prefect.io/slack).


## Development

If you'd like to install a version of `prefect-openmetadata` for development, clone the repository and perform an editable install with `pip`:

```bash
git clone https://github.com/PrefectHQ/prefect-openmetadata.git

cd prefect-openmetadata/

pip install -e ".[dev]"

# Install linting pre-commit hooks
pre-commit install
```
