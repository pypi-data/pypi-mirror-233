# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AccountTemplateResponse(Model):
    """AccountTemplateResponse.

    :param form_template_id: The meter form template identifier
    :type form_template_id: int
    :param template_info: The template name
    :type template_info: str
    :param template_code: The template code
    :type template_code: str
    :param start_date: The start date for the form template on the account
     meter
    :type start_date: datetime
    :param end_date: The end date for the form template on the account meter
    :type end_date: datetime
    :param display_order: The form template's display order
    :type display_order: int
    :param meter:
    :type meter: ~energycap.sdk.models.AccountMeterChild
    """

    _attribute_map = {
        'form_template_id': {'key': 'formTemplateId', 'type': 'int'},
        'template_info': {'key': 'templateInfo', 'type': 'str'},
        'template_code': {'key': 'templateCode', 'type': 'str'},
        'start_date': {'key': 'startDate', 'type': 'iso-8601'},
        'end_date': {'key': 'endDate', 'type': 'iso-8601'},
        'display_order': {'key': 'displayOrder', 'type': 'int'},
        'meter': {'key': 'meter', 'type': 'AccountMeterChild'},
    }

    def __init__(self, **kwargs):
        super(AccountTemplateResponse, self).__init__(**kwargs)
        self.form_template_id = kwargs.get('form_template_id', None)
        self.template_info = kwargs.get('template_info', None)
        self.template_code = kwargs.get('template_code', None)
        self.start_date = kwargs.get('start_date', None)
        self.end_date = kwargs.get('end_date', None)
        self.display_order = kwargs.get('display_order', None)
        self.meter = kwargs.get('meter', None)
