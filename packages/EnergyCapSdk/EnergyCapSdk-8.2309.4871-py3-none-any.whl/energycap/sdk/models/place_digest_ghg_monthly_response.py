# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PlaceDigestGHGMonthlyResponse(Model):
    """PlaceDigestGHGMonthlyResponse.

    :param place_code: The place code
    :type place_code: str
    :param place_info: The place info
    :type place_info: str
    :param place_id: The place identifier
    :type place_id: int
    :param updated: The date and time the data was updated
    :type updated: datetime
    :param equivalent_co2_emissions_unit:
    :type equivalent_co2_emissions_unit: ~energycap.sdk.models.UnitChild
    :param ghg_types: List of greenhouse gas types with use by month
    :type ghg_types:
     list[~energycap.sdk.models.PlaceDigestGHGMonthlyResponseGHGType]
    :param ghg_scopes: List of greenhouse gas scopes with use by month
    :type ghg_scopes:
     list[~energycap.sdk.models.PlaceDigestGHGMonthlyResponseGHGScope]
    :param commodities: List of greenhouse gas commodities with use by month
    :type commodities:
     list[~energycap.sdk.models.PlaceDigestGHGMonthlyResponseGHGCommodity]
    """

    _attribute_map = {
        'place_code': {'key': 'placeCode', 'type': 'str'},
        'place_info': {'key': 'placeInfo', 'type': 'str'},
        'place_id': {'key': 'placeId', 'type': 'int'},
        'updated': {'key': 'updated', 'type': 'iso-8601'},
        'equivalent_co2_emissions_unit': {'key': 'equivalentCO2EmissionsUnit', 'type': 'UnitChild'},
        'ghg_types': {'key': 'ghgTypes', 'type': '[PlaceDigestGHGMonthlyResponseGHGType]'},
        'ghg_scopes': {'key': 'ghgScopes', 'type': '[PlaceDigestGHGMonthlyResponseGHGScope]'},
        'commodities': {'key': 'commodities', 'type': '[PlaceDigestGHGMonthlyResponseGHGCommodity]'},
    }

    def __init__(self, **kwargs):
        super(PlaceDigestGHGMonthlyResponse, self).__init__(**kwargs)
        self.place_code = kwargs.get('place_code', None)
        self.place_info = kwargs.get('place_info', None)
        self.place_id = kwargs.get('place_id', None)
        self.updated = kwargs.get('updated', None)
        self.equivalent_co2_emissions_unit = kwargs.get('equivalent_co2_emissions_unit', None)
        self.ghg_types = kwargs.get('ghg_types', None)
        self.ghg_scopes = kwargs.get('ghg_scopes', None)
        self.commodities = kwargs.get('commodities', None)
