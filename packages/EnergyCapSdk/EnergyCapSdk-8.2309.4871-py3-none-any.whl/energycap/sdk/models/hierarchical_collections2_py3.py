# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class HierarchicalCollections2(Model):
    """HierarchicalCollections2.

    :param parent_id:
    :type parent_id: int
    :param collection_id:
    :type collection_id: int
    :param collection_info:
    :type collection_info: str
    :param collection_code:
    :type collection_code: str
    :param collection_icon:
    :type collection_icon: ~energycap.sdk.models.Icon
    :param has_children:
    :type has_children: bool
    :param has_collection_children:
    :type has_collection_children: bool
    :param has_emission_source_children:
    :type has_emission_source_children: bool
    :param has_active_children:
    :type has_active_children: bool
    :param has_active_emission_source_children:
    :type has_active_emission_source_children: bool
    :param emission_source_children:
    :type emission_source_children:
     list[~energycap.sdk.models.HierarchicalEmissionSource]
    :param collection_children:
    :type collection_children:
     list[~energycap.sdk.models.HierarchicalCollections]
    """

    _attribute_map = {
        'parent_id': {'key': 'parentId', 'type': 'int'},
        'collection_id': {'key': 'collectionId', 'type': 'int'},
        'collection_info': {'key': 'collectionInfo', 'type': 'str'},
        'collection_code': {'key': 'collectionCode', 'type': 'str'},
        'collection_icon': {'key': 'collectionIcon', 'type': 'Icon'},
        'has_children': {'key': 'hasChildren', 'type': 'bool'},
        'has_collection_children': {'key': 'hasCollectionChildren', 'type': 'bool'},
        'has_emission_source_children': {'key': 'hasEmissionSourceChildren', 'type': 'bool'},
        'has_active_children': {'key': 'hasActiveChildren', 'type': 'bool'},
        'has_active_emission_source_children': {'key': 'hasActiveEmissionSourceChildren', 'type': 'bool'},
        'emission_source_children': {'key': 'emissionSourceChildren', 'type': '[HierarchicalEmissionSource]'},
        'collection_children': {'key': 'collectionChildren', 'type': '[HierarchicalCollections]'},
    }

    def __init__(self, *, parent_id: int=None, collection_id: int=None, collection_info: str=None, collection_code: str=None, collection_icon=None, has_children: bool=None, has_collection_children: bool=None, has_emission_source_children: bool=None, has_active_children: bool=None, has_active_emission_source_children: bool=None, emission_source_children=None, collection_children=None, **kwargs) -> None:
        super(HierarchicalCollections2, self).__init__(**kwargs)
        self.parent_id = parent_id
        self.collection_id = collection_id
        self.collection_info = collection_info
        self.collection_code = collection_code
        self.collection_icon = collection_icon
        self.has_children = has_children
        self.has_collection_children = has_collection_children
        self.has_emission_source_children = has_emission_source_children
        self.has_active_children = has_active_children
        self.has_active_emission_source_children = has_active_emission_source_children
        self.emission_source_children = emission_source_children
        self.collection_children = collection_children
