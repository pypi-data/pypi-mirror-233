# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class VendorDigestActualYearlyResponse(Model):
    """VendorDigestActualYearlyResponse.

    :param vendor_code: The vendor code
    :type vendor_code: str
    :param vendor_info: The vendor info
    :type vendor_info: str
    :param vendor_id: The vendor identifier
    :type vendor_id: int
    :param global_use_unit:
    :type global_use_unit: ~energycap.sdk.models.UnitChild
    :param cost_unit:
    :type cost_unit: ~energycap.sdk.models.UnitChild
    :param updated: The date and time the data was updated
    :type updated: datetime
    :param results: An array of yearly data
    :type results:
     list[~energycap.sdk.models.VendorDigestActualYearlyResponseResults]
    :param commodities: An array of yearly data per commodity
    :type commodities:
     list[~energycap.sdk.models.VendorDigestActualYearlyResponseCommodityData]
    """

    _attribute_map = {
        'vendor_code': {'key': 'vendorCode', 'type': 'str'},
        'vendor_info': {'key': 'vendorInfo', 'type': 'str'},
        'vendor_id': {'key': 'vendorId', 'type': 'int'},
        'global_use_unit': {'key': 'globalUseUnit', 'type': 'UnitChild'},
        'cost_unit': {'key': 'costUnit', 'type': 'UnitChild'},
        'updated': {'key': 'updated', 'type': 'iso-8601'},
        'results': {'key': 'results', 'type': '[VendorDigestActualYearlyResponseResults]'},
        'commodities': {'key': 'commodities', 'type': '[VendorDigestActualYearlyResponseCommodityData]'},
    }

    def __init__(self, **kwargs):
        super(VendorDigestActualYearlyResponse, self).__init__(**kwargs)
        self.vendor_code = kwargs.get('vendor_code', None)
        self.vendor_info = kwargs.get('vendor_info', None)
        self.vendor_id = kwargs.get('vendor_id', None)
        self.global_use_unit = kwargs.get('global_use_unit', None)
        self.cost_unit = kwargs.get('cost_unit', None)
        self.updated = kwargs.get('updated', None)
        self.results = kwargs.get('results', None)
        self.commodities = kwargs.get('commodities', None)
