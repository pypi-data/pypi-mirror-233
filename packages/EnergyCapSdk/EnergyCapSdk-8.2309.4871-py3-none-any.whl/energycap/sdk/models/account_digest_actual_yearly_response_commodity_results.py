# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AccountDigestActualYearlyResponseCommodityResults(Model):
    """AccountDigestActualYearlyResponseCommodityResults.

    :param year: year
    :type year: str
    :param total_cost: Total Cost
    :type total_cost: float
    :param common_use: Common Use
    :type common_use: float
    :param common_use_unit_cost: Common Use Unit Cost
    :type common_use_unit_cost: float
    :param global_use: Global Use
    :type global_use: float
    :param global_use_unit_cost: Global Use Unit Cost
    :type global_use_unit_cost: float
    """

    _attribute_map = {
        'year': {'key': 'year', 'type': 'str'},
        'total_cost': {'key': 'totalCost', 'type': 'float'},
        'common_use': {'key': 'commonUse', 'type': 'float'},
        'common_use_unit_cost': {'key': 'commonUseUnitCost', 'type': 'float'},
        'global_use': {'key': 'globalUse', 'type': 'float'},
        'global_use_unit_cost': {'key': 'globalUseUnitCost', 'type': 'float'},
    }

    def __init__(self, **kwargs):
        super(AccountDigestActualYearlyResponseCommodityResults, self).__init__(**kwargs)
        self.year = kwargs.get('year', None)
        self.total_cost = kwargs.get('total_cost', None)
        self.common_use = kwargs.get('common_use', None)
        self.common_use_unit_cost = kwargs.get('common_use_unit_cost', None)
        self.global_use = kwargs.get('global_use', None)
        self.global_use_unit_cost = kwargs.get('global_use_unit_cost', None)
