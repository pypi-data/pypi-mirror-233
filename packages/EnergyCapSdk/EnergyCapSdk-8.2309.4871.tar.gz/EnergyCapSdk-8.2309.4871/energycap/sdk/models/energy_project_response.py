# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class EnergyProjectResponse(Model):
    """EnergyProjectResponse.

    All required parameters must be populated in order to send to Azure.

    :param energy_project_id: The energy project identifier
    :type energy_project_id: int
    :param energy_project_code: Required. The energy project code <span
     class='property-internal'>Required</span> <span
     class='property-internal'>Must be between 0 and 32 characters</span> <span
     class='property-internal'>Required</span> <span
     class='property-internal'>Must be between 0 and 32 characters</span>
    :type energy_project_code: str
    :param energy_project_info: Required. The energy project info <span
     class='property-internal'>Required</span> <span
     class='property-internal'>Must be between 0 and 50 characters</span> <span
     class='property-internal'>Required</span> <span
     class='property-internal'>Must be between 0 and 50 characters</span>
    :type energy_project_info: str
    :param installation_begin_date: The energy project installation begin date
    :type installation_begin_date: datetime
    :param installation_end_date: The energy project installation end date
    :type installation_end_date: datetime
    :param installation_cost: The energy project installation cost
    :type installation_cost: float
    :param utility_rebate: The rebate amount of energy project
    :type utility_rebate: float
    :param funding_source: The funding source of the project
    :type funding_source: str
    :param project_manager: The project manager of the energy project
    :type project_manager: str
    :param note: The miscellaneous note about the project
    :type note: str
    :param energy_savings:
    :type energy_savings: ~energycap.sdk.models.EnergySavingsChild
    :param cost_savings:
    :type cost_savings: ~energycap.sdk.models.CostSavingsChild
    :param place:
    :type place: ~energycap.sdk.models.EnergyProjectPlaceChild
    :param energy_project_type:
    :type energy_project_type: ~energycap.sdk.models.EnergyProjectType
    """

    _validation = {
        'energy_project_code': {'required': True, 'max_length': 32, 'min_length': 0},
        'energy_project_info': {'required': True, 'max_length': 50, 'min_length': 0},
    }

    _attribute_map = {
        'energy_project_id': {'key': 'energyProjectId', 'type': 'int'},
        'energy_project_code': {'key': 'energyProjectCode', 'type': 'str'},
        'energy_project_info': {'key': 'energyProjectInfo', 'type': 'str'},
        'installation_begin_date': {'key': 'installationBeginDate', 'type': 'iso-8601'},
        'installation_end_date': {'key': 'installationEndDate', 'type': 'iso-8601'},
        'installation_cost': {'key': 'installationCost', 'type': 'float'},
        'utility_rebate': {'key': 'utilityRebate', 'type': 'float'},
        'funding_source': {'key': 'fundingSource', 'type': 'str'},
        'project_manager': {'key': 'projectManager', 'type': 'str'},
        'note': {'key': 'note', 'type': 'str'},
        'energy_savings': {'key': 'energySavings', 'type': 'EnergySavingsChild'},
        'cost_savings': {'key': 'costSavings', 'type': 'CostSavingsChild'},
        'place': {'key': 'place', 'type': 'EnergyProjectPlaceChild'},
        'energy_project_type': {'key': 'energyProjectType', 'type': 'EnergyProjectType'},
    }

    def __init__(self, **kwargs):
        super(EnergyProjectResponse, self).__init__(**kwargs)
        self.energy_project_id = kwargs.get('energy_project_id', None)
        self.energy_project_code = kwargs.get('energy_project_code', None)
        self.energy_project_info = kwargs.get('energy_project_info', None)
        self.installation_begin_date = kwargs.get('installation_begin_date', None)
        self.installation_end_date = kwargs.get('installation_end_date', None)
        self.installation_cost = kwargs.get('installation_cost', None)
        self.utility_rebate = kwargs.get('utility_rebate', None)
        self.funding_source = kwargs.get('funding_source', None)
        self.project_manager = kwargs.get('project_manager', None)
        self.note = kwargs.get('note', None)
        self.energy_savings = kwargs.get('energy_savings', None)
        self.cost_savings = kwargs.get('cost_savings', None)
        self.place = kwargs.get('place', None)
        self.energy_project_type = kwargs.get('energy_project_type', None)
