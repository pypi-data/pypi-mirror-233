# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class UsersAndRoles(Model):
    """UsersAndRoles.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :param permission_name:
    :type permission_name: str
    :param permission_code:
    :type permission_code: str
    :param view:
    :type view: bool
    :param manage:
    :type manage: bool
    :param description:
    :type description: str
    :param permission_category_name:
    :type permission_category_name: str
    :param is_licensed:
    :type is_licensed: bool
    :ivar license_index:
    :vartype license_index: int
    :param products:
    :type products: list[~energycap.sdk.models.PermissionProduct]
    :param permission_id:
    :type permission_id: int
    """

    _validation = {
        'license_index': {'readonly': True},
    }

    _attribute_map = {
        'permission_name': {'key': 'permissionName', 'type': 'str'},
        'permission_code': {'key': 'permissionCode', 'type': 'str'},
        'view': {'key': 'view', 'type': 'bool'},
        'manage': {'key': 'manage', 'type': 'bool'},
        'description': {'key': 'description', 'type': 'str'},
        'permission_category_name': {'key': 'permissionCategoryName', 'type': 'str'},
        'is_licensed': {'key': 'isLicensed', 'type': 'bool'},
        'license_index': {'key': 'licenseIndex', 'type': 'int'},
        'products': {'key': 'products', 'type': '[PermissionProduct]'},
        'permission_id': {'key': 'permissionId', 'type': 'int'},
    }

    def __init__(self, **kwargs):
        super(UsersAndRoles, self).__init__(**kwargs)
        self.permission_name = kwargs.get('permission_name', None)
        self.permission_code = kwargs.get('permission_code', None)
        self.view = kwargs.get('view', None)
        self.manage = kwargs.get('manage', None)
        self.description = kwargs.get('description', None)
        self.permission_category_name = kwargs.get('permission_category_name', None)
        self.is_licensed = kwargs.get('is_licensed', None)
        self.license_index = None
        self.products = kwargs.get('products', None)
        self.permission_id = kwargs.get('permission_id', None)
