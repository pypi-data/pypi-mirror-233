# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class SavingsLog(Model):
    """SavingsLog.

    :param status: The status of savings processing
    :type status: str
    :param success_count: Number of meters successfully processed
    :type success_count: int
    :param warning_count: Number of bills processed that have warnings across
     all meters processed
     A bill has a "warning" if it had 1) incomplete weather data or 2) exceeded
     the average unit cost range set for its commodity
    :type warning_count: int
    :param error_count: Number of meters processed with errors
    :type error_count: int
    :param number_of_meters: Number of meters to process
    :type number_of_meters: int
    """

    _attribute_map = {
        'status': {'key': 'status', 'type': 'str'},
        'success_count': {'key': 'successCount', 'type': 'int'},
        'warning_count': {'key': 'warningCount', 'type': 'int'},
        'error_count': {'key': 'errorCount', 'type': 'int'},
        'number_of_meters': {'key': 'numberOfMeters', 'type': 'int'},
    }

    def __init__(self, **kwargs):
        super(SavingsLog, self).__init__(**kwargs)
        self.status = kwargs.get('status', None)
        self.success_count = kwargs.get('success_count', None)
        self.warning_count = kwargs.get('warning_count', None)
        self.error_count = kwargs.get('error_count', None)
        self.number_of_meters = kwargs.get('number_of_meters', None)
