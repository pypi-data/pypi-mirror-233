# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Permissions(Model):
    """Permissions.

    :param license_feature_accounting_export:
    :type license_feature_accounting_export:
     ~energycap.sdk.models.LicenseFeatureAccountingExport
    :param license_feature_accrual_bills:
    :type license_feature_accrual_bills:
     ~energycap.sdk.models.LicenseFeatureAccrualBills
    :param license_feature_chargebacks:
    :type license_feature_chargebacks:
     ~energycap.sdk.models.LicenseFeatureChargebacks
    :param license_feature_cost_avoidance:
    :type license_feature_cost_avoidance:
     ~energycap.sdk.models.LicenseFeatureCostAvoidance
    :param license_feature_interval_data_analysis:
    :type license_feature_interval_data_analysis:
     ~energycap.sdk.models.LicenseFeatureIntervalDataAnalysis
    :param license_feature_report_designer:
    :type license_feature_report_designer:
     ~energycap.sdk.models.LicenseFeatureReportDesigner
    :param license_feature_custom_benchmarks:
    :type license_feature_custom_benchmarks:
     ~energycap.sdk.models.LicenseFeatureCustomBenchmarks
    :param license_feature_report_distribution:
    :type license_feature_report_distribution:
     ~energycap.sdk.models.LicenseFeatureReportDistribution
    :param license_feature_ghg:
    :type license_feature_ghg: ~energycap.sdk.models.LicenseFeatureGhg
    :param accounting_settings:
    :type accounting_settings: ~energycap.sdk.models.AccountingSettings
    :param accounts:
    :type accounts: ~energycap.sdk.models.Accounts
    :param accounts_module:
    :type accounts_module: ~energycap.sdk.models.AccountsModule
    :param accrual_settings:
    :type accrual_settings: ~energycap.sdk.models.AccrualSettings
    :param cost_centers:
    :type cost_centers: ~energycap.sdk.models.CostCenters
    :param move_accounts_between_vendors:
    :type move_accounts_between_vendors:
     ~energycap.sdk.models.MoveAccountsBetweenVendors
    :param application_settings:
    :type application_settings: ~energycap.sdk.models.ApplicationSettings
    :param approve_bills:
    :type approve_bills: ~energycap.sdk.models.ApproveBills
    :param bill_workflow_settings:
    :type bill_workflow_settings: ~energycap.sdk.models.BillWorkflowSettings
    :param bills_and_batches:
    :type bills_and_batches: ~energycap.sdk.models.BillsAndBatches
    :param export_bills:
    :type export_bills: ~energycap.sdk.models.ExportBills
    :param export_hold:
    :type export_hold: ~energycap.sdk.models.ExportHold
    :param move_existing_bills:
    :type move_existing_bills: ~energycap.sdk.models.MoveExistingBills
    :param shared_bill_lists:
    :type shared_bill_lists: ~energycap.sdk.models.SharedBillLists
    :param unit_system_settings:
    :type unit_system_settings: ~energycap.sdk.models.UnitSystemSettings
    :param update_approved_bills:
    :type update_approved_bills: ~energycap.sdk.models.UpdateApprovedBills
    :param update_units_on_existing_bills:
    :type update_units_on_existing_bills:
     ~energycap.sdk.models.UpdateUnitsOnExistingBills
    :param budgets_and_budget_versions:
    :type budgets_and_budget_versions:
     ~energycap.sdk.models.BudgetsAndBudgetVersions
    :param chargebacks_module:
    :type chargebacks_module: ~energycap.sdk.models.ChargebacksModule
    :param chargebacks:
    :type chargebacks: ~energycap.sdk.models.Chargebacks
    :param chargeback_reversals:
    :type chargeback_reversals: ~energycap.sdk.models.ChargebackReversals
    :param meter_savings_settings:
    :type meter_savings_settings: ~energycap.sdk.models.MeterSavingsSettings
    :param savings_adjustments:
    :type savings_adjustments: ~energycap.sdk.models.SavingsAdjustments
    :param manually_adjust_savings:
    :type manually_adjust_savings: ~energycap.sdk.models.ManuallyAdjustSavings
    :param savings_engine:
    :type savings_engine: ~energycap.sdk.models.SavingsEngine
    :param baseline_engine:
    :type baseline_engine: ~energycap.sdk.models.BaselineEngine
    :param global_cost_avoidance_settings:
    :type global_cost_avoidance_settings:
     ~energycap.sdk.models.GlobalCostAvoidanceSettings
    :param dashboard_and_maps_module:
    :type dashboard_and_maps_module:
     ~energycap.sdk.models.DashboardAndMapsModule
    :param dashboard_administrator:
    :type dashboard_administrator:
     ~energycap.sdk.models.DashboardAdministrator
    :param public_dashboards_or_maps:
    :type public_dashboards_or_maps:
     ~energycap.sdk.models.PublicDashboardsOrMaps
    :param shared_dashboards_or_maps:
    :type shared_dashboards_or_maps:
     ~energycap.sdk.models.SharedDashboardsOrMaps
    :param buildings_and_meters_module:
    :type buildings_and_meters_module:
     ~energycap.sdk.models.BuildingsAndMetersModule
    :param groups_and_benchmarks_module:
    :type groups_and_benchmarks_module:
     ~energycap.sdk.models.GroupsAndBenchmarksModule
    :param building_and_meter_groups:
    :type building_and_meter_groups:
     ~energycap.sdk.models.BuildingAndMeterGroups
    :param buildings_and_organizations:
    :type buildings_and_organizations:
     ~energycap.sdk.models.BuildingsAndOrganizations
    :param interval_data:
    :type interval_data: ~energycap.sdk.models.IntervalData
    :param interval_data_analysis:
    :type interval_data_analysis: ~energycap.sdk.models.IntervalDataAnalysis
    :param energystar_submissions:
    :type energystar_submissions: ~energycap.sdk.models.ENERGYSTARSubmissions
    :param facility_projects:
    :type facility_projects: ~energycap.sdk.models.FacilityProjects
    :param greenhouse_gas_administrator:
    :type greenhouse_gas_administrator:
     ~energycap.sdk.models.GreenhouseGasAdministrator
    :param interval_data_rollup:
    :type interval_data_rollup: ~energycap.sdk.models.IntervalDataRollup
    :param meters:
    :type meters: ~energycap.sdk.models.Meters
    :param normalization_settings:
    :type normalization_settings: ~energycap.sdk.models.NormalizationSettings
    :param weather_settings:
    :type weather_settings: ~energycap.sdk.models.WeatherSettings
    :param reports_module:
    :type reports_module: ~energycap.sdk.models.ReportsModule
    :param distributed_reports_settings:
    :type distributed_reports_settings:
     ~energycap.sdk.models.DistributedReportsSettings
    :param report_administrator:
    :type report_administrator: ~energycap.sdk.models.ReportAdministrator
    :param report_groups:
    :type report_groups: ~energycap.sdk.models.ReportGroups
    :param shared_reports:
    :type shared_reports: ~energycap.sdk.models.SharedReports
    :param reports:
    :type reports: ~energycap.sdk.models.Reports
    :param reset_user_passwords:
    :type reset_user_passwords: ~energycap.sdk.models.ResetUserPasswords
    :param users_and_user_groups:
    :type users_and_user_groups: ~energycap.sdk.models.UsersAndUserGroups
    :param vendors_and_rates_module:
    :type vendors_and_rates_module:
     ~energycap.sdk.models.VendorsAndRatesModule
    :param rate_schedules:
    :type rate_schedules: ~energycap.sdk.models.RateSchedules
    :param vendors:
    :type vendors: ~energycap.sdk.models.Vendors
    :param flagged_items:
    :type flagged_items: ~energycap.sdk.models.FlaggedItems
    :param bill_list_administrator:
    :type bill_list_administrator: ~energycap.sdk.models.BillListAdministrator
    :param all_installed_reports:
    :type all_installed_reports: ~energycap.sdk.models.AllInstalledReports
    :param send_notifications:
    :type send_notifications: ~energycap.sdk.models.SendNotifications
    :param buildings_and_meters_module_actual_data:
    :type buildings_and_meters_module_actual_data:
     ~energycap.sdk.models.BuildingsAndMetersModuleActualData
    :param buildings_and_meters_module_calendarized_data:
    :type buildings_and_meters_module_calendarized_data:
     ~energycap.sdk.models.BuildingsAndMetersModuleCalendarizedData
    :param buildings_and_meters_module_normalized_data:
    :type buildings_and_meters_module_normalized_data:
     ~energycap.sdk.models.BuildingsAndMetersModuleNormalizedData
    :param buildings_and_meters_module_savings:
    :type buildings_and_meters_module_savings:
     ~energycap.sdk.models.BuildingsAndMetersModuleSavings
    :param buildings_and_meters_module_meter_interval_data:
    :type buildings_and_meters_module_meter_interval_data:
     ~energycap.sdk.models.BuildingsAndMetersModuleMeterIntervalData
    :param buildings_and_meters_module_sustainability:
    :type buildings_and_meters_module_sustainability:
     ~energycap.sdk.models.BuildingsAndMetersModuleSustainability
    :param accounts_module_actual_data:
    :type accounts_module_actual_data:
     ~energycap.sdk.models.AccountsModuleActualData
    :param bills_module:
    :type bills_module: ~energycap.sdk.models.BillsModule
    :param roles:
    :type roles: ~energycap.sdk.models.Roles
    :param users_and_roles:
    :type users_and_roles: ~energycap.sdk.models.UsersAndRoles
    :param emissions_sources_module:
    :type emissions_sources_module:
     ~energycap.sdk.models.EmissionsSourcesModule
    :param collections:
    :type collections: ~energycap.sdk.models.Collections
    :param emissions_sources:
    :type emissions_sources: ~energycap.sdk.models.EmissionsSources
    :param records_module:
    :type records_module: ~energycap.sdk.models.RecordsModule
    :param records:
    :type records: ~energycap.sdk.models.Records
    :param shared_records_lists:
    :type shared_records_lists: ~energycap.sdk.models.SharedRecordsLists
    :param records_list_administrator:
    :type records_list_administrator:
     ~energycap.sdk.models.RecordsListAdministrator
    """

    _attribute_map = {
        'license_feature_accounting_export': {'key': 'licenseFeatureAccountingExport', 'type': 'LicenseFeatureAccountingExport'},
        'license_feature_accrual_bills': {'key': 'licenseFeatureAccrualBills', 'type': 'LicenseFeatureAccrualBills'},
        'license_feature_chargebacks': {'key': 'licenseFeatureChargebacks', 'type': 'LicenseFeatureChargebacks'},
        'license_feature_cost_avoidance': {'key': 'licenseFeatureCostAvoidance', 'type': 'LicenseFeatureCostAvoidance'},
        'license_feature_interval_data_analysis': {'key': 'licenseFeatureIntervalDataAnalysis', 'type': 'LicenseFeatureIntervalDataAnalysis'},
        'license_feature_report_designer': {'key': 'licenseFeatureReportDesigner', 'type': 'LicenseFeatureReportDesigner'},
        'license_feature_custom_benchmarks': {'key': 'licenseFeatureCustomBenchmarks', 'type': 'LicenseFeatureCustomBenchmarks'},
        'license_feature_report_distribution': {'key': 'licenseFeatureReportDistribution', 'type': 'LicenseFeatureReportDistribution'},
        'license_feature_ghg': {'key': 'licenseFeatureGhg', 'type': 'LicenseFeatureGhg'},
        'accounting_settings': {'key': 'accountingSettings', 'type': 'AccountingSettings'},
        'accounts': {'key': 'accounts', 'type': 'Accounts'},
        'accounts_module': {'key': 'accountsModule', 'type': 'AccountsModule'},
        'accrual_settings': {'key': 'accrualSettings', 'type': 'AccrualSettings'},
        'cost_centers': {'key': 'costCenters', 'type': 'CostCenters'},
        'move_accounts_between_vendors': {'key': 'moveAccountsBetweenVendors', 'type': 'MoveAccountsBetweenVendors'},
        'application_settings': {'key': 'applicationSettings', 'type': 'ApplicationSettings'},
        'approve_bills': {'key': 'approveBills', 'type': 'ApproveBills'},
        'bill_workflow_settings': {'key': 'billWorkflowSettings', 'type': 'BillWorkflowSettings'},
        'bills_and_batches': {'key': 'billsAndBatches', 'type': 'BillsAndBatches'},
        'export_bills': {'key': 'exportBills', 'type': 'ExportBills'},
        'export_hold': {'key': 'exportHold', 'type': 'ExportHold'},
        'move_existing_bills': {'key': 'moveExistingBills', 'type': 'MoveExistingBills'},
        'shared_bill_lists': {'key': 'sharedBillLists', 'type': 'SharedBillLists'},
        'unit_system_settings': {'key': 'unitSystemSettings', 'type': 'UnitSystemSettings'},
        'update_approved_bills': {'key': 'updateApprovedBills', 'type': 'UpdateApprovedBills'},
        'update_units_on_existing_bills': {'key': 'updateUnitsOnExistingBills', 'type': 'UpdateUnitsOnExistingBills'},
        'budgets_and_budget_versions': {'key': 'budgetsAndBudgetVersions', 'type': 'BudgetsAndBudgetVersions'},
        'chargebacks_module': {'key': 'chargebacksModule', 'type': 'ChargebacksModule'},
        'chargebacks': {'key': 'chargebacks', 'type': 'Chargebacks'},
        'chargeback_reversals': {'key': 'chargebackReversals', 'type': 'ChargebackReversals'},
        'meter_savings_settings': {'key': 'meterSavingsSettings', 'type': 'MeterSavingsSettings'},
        'savings_adjustments': {'key': 'savingsAdjustments', 'type': 'SavingsAdjustments'},
        'manually_adjust_savings': {'key': 'manuallyAdjustSavings', 'type': 'ManuallyAdjustSavings'},
        'savings_engine': {'key': 'savingsEngine', 'type': 'SavingsEngine'},
        'baseline_engine': {'key': 'baselineEngine', 'type': 'BaselineEngine'},
        'global_cost_avoidance_settings': {'key': 'globalCostAvoidanceSettings', 'type': 'GlobalCostAvoidanceSettings'},
        'dashboard_and_maps_module': {'key': 'dashboardAndMapsModule', 'type': 'DashboardAndMapsModule'},
        'dashboard_administrator': {'key': 'dashboardAdministrator', 'type': 'DashboardAdministrator'},
        'public_dashboards_or_maps': {'key': 'publicDashboardsOrMaps', 'type': 'PublicDashboardsOrMaps'},
        'shared_dashboards_or_maps': {'key': 'sharedDashboardsOrMaps', 'type': 'SharedDashboardsOrMaps'},
        'buildings_and_meters_module': {'key': 'buildingsAndMetersModule', 'type': 'BuildingsAndMetersModule'},
        'groups_and_benchmarks_module': {'key': 'groupsAndBenchmarksModule', 'type': 'GroupsAndBenchmarksModule'},
        'building_and_meter_groups': {'key': 'buildingAndMeterGroups', 'type': 'BuildingAndMeterGroups'},
        'buildings_and_organizations': {'key': 'buildingsAndOrganizations', 'type': 'BuildingsAndOrganizations'},
        'interval_data': {'key': 'intervalData', 'type': 'IntervalData'},
        'interval_data_analysis': {'key': 'intervalDataAnalysis', 'type': 'IntervalDataAnalysis'},
        'energystar_submissions': {'key': 'energystarSubmissions', 'type': 'ENERGYSTARSubmissions'},
        'facility_projects': {'key': 'facilityProjects', 'type': 'FacilityProjects'},
        'greenhouse_gas_administrator': {'key': 'greenhouseGasAdministrator', 'type': 'GreenhouseGasAdministrator'},
        'interval_data_rollup': {'key': 'intervalDataRollup', 'type': 'IntervalDataRollup'},
        'meters': {'key': 'meters', 'type': 'Meters'},
        'normalization_settings': {'key': 'normalizationSettings', 'type': 'NormalizationSettings'},
        'weather_settings': {'key': 'weatherSettings', 'type': 'WeatherSettings'},
        'reports_module': {'key': 'reportsModule', 'type': 'ReportsModule'},
        'distributed_reports_settings': {'key': 'distributedReportsSettings', 'type': 'DistributedReportsSettings'},
        'report_administrator': {'key': 'reportAdministrator', 'type': 'ReportAdministrator'},
        'report_groups': {'key': 'reportGroups', 'type': 'ReportGroups'},
        'shared_reports': {'key': 'sharedReports', 'type': 'SharedReports'},
        'reports': {'key': 'reports', 'type': 'Reports'},
        'reset_user_passwords': {'key': 'resetUserPasswords', 'type': 'ResetUserPasswords'},
        'users_and_user_groups': {'key': 'usersAndUserGroups', 'type': 'UsersAndUserGroups'},
        'vendors_and_rates_module': {'key': 'vendorsAndRatesModule', 'type': 'VendorsAndRatesModule'},
        'rate_schedules': {'key': 'rateSchedules', 'type': 'RateSchedules'},
        'vendors': {'key': 'vendors', 'type': 'Vendors'},
        'flagged_items': {'key': 'flaggedItems', 'type': 'FlaggedItems'},
        'bill_list_administrator': {'key': 'billListAdministrator', 'type': 'BillListAdministrator'},
        'all_installed_reports': {'key': 'allInstalledReports', 'type': 'AllInstalledReports'},
        'send_notifications': {'key': 'sendNotifications', 'type': 'SendNotifications'},
        'buildings_and_meters_module_actual_data': {'key': 'buildingsAndMetersModuleActualData', 'type': 'BuildingsAndMetersModuleActualData'},
        'buildings_and_meters_module_calendarized_data': {'key': 'buildingsAndMetersModuleCalendarizedData', 'type': 'BuildingsAndMetersModuleCalendarizedData'},
        'buildings_and_meters_module_normalized_data': {'key': 'buildingsAndMetersModuleNormalizedData', 'type': 'BuildingsAndMetersModuleNormalizedData'},
        'buildings_and_meters_module_savings': {'key': 'buildingsAndMetersModuleSavings', 'type': 'BuildingsAndMetersModuleSavings'},
        'buildings_and_meters_module_meter_interval_data': {'key': 'buildingsAndMetersModuleMeterIntervalData', 'type': 'BuildingsAndMetersModuleMeterIntervalData'},
        'buildings_and_meters_module_sustainability': {'key': 'buildingsAndMetersModuleSustainability', 'type': 'BuildingsAndMetersModuleSustainability'},
        'accounts_module_actual_data': {'key': 'accountsModuleActualData', 'type': 'AccountsModuleActualData'},
        'bills_module': {'key': 'billsModule', 'type': 'BillsModule'},
        'roles': {'key': 'roles', 'type': 'Roles'},
        'users_and_roles': {'key': 'usersAndRoles', 'type': 'UsersAndRoles'},
        'emissions_sources_module': {'key': 'emissionsSourcesModule', 'type': 'EmissionsSourcesModule'},
        'collections': {'key': 'collections', 'type': 'Collections'},
        'emissions_sources': {'key': 'emissionsSources', 'type': 'EmissionsSources'},
        'records_module': {'key': 'recordsModule', 'type': 'RecordsModule'},
        'records': {'key': 'records', 'type': 'Records'},
        'shared_records_lists': {'key': 'sharedRecordsLists', 'type': 'SharedRecordsLists'},
        'records_list_administrator': {'key': 'recordsListAdministrator', 'type': 'RecordsListAdministrator'},
    }

    def __init__(self, **kwargs):
        super(Permissions, self).__init__(**kwargs)
        self.license_feature_accounting_export = kwargs.get('license_feature_accounting_export', None)
        self.license_feature_accrual_bills = kwargs.get('license_feature_accrual_bills', None)
        self.license_feature_chargebacks = kwargs.get('license_feature_chargebacks', None)
        self.license_feature_cost_avoidance = kwargs.get('license_feature_cost_avoidance', None)
        self.license_feature_interval_data_analysis = kwargs.get('license_feature_interval_data_analysis', None)
        self.license_feature_report_designer = kwargs.get('license_feature_report_designer', None)
        self.license_feature_custom_benchmarks = kwargs.get('license_feature_custom_benchmarks', None)
        self.license_feature_report_distribution = kwargs.get('license_feature_report_distribution', None)
        self.license_feature_ghg = kwargs.get('license_feature_ghg', None)
        self.accounting_settings = kwargs.get('accounting_settings', None)
        self.accounts = kwargs.get('accounts', None)
        self.accounts_module = kwargs.get('accounts_module', None)
        self.accrual_settings = kwargs.get('accrual_settings', None)
        self.cost_centers = kwargs.get('cost_centers', None)
        self.move_accounts_between_vendors = kwargs.get('move_accounts_between_vendors', None)
        self.application_settings = kwargs.get('application_settings', None)
        self.approve_bills = kwargs.get('approve_bills', None)
        self.bill_workflow_settings = kwargs.get('bill_workflow_settings', None)
        self.bills_and_batches = kwargs.get('bills_and_batches', None)
        self.export_bills = kwargs.get('export_bills', None)
        self.export_hold = kwargs.get('export_hold', None)
        self.move_existing_bills = kwargs.get('move_existing_bills', None)
        self.shared_bill_lists = kwargs.get('shared_bill_lists', None)
        self.unit_system_settings = kwargs.get('unit_system_settings', None)
        self.update_approved_bills = kwargs.get('update_approved_bills', None)
        self.update_units_on_existing_bills = kwargs.get('update_units_on_existing_bills', None)
        self.budgets_and_budget_versions = kwargs.get('budgets_and_budget_versions', None)
        self.chargebacks_module = kwargs.get('chargebacks_module', None)
        self.chargebacks = kwargs.get('chargebacks', None)
        self.chargeback_reversals = kwargs.get('chargeback_reversals', None)
        self.meter_savings_settings = kwargs.get('meter_savings_settings', None)
        self.savings_adjustments = kwargs.get('savings_adjustments', None)
        self.manually_adjust_savings = kwargs.get('manually_adjust_savings', None)
        self.savings_engine = kwargs.get('savings_engine', None)
        self.baseline_engine = kwargs.get('baseline_engine', None)
        self.global_cost_avoidance_settings = kwargs.get('global_cost_avoidance_settings', None)
        self.dashboard_and_maps_module = kwargs.get('dashboard_and_maps_module', None)
        self.dashboard_administrator = kwargs.get('dashboard_administrator', None)
        self.public_dashboards_or_maps = kwargs.get('public_dashboards_or_maps', None)
        self.shared_dashboards_or_maps = kwargs.get('shared_dashboards_or_maps', None)
        self.buildings_and_meters_module = kwargs.get('buildings_and_meters_module', None)
        self.groups_and_benchmarks_module = kwargs.get('groups_and_benchmarks_module', None)
        self.building_and_meter_groups = kwargs.get('building_and_meter_groups', None)
        self.buildings_and_organizations = kwargs.get('buildings_and_organizations', None)
        self.interval_data = kwargs.get('interval_data', None)
        self.interval_data_analysis = kwargs.get('interval_data_analysis', None)
        self.energystar_submissions = kwargs.get('energystar_submissions', None)
        self.facility_projects = kwargs.get('facility_projects', None)
        self.greenhouse_gas_administrator = kwargs.get('greenhouse_gas_administrator', None)
        self.interval_data_rollup = kwargs.get('interval_data_rollup', None)
        self.meters = kwargs.get('meters', None)
        self.normalization_settings = kwargs.get('normalization_settings', None)
        self.weather_settings = kwargs.get('weather_settings', None)
        self.reports_module = kwargs.get('reports_module', None)
        self.distributed_reports_settings = kwargs.get('distributed_reports_settings', None)
        self.report_administrator = kwargs.get('report_administrator', None)
        self.report_groups = kwargs.get('report_groups', None)
        self.shared_reports = kwargs.get('shared_reports', None)
        self.reports = kwargs.get('reports', None)
        self.reset_user_passwords = kwargs.get('reset_user_passwords', None)
        self.users_and_user_groups = kwargs.get('users_and_user_groups', None)
        self.vendors_and_rates_module = kwargs.get('vendors_and_rates_module', None)
        self.rate_schedules = kwargs.get('rate_schedules', None)
        self.vendors = kwargs.get('vendors', None)
        self.flagged_items = kwargs.get('flagged_items', None)
        self.bill_list_administrator = kwargs.get('bill_list_administrator', None)
        self.all_installed_reports = kwargs.get('all_installed_reports', None)
        self.send_notifications = kwargs.get('send_notifications', None)
        self.buildings_and_meters_module_actual_data = kwargs.get('buildings_and_meters_module_actual_data', None)
        self.buildings_and_meters_module_calendarized_data = kwargs.get('buildings_and_meters_module_calendarized_data', None)
        self.buildings_and_meters_module_normalized_data = kwargs.get('buildings_and_meters_module_normalized_data', None)
        self.buildings_and_meters_module_savings = kwargs.get('buildings_and_meters_module_savings', None)
        self.buildings_and_meters_module_meter_interval_data = kwargs.get('buildings_and_meters_module_meter_interval_data', None)
        self.buildings_and_meters_module_sustainability = kwargs.get('buildings_and_meters_module_sustainability', None)
        self.accounts_module_actual_data = kwargs.get('accounts_module_actual_data', None)
        self.bills_module = kwargs.get('bills_module', None)
        self.roles = kwargs.get('roles', None)
        self.users_and_roles = kwargs.get('users_and_roles', None)
        self.emissions_sources_module = kwargs.get('emissions_sources_module', None)
        self.collections = kwargs.get('collections', None)
        self.emissions_sources = kwargs.get('emissions_sources', None)
        self.records_module = kwargs.get('records_module', None)
        self.records = kwargs.get('records', None)
        self.shared_records_lists = kwargs.get('shared_records_lists', None)
        self.records_list_administrator = kwargs.get('records_list_administrator', None)
