# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PlaceDigestNormalizedYearlyResponseCommodityData(Model):
    """PlaceDigestNormalizedYearlyResponseCommodityData.

    :param commodity_code: The commodity code
    :type commodity_code: str
    :param commodity_info: The commodity info
    :type commodity_info: str
    :param commodity_id: The commodity identifier
    :type commodity_id: int
    :param target_comparison:
    :type target_comparison:
     ~energycap.sdk.models.PlaceDigestNormalizedYearlyResponseTargetComparison
    :param common_use_unit:
    :type common_use_unit: ~energycap.sdk.models.UnitChild
    :param results: An array of yearly data
    :type results:
     list[~energycap.sdk.models.PlaceDigestNormalizedYearlyResponseCommodityResults]
    """

    _attribute_map = {
        'commodity_code': {'key': 'commodityCode', 'type': 'str'},
        'commodity_info': {'key': 'commodityInfo', 'type': 'str'},
        'commodity_id': {'key': 'commodityId', 'type': 'int'},
        'target_comparison': {'key': 'targetComparison', 'type': 'PlaceDigestNormalizedYearlyResponseTargetComparison'},
        'common_use_unit': {'key': 'commonUseUnit', 'type': 'UnitChild'},
        'results': {'key': 'results', 'type': '[PlaceDigestNormalizedYearlyResponseCommodityResults]'},
    }

    def __init__(self, **kwargs):
        super(PlaceDigestNormalizedYearlyResponseCommodityData, self).__init__(**kwargs)
        self.commodity_code = kwargs.get('commodity_code', None)
        self.commodity_info = kwargs.get('commodity_info', None)
        self.commodity_id = kwargs.get('commodity_id', None)
        self.target_comparison = kwargs.get('target_comparison', None)
        self.common_use_unit = kwargs.get('common_use_unit', None)
        self.results = kwargs.get('results', None)
