# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class TemplateLine(Model):
    """TemplateLine.

    :param template_line_id: The template line identifier
    :type template_line_id: int
    :param begin_day: The begin day
    :type begin_day: int
    :param end_day: The end day
    :type end_day: int
    :param display_order: The display order
    :type display_order: int
    :param caption: The caption
    :type caption: str
    :param help_tag: The help tag
    :type help_tag: str
    :param is_required: Indicates whether a template line value is required or
     not required
    :type is_required: bool
    :param from_prev_template_line_id: The from previous template line
     identifier
    :type from_prev_template_line_id: int
    :param unit:
    :type unit: ~energycap.sdk.models.UnitResponse
    :param cost_unit:
    :type cost_unit: ~energycap.sdk.models.UnitResponse
    :param commodity:
    :type commodity: ~energycap.sdk.models.CommodityChild
    :param observation_type:
    :type observation_type: ~energycap.sdk.models.ObservationType
    """

    _attribute_map = {
        'template_line_id': {'key': 'templateLineId', 'type': 'int'},
        'begin_day': {'key': 'beginDay', 'type': 'int'},
        'end_day': {'key': 'endDay', 'type': 'int'},
        'display_order': {'key': 'displayOrder', 'type': 'int'},
        'caption': {'key': 'caption', 'type': 'str'},
        'help_tag': {'key': 'helpTag', 'type': 'str'},
        'is_required': {'key': 'isRequired', 'type': 'bool'},
        'from_prev_template_line_id': {'key': 'fromPrevTemplateLineId', 'type': 'int'},
        'unit': {'key': 'unit', 'type': 'UnitResponse'},
        'cost_unit': {'key': 'costUnit', 'type': 'UnitResponse'},
        'commodity': {'key': 'commodity', 'type': 'CommodityChild'},
        'observation_type': {'key': 'observationType', 'type': 'ObservationType'},
    }

    def __init__(self, **kwargs):
        super(TemplateLine, self).__init__(**kwargs)
        self.template_line_id = kwargs.get('template_line_id', None)
        self.begin_day = kwargs.get('begin_day', None)
        self.end_day = kwargs.get('end_day', None)
        self.display_order = kwargs.get('display_order', None)
        self.caption = kwargs.get('caption', None)
        self.help_tag = kwargs.get('help_tag', None)
        self.is_required = kwargs.get('is_required', None)
        self.from_prev_template_line_id = kwargs.get('from_prev_template_line_id', None)
        self.unit = kwargs.get('unit', None)
        self.cost_unit = kwargs.get('cost_unit', None)
        self.commodity = kwargs.get('commodity', None)
        self.observation_type = kwargs.get('observation_type', None)
