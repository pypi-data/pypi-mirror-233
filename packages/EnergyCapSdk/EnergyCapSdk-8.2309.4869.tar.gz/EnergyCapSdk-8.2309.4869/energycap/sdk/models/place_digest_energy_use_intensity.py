# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PlaceDigestEnergyUseIntensity(Model):
    """PlaceDigestEnergyUseIntensity.

    :param period_name: The calendar period name
    :type period_name: str
    :param calendar_period: The calendar period number
    :type calendar_period: int
    :param calendar_year: The calendar year
    :type calendar_year: int
    :param use_per_area_trend: The running average use per area for the prior
     12 months
    :type use_per_area_trend: float
    :param global_use_unit:
    :type global_use_unit: ~energycap.sdk.models.UnitChild
    :param energy_projects: A list of energy projects for this building. To be
     listed, a project must end in this period.
     Projects are only displayed at the building level, but not at the
     organization level
    :type energy_projects:
     list[~energycap.sdk.models.PlaceDigestEnergyUseIntensityEuiEnergyProject]
    :param commodities: A breakdown of use per commodity
    :type commodities:
     list[~energycap.sdk.models.PlaceDigestEnergyUseIntensityEuiCommodity]
    """

    _attribute_map = {
        'period_name': {'key': 'periodName', 'type': 'str'},
        'calendar_period': {'key': 'calendarPeriod', 'type': 'int'},
        'calendar_year': {'key': 'calendarYear', 'type': 'int'},
        'use_per_area_trend': {'key': 'usePerAreaTrend', 'type': 'float'},
        'global_use_unit': {'key': 'globalUseUnit', 'type': 'UnitChild'},
        'energy_projects': {'key': 'energyProjects', 'type': '[PlaceDigestEnergyUseIntensityEuiEnergyProject]'},
        'commodities': {'key': 'commodities', 'type': '[PlaceDigestEnergyUseIntensityEuiCommodity]'},
    }

    def __init__(self, **kwargs):
        super(PlaceDigestEnergyUseIntensity, self).__init__(**kwargs)
        self.period_name = kwargs.get('period_name', None)
        self.calendar_period = kwargs.get('calendar_period', None)
        self.calendar_year = kwargs.get('calendar_year', None)
        self.use_per_area_trend = kwargs.get('use_per_area_trend', None)
        self.global_use_unit = kwargs.get('global_use_unit', None)
        self.energy_projects = kwargs.get('energy_projects', None)
        self.commodities = kwargs.get('commodities', None)
