# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class GHGDefaultSettingResponse(Model):
    """GHGDefaultSettingResponse.

    :param commodity_id: The Commodity ID
    :type commodity_id: int
    :param commodity_code: The Commodity Code
    :type commodity_code: str
    :param commodity_info: The Commodity Info
    :type commodity_info: str
    :param commodity_icon:
    :type commodity_icon: ~energycap.sdk.models.Icon
    :param in_use_by_vendor: Flag to indicate if the commodity is assigned to
     any meters
    :type in_use_by_vendor: bool
    :param default_scope_category:
    :type default_scope_category: ~energycap.sdk.models.GHGScopeCategory
    :param default_factor:
    :type default_factor: ~energycap.sdk.models.GHGFactor
    """

    _attribute_map = {
        'commodity_id': {'key': 'commodityId', 'type': 'int'},
        'commodity_code': {'key': 'commodityCode', 'type': 'str'},
        'commodity_info': {'key': 'commodityInfo', 'type': 'str'},
        'commodity_icon': {'key': 'commodityIcon', 'type': 'Icon'},
        'in_use_by_vendor': {'key': 'inUseByVendor', 'type': 'bool'},
        'default_scope_category': {'key': 'defaultScopeCategory', 'type': 'GHGScopeCategory'},
        'default_factor': {'key': 'defaultFactor', 'type': 'GHGFactor'},
    }

    def __init__(self, **kwargs):
        super(GHGDefaultSettingResponse, self).__init__(**kwargs)
        self.commodity_id = kwargs.get('commodity_id', None)
        self.commodity_code = kwargs.get('commodity_code', None)
        self.commodity_info = kwargs.get('commodity_info', None)
        self.commodity_icon = kwargs.get('commodity_icon', None)
        self.in_use_by_vendor = kwargs.get('in_use_by_vendor', None)
        self.default_scope_category = kwargs.get('default_scope_category', None)
        self.default_factor = kwargs.get('default_factor', None)
