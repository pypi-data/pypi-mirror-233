class ShouldMockConsts:
    # These are all of the modules we checked and decided to allow fully
    ENTIRE_MODULES_ALLOW_LIST = {
        "builtins",  # Was always here, important
        "_pydevd_frame_eval",  # Was always here, important to solve a bug
        "snowmate_common",  # Our module, it's ok to allow it
        "typing",
        "math",
    }

    # These are all of the modules we checked and decided to allow partially
    PARTIAL_MODULES_ALLOW_LIST = {  #
        "_io",
        "_thread",
        "_warnings",
        "base64",
        "builtins",
        "collections",
        "dateutil",
        "json",
        "math",
        "pathlib",
        "pkgutil",
        "psycopg2",
        "tarfile",
        "time",
        "uuid",  # None of the functions in this module are allowed
        "datetime",
        "posixpath",
        "genericpath",
    }

    DENIED_FULL_NAMES = {"builtins.open", "builtins.input"}

    STATELESS_EXTERNAL_FULL_NAMES = {
        # "_io.BufferedReader.__exit__",
        "_io.BytesIO",
        "_io.StringIO",
        # "_io.TextIOWrapper.__exit__", # Removed because the collector needs it after pickle
        "_thread._excepthook",
        "_warnings.warn",
        "base64._85encode",
        "base64._b32decode",
        "base64._b32encode",
        "base64._bytes_from_decode_data",
        "base64._input_type_check",
        "base64.a85decode",
        "base64.a85encode",
        "base64.b16decode",
        "base64.b16encode",
        "base64.b32decode",
        "base64.b32encode",
        "base64.b32hexdecode",
        "base64.b32hexencode",
        "base64.b64decode",
        "base64.b64encode",
        "base64.b85decode",
        "base64.b85encode",
        "base64.decodebytes",
        "base64.encodebytes",
        "base64.main",
        "base64.standard_b64decode",
        "base64.standard_b64encode",
        "base64.test",
        "base64.urlsafe_b64decode",
        "base64.urlsafe_b64encode",
        "builtins.print",
        "collections.abc.Collection.__subclasshook__",
        "collections.abc.Mapping.__contains__",
        "collections.abc.Mapping.__eq__",
        "collections.abc.Mapping.get",
        "collections.abc.Mapping.items",
        "collections.abc.Mapping.keys",
        "collections.abc.Mapping.values",
        "collections.abc.MutableMapping.clear",
        "collections.abc.MutableMapping.pop",
        "collections.abc.MutableMapping.popitem",
        "collections.abc.MutableMapping.update",
        "collections.OrderedDict",
        "datetime._build_struct_time",
        "datetime._check_date_fields",
        "datetime._check_time_fields",
        "datetime._check_tzinfo_arg",
        "datetime._check_tzname",
        "datetime._check_utc_offset",
        "datetime._cmp",
        "datetime._cmperror",
        "datetime._days_before_month",
        "datetime._days_before_year",
        "datetime._days_in_month",
        "datetime._divide_and_round",
        "datetime._format_offset",
        "datetime._format_time",
        "datetime._is_leap",
        "datetime._isoweek1monday",
        "datetime._ord2ymd",
        "datetime._parse_hh_mm_ss_ff",
        "datetime._parse_isoformat_date",
        "datetime._parse_isoformat_time",
        "datetime._wrap_strftime",
        "datetime._ymd2ord",
        "datetime.date.__add__",
        "datetime.date.__dir__",
        "datetime.date.__eq__",
        "datetime.date.__format__",
        "datetime.date.__ge__",
        "datetime.date.__getattribute__",
        "datetime.date.__gt__",
        "datetime.date.__hash__",
        "datetime.date.__le__",
        "datetime.date.__lt__",
        "datetime.date.__ne__",
        "datetime.date.__new__",
        "datetime.date.__radd__",
        "datetime.date.__reduce__",
        "datetime.date.__reduce_ex__",
        "datetime.date.__repr__",
        "datetime.date.__rsub__",
        "datetime.date.__setstate",
        "datetime.date.__sizeof__",
        "datetime.date.__str__",
        "datetime.date.__sub__",
        "datetime.date._cmp",
        "datetime.date._getstate",
        "datetime.date.ctime",
        "datetime.date.day",
        "datetime.date.fromisocalendar",
        "datetime.date.fromisoformat",
        "datetime.date.fromordinal",
        "datetime.date.fromtimestamp",
        "datetime.date.isocalendar",
        "datetime.date.isoformat",
        "datetime.date.isoweekday",
        "datetime.date.month",
        "datetime.date.replace",
        "datetime.date.strftime",
        "datetime.date.timetuple",
        "datetime.date.toordinal",
        "datetime.date.weekday",
        "datetime.date.year",
        "datetime.datetime.__add__",
        "datetime.datetime.__dir__",
        "datetime.datetime.__eq__",
        "datetime.datetime.__format__",
        "datetime.datetime.__ge__",
        "datetime.datetime.__getattribute__",
        "datetime.datetime.__gt__",
        "datetime.datetime.__hash__",
        "datetime.datetime.__le__",
        "datetime.datetime.__lt__",
        "datetime.datetime.__ne__",
        "datetime.datetime.__new__",
        "datetime.datetime.__radd__",
        "datetime.datetime.__reduce__",
        "datetime.datetime.__reduce_ex__",
        "datetime.datetime.__repr__",
        "datetime.datetime.__rsub__",
        "datetime.datetime.__setstate",
        "datetime.datetime.__sizeof__",
        "datetime.datetime.__str__",
        "datetime.datetime.__sub__",
        "datetime.datetime._cmp",
        "datetime.datetime._fromtimestamp",
        "datetime.datetime._getstate",
        "datetime.datetime._local_timezone",
        "datetime.datetime._mktime.local",
        "datetime.datetime.astimezone",
        "datetime.datetime.combine",
        "datetime.datetime.ctime",
        "datetime.datetime.date",
        "datetime.datetime.dst",
        "datetime.datetime.fold",
        "datetime.datetime.fromisoformat",
        "datetime.datetime.fromtimestamp",
        "datetime.datetime.hour",
        "datetime.datetime.isocalendar",
        "datetime.datetime.isoformat",
        "datetime.datetime.isoweekday",
        "datetime.datetime.microsecond",
        "datetime.datetime.minute",
        "datetime.datetime.replace",
        "datetime.datetime.second",
        "datetime.datetime.strftime",
        "datetime.datetime.strptime",
        "datetime.datetime.time",
        "datetime.datetime.timestamp",
        "datetime.datetime.timetuple",
        "datetime.datetime.timetz",
        "datetime.datetime.toordinal",
        "datetime.datetime.tzinfo",
        "datetime.datetime.tzname",
        "datetime.datetime.utcfromtimestamp",
        "datetime.datetime.utcoffset",
        "datetime.datetime.utctimetuple",
        "datetime.datetime.weekday",
        "datetime.IsoCalendarDate.__new__",
        "datetime.IsoCalendarDate.__reduce__",
        "datetime.IsoCalendarDate.__repr__",
        "datetime.IsoCalendarDate.week",
        "datetime.IsoCalendarDate.weekday",
        "datetime.IsoCalendarDate.year",
        "datetime.time.__eq__",
        "datetime.time.__format__",
        "datetime.time.__ge__",
        "datetime.time.__gt__",
        "datetime.time.__hash__",
        "datetime.time.__le__",
        "datetime.time.__lt__",
        "datetime.time.__new__",
        "datetime.time.__reduce__",
        "datetime.time.__reduce_ex__",
        "datetime.time.__repr__",
        "datetime.time.__setstate",
        "datetime.time._cmp",
        "datetime.time._getstate",
        "datetime.time._tzstr",
        "datetime.time.dst",
        "datetime.time.fold",
        "datetime.time.fromisoformat",
        "datetime.time.hour",
        "datetime.time.isoformat",
        "datetime.time.microsecond",
        "datetime.time.minute",
        "datetime.time.replace",
        "datetime.time.second",
        "datetime.time.strftime",
        "datetime.time.tzinfo",
        "datetime.time.tzname",
        "datetime.time.utcoffset",
        "datetime.timedelta.__abs__",
        "datetime.timedelta.__add__",
        "datetime.timedelta.__bool__",
        "datetime.timedelta.__dir__",
        "datetime.timedelta.__divmod__",
        "datetime.timedelta.__eq__",
        "datetime.timedelta.__floordiv__",
        "datetime.timedelta.__format__",
        "datetime.timedelta.__ge__",
        "datetime.timedelta.__getattribute__",
        "datetime.timedelta.__gt__",
        "datetime.timedelta.__hash__",
        "datetime.timedelta.__le__",
        "datetime.timedelta.__lt__",
        "datetime.timedelta.__mod__",
        "datetime.timedelta.__mul__",
        "datetime.timedelta.__ne__",
        "datetime.timedelta.__neg__",
        "datetime.timedelta.__new__",
        "datetime.timedelta.__pos__",
        "datetime.timedelta.__radd__",
        "datetime.timedelta.__rdivmod__",
        "datetime.timedelta.__reduce__",
        "datetime.timedelta.__reduce_ex__",
        "datetime.timedelta.__repr__",
        "datetime.timedelta.__rfloordiv__",
        "datetime.timedelta.__rmod__",
        "datetime.timedelta.__rmul__",
        "datetime.timedelta.__rsub__",
        "datetime.timedelta.__rtruediv__",
        "datetime.timedelta.__sizeof__",
        "datetime.timedelta.__str__",
        "datetime.timedelta.__str__.plural",
        "datetime.timedelta.__sub__",
        "datetime.timedelta.__truediv__",
        "datetime.timedelta._cmp",
        "datetime.timedelta._getstate",
        "datetime.timedelta._to_microseconds",
        "datetime.timedelta.days",
        "datetime.timedelta.microseconds",
        "datetime.timedelta.seconds",
        "datetime.timedelta.total_seconds",
        "datetime.timezone.__eq__",
        "datetime.timezone.__getinitargs__",
        "datetime.timezone.__hash__",
        "datetime.timezone.__new__",
        "datetime.timezone.__repr__",
        "datetime.timezone.__str__",
        "datetime.timezone._create",
        "datetime.timezone._name_from_offset",
        "datetime.timezone.dst",
        "datetime.timezone.fromutc",
        "datetime.timezone.tzname",
        "datetime.timezone.utcoffset",
        "datetime.tzinfo.__reduce__",
        "datetime.tzinfo.dst",
        "datetime.tzinfo.fromutc",
        "datetime.tzinfo.tzname",
        "datetime.tzinfo.utcoffset",
        "dateutil._common",
        "dateutil._common.weekday",
        "dateutil._version",
        "dateutil.parser.__deprecate_private_class",
        "dateutil.parser.__deprecated_private_func",
        "dateutil.parser._parser",
        "dateutil.parser._parser._parsetz",
        "dateutil.parser._parser.parser",
        "dateutil.parser._parser.parserinfo.__dir__",
        "dateutil.parser._parser.parserinfo.__format__",
        "dateutil.parser._parser.parserinfo.__init__",
        "dateutil.parser._parser.parserinfo.__reduce__",
        "dateutil.parser._parser.parserinfo.__reduce_ex__",
        "dateutil.parser._parser.parserinfo.__sizeof__",
        "dateutil.parser._parser.parserinfo._convert",
        "dateutil.parser._parser.parserinfo.ampm",
        "dateutil.parser._parser.parserinfo.hms",
        "dateutil.parser._parser.parserinfo.jump",
        "dateutil.parser._parser.parserinfo.month",
        "dateutil.parser._parser.parserinfo.pertain",
        "dateutil.parser._parser.parserinfo.tzoffset",
        "dateutil.parser._parser.parserinfo.utczone",
        "dateutil.parser._parser.parserinfo.weekday",
        "dateutil.parser.isoparser.isoparser",
        "dateutil.relativedelta._sign",
        "dateutil.relativedelta.relativedelta.__abs__",
        "dateutil.relativedelta.relativedelta.__add__",
        "dateutil.relativedelta.relativedelta.__bool__",
        "dateutil.relativedelta.relativedelta.__dir__",
        "dateutil.relativedelta.relativedelta.__div__",
        "dateutil.relativedelta.relativedelta.__eq__",
        "dateutil.relativedelta.relativedelta.__format__",
        "dateutil.relativedelta.relativedelta.__hash__",
        "dateutil.relativedelta.relativedelta.__init__",
        "dateutil.relativedelta.relativedelta.__mul__",
        "dateutil.relativedelta.relativedelta.__ne__",
        "dateutil.relativedelta.relativedelta.__neg__",
        "dateutil.relativedelta.relativedelta.__radd__",
        "dateutil.relativedelta.relativedelta.__reduce__",
        "dateutil.relativedelta.relativedelta.__reduce_ex__",
        "dateutil.relativedelta.relativedelta.__repr__",
        "dateutil.relativedelta.relativedelta.__rsub__",
        "dateutil.relativedelta.relativedelta.__sizeof__",
        "dateutil.relativedelta.relativedelta.__sub__",
        "dateutil.relativedelta.relativedelta._fix",
        "dateutil.relativedelta.relativedelta._set_months",
        "dateutil.relativedelta.relativedelta.normalized",
        "dateutil.rrule",
        "dateutil.tz._common",
        "dateutil.tz._common._tzinfo._fold",
        "dateutil.tz._common._tzinfo._fold_status",
        "dateutil.tz._common._tzinfo._fromutc",
        "dateutil.tz._common._tzinfo.fromutc",
        "dateutil.tz._common.enfold",
        "dateutil.tz._common.tzname_in_python2",
        "dateutil.tz._common.tzrangebase",
        "dateutil.tz._common.tzrangebase.__ne__",
        "dateutil.tz._common.tzrangebase.__repr__",
        "dateutil.tz._common.tzrangebase._isdst",
        "dateutil.tz._common.tzrangebase._naive_isdst",
        "dateutil.tz._common.tzrangebase.dst",
        "dateutil.tz._common.tzrangebase.fromutc",
        "dateutil.tz._common.tzrangebase.is_ambiguous",
        "dateutil.tz._common.tzrangebase.tzname",
        "dateutil.tz._common.tzrangebase.utcoffset",
        "dateutil.tz._factories",
        "dateutil.tz.tz",
        "dateutil.tz.tz.datetime_ambiguous",
        "dateutil.tz.tz.datetime_exists",
        "dateutil.tz.tz.resolve_imaginary",
        "dateutil.tz.tz.tzfile",
        "dateutil.tz.tz.tzfile.__dir__",
        "dateutil.tz.tz.tzfile.__eq__",
        "dateutil.tz.tz.tzfile.__format__",
        "dateutil.tz.tz.tzfile.__init__",
        "dateutil.tz.tz.tzfile.__ne__",
        "dateutil.tz.tz.tzfile.__reduce__",
        "dateutil.tz.tz.tzfile.__reduce_ex__",
        "dateutil.tz.tz.tzfile.__repr__",
        "dateutil.tz.tz.tzfile.__sizeof__",
        "dateutil.tz.tz.tzfile._find_last_transition",
        "dateutil.tz.tz.tzfile._find_ttinfo",
        "dateutil.tz.tz.tzfile._get_ttinfo",
        "dateutil.tz.tz.tzfile._read_tzfile",
        "dateutil.tz.tz.tzfile._resolve_ambiguous_time",
        "dateutil.tz.tz.tzfile._set_tzdata",
        "dateutil.tz.tz.tzfile.dst",
        "dateutil.tz.tz.tzfile.fromutc",
        "dateutil.tz.tz.tzfile.is_ambiguous",
        "dateutil.tz.tz.tzfile.tzname",
        "dateutil.tz.tz.tzfile.utcoffset",
        "dateutil.tz.tz.tzical.__dir__",
        "dateutil.tz.tz.tzical.__format__",
        "dateutil.tz.tz.tzical.__init__",
        "dateutil.tz.tz.tzical.__reduce__",
        "dateutil.tz.tz.tzical.__reduce_ex__",
        "dateutil.tz.tz.tzical.__repr__",
        "dateutil.tz.tz.tzical.__sizeof__",
        "dateutil.tz.tz.tzical._parse_offset",
        "dateutil.tz.tz.tzical._parse_rfc",
        "dateutil.tz.tz.tzical.get",
        "dateutil.tz.tz.tzical.keys",
        "dateutil.tz.tz.tzinfo.__getattribute__",
        "dateutil.tz.tz.tzlocal.__dir__",
        "dateutil.tz.tz.tzlocal.__eq__",
        "dateutil.tz.tz.tzlocal.__format__",
        "dateutil.tz.tz.tzlocal.__init__",
        "dateutil.tz.tz.tzlocal.__ne__",
        "dateutil.tz.tz.tzlocal.__reduce__",
        "dateutil.tz.tz.tzlocal.__reduce_ex__",
        "dateutil.tz.tz.tzlocal.__repr__",
        "dateutil.tz.tz.tzlocal.__sizeof__",
        "dateutil.tz.tz.tzlocal._isdst",
        "dateutil.tz.tz.tzlocal._naive_is_dst",
        "dateutil.tz.tz.tzoffset",
        "dateutil.tz.tz.tzrange.__dir__",
        "dateutil.tz.tz.tzrange.__eq__",
        "dateutil.tz.tz.tzrange.__format__",
        "dateutil.tz.tz.tzrange.__init__",
        "dateutil.tz.tz.tzrange.__reduce__",
        "dateutil.tz.tz.tzrange.__reduce_ex__",
        "dateutil.tz.tz.tzrange.__sizeof__",
        "dateutil.tz.tz.tzrange.transitions",
        "dateutil.tz.tz.tzstr",
        "dateutil.tz.tz.tzutc",
        "dateutil.zoneinfo.getzoneinfofile_stream",
        "dateutil.zoneinfo.rebuild._print_on_nosuchfile",
        "dateutil.zoneinfo.rebuild._run_zic",
        "dateutil.zoneinfo.tzfile",
        "dateutil.zoneinfo.ZoneInfoFile",
        "dateutil.zoneinfo.ZoneInfoFile.__dir__",
        "dateutil.zoneinfo.ZoneInfoFile.__format__",
        "dateutil.zoneinfo.ZoneInfoFile.__init__",
        "dateutil.zoneinfo.ZoneInfoFile.__reduce__",
        "dateutil.zoneinfo.ZoneInfoFile.__reduce_ex__",
        "dateutil.zoneinfo.ZoneInfoFile.__sizeof__",
        "dateutil.zoneinfo.ZoneInfoFile.get",
        "json.decoder._decode_uXXXX",
        "json.decoder.JSONArray",
        "json.decoder.JSONDecodeError.__init__",
        "json.decoder.JSONDecodeError.__reduce__",
        "json.decoder.JSONDecoder.__init__",
        "json.decoder.JSONDecoder.decode",
        "json.decoder.JSONDecoder.raw_decode",
        "json.decoder.JSONObject",
        "json.decoder.py_scanstring",
        "json.detect_encoding",
        "json.dumps",
        "json.encoder._make_iterencode._iterencode",
        "json.encoder._make_iterencode._iterencode_dict",
        "json.encoder._make_iterencode._iterencode_list",
        "json.encoder.JSONEncoder.__init__",
        "json.encoder.JSONEncoder.default",
        "json.encoder.JSONEncoder.encode",
        "json.encoder.JSONEncoder.iterencode.floatstr",
        "json.encoder.py_encode_basestring.replace",
        "json.encoder.py_encode_basestring_ascii.replace",
        "json.loads",
        "json.scanner.py_make_scanner._scan_once",
        "json.scanner.py_make_scanner.scan_once",
        "json.tool.main",
        "math.copysign",
        "pathlib._Accessor",
        "pathlib._Flavour.__init__",
        "pathlib._Flavour.join_parsed_parts",
        "pathlib._Flavour.parse_parts",
        "pathlib._ignore_error",
        "pathlib._is_wildcard_pattern",
        "pathlib._make_selector",
        "pathlib._NormalAccessor.group",
        "pathlib._NormalAccessor.link",
        "pathlib._NormalAccessor.symlink",
        "pathlib._PathParents.__getitem__",
        "pathlib._PathParents.__init__",
        "pathlib._PathParents.__len__",
        "pathlib._PathParents.__repr__",
        "pathlib._PosixFlavour.casefold",
        "pathlib._PosixFlavour.casefold_parts",
        "pathlib._PosixFlavour.compile_pattern",
        "pathlib._PosixFlavour.is_reserved",
        "pathlib._PosixFlavour.make_uri",
        "pathlib._PosixFlavour.splitroot",
        "pathlib._PreciseSelector.__init__",
        "pathlib._PreciseSelector._select_from",
        "pathlib._RecursiveWildcardSelector.__init__",
        "pathlib._RecursiveWildcardSelector._iterate_directories",
        "pathlib._RecursiveWildcardSelector._select_from",
        "pathlib._Selector.__init__",
        "pathlib._Selector.select_from",
        "pathlib._TerminatingSelector._select_from",
        "pathlib._WildcardSelector.__init__",
        "pathlib._WildcardSelector._select_from",
        "pathlib._WindowsFlavour._split_extended_path",
        "pathlib._WindowsFlavour.casefold",
        "pathlib._WindowsFlavour.casefold_parts",
        "pathlib._WindowsFlavour.compile_pattern",
        "pathlib._WindowsFlavour.is_reserved",
        "pathlib._WindowsFlavour.make_uri",
        "pathlib._WindowsFlavour.splitroot",
        # "pathlib.Path.__enter__",
        # "pathlib.Path.__exit__",
        "pathlib.Path.__new__",
        "pathlib.Path._make_child_relpath",
        "pathlib.Path.absolute",
        "pathlib.Path.resolve.check_eloop",
        "pathlib.PurePath.__bytes__",
        "pathlib.PurePath.__class_getitem__",
        "pathlib.PurePath.__eq__",
        "pathlib.PurePath.__fspath__",
        "pathlib.PurePath.__ge__",
        "pathlib.PurePath.__gt__",
        "pathlib.PurePath.__hash__",
        "pathlib.PurePath.__le__",
        "pathlib.PurePath.__lt__",
        "pathlib.PurePath.__new__",
        "pathlib.PurePath.__reduce__",
        "pathlib.PurePath.__repr__",
        "pathlib.PurePath.__rtruediv__",
        "pathlib.PurePath.__str__",
        "pathlib.PurePath.__truediv__",
        "pathlib.PurePath._cparts",
        "pathlib.PurePath._format_parsed_parts",
        "pathlib.PurePath._from_parsed_parts",
        "pathlib.PurePath._from_parts",
        "pathlib.PurePath._make_child",
        "pathlib.PurePath._parse_args",
        "pathlib.PurePath.anchor",
        "pathlib.PurePath.as_posix",
        "pathlib.PurePath.as_uri",
        "pathlib.PurePath.is_absolute",
        "pathlib.PurePath.is_relative_to",
        "pathlib.PurePath.is_reserved",
        "pathlib.PurePath.joinpath",
        "pathlib.PurePath.match",
        "pathlib.PurePath.name",
        "pathlib.PurePath.parent",
        "pathlib.PurePath.parents",
        "pathlib.PurePath.parts",
        "pathlib.PurePath.relative_to",
        "pathlib.PurePath.stem",
        "pathlib.PurePath.suffix",
        "pathlib.PurePath.suffixes",
        "pathlib.PurePath.with_name",
        "pathlib.PurePath.with_stem",
        "pathlib.PurePath.with_suffix",
        "pkgutil.get_data",
        "psycopg2._psycopg.DateFromPy",
        "psycopg2._psycopg.IntervalFromPy",
        "psycopg2._psycopg.new_array_type",
        "psycopg2._psycopg.new_type",
        "psycopg2._psycopg.register_type",
        "psycopg2._psycopg.TimeFromPy",
        "psycopg2._psycopg.TimestampFromPy",
        "psycopg2.extensions.AsIs",
        "psycopg2.extensions.Binary",
        "psycopg2.extensions.Boolean",
        "psycopg2.extensions.Diagnostics",
        "psycopg2.extensions.Float",
        "psycopg2.extensions.QuotedString",
        "psycopg2.extensions.register_adapter",
        "psycopg2.extensions.SQL_IN",
        "tarfile.TarFile",
        "time.asctime",
        "time.ctime",
        "time.gmtime",
        ## datetime ##
        "datetime.datetime._mktime",
        "datetime.IsoCalendarDate",
        "datetime.date",
        "datetime.datetime",
        "datetime.time",
        "datetime.timedelta",
        "datetime.timezone",
        "datetime.tzinfo",
        # os (posixpath)
        "posixpath.join",
        "posixpath.relpath",
        "posixpath.basename",
        "posixpath.commonpath",
        "genericpath.commonprefix",
        "posixpath.dirname",
        "posixpath.normcase",
        "posixpath.normpath",
        "posixpath.split",
        "posixpath.splitext",
    }
