#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Oct  1 18:04:04 2023

@author: chris
"""

import scipy as _sp

from ..wraps import tawrap_ax2scalar as _tawrap_ax2scalar
all = _tawrap_ax2scalar(_sp.all)
any = _tawrap_ax2scalar(_sp.any)
argmax = _tawrap_ax2scalar(_sp.argmax)
argmin = _tawrap_ax2scalar(_sp.argmin)
#max = _tawrap_ax2scalar(_sp.max)
mean = _tawrap_ax2scalar(_sp.mean)
#min = _tawrap_ax2scalar(_sp.min)
prod = _tawrap_ax2scalar(_sp.prod)
std = _tawrap_ax2scalar(_sp.std)
sum = _tawrap_ax2scalar(_sp.sum)
amax = _tawrap_ax2scalar(_sp.amax)
amin = _tawrap_ax2scalar(_sp.amin)
median = _tawrap_ax2scalar(_sp.median)
nanargmax = _tawrap_ax2scalar(_sp.nanargmax)
nanargmin = _tawrap_ax2scalar(_sp.nanargmin)
nanmax = _tawrap_ax2scalar(_sp.nanmax)
nanmean = _tawrap_ax2scalar(_sp.nanmean)
nanmedian = _tawrap_ax2scalar(_sp.nanmedian)
nanmin = _tawrap_ax2scalar(_sp.nanmin)
nanprod = _tawrap_ax2scalar(_sp.nanprod)
nansum = _tawrap_ax2scalar(_sp.nansum)
nanstd = _tawrap_ax2scalar(_sp.nanstd)
nanvar = _tawrap_ax2scalar(_sp.nanvar)
var = _tawrap_ax2scalar(_sp.var)

from ..wraps import tawrap_broadcastaxial as _tawrap_broadcastaxial
cumprod = _tawrap_broadcastaxial(_sp.cumprod)
cumsum = _tawrap_broadcastaxial(_sp.cumsum)
nancumprod = _tawrap_broadcastaxial(_sp.nancumprod)
nancumsum = _tawrap_broadcastaxial(_sp.nancumsum)

from ..wraps import tawrap_binarybroadcast
# binary functions from numpy wrapped for TablArray compatibility
# these are also available as methods
add = tawrap_binarybroadcast(_sp.add)
subtract = tawrap_binarybroadcast(_sp.subtract)
multiply = tawrap_binarybroadcast(_sp.multiply)
power = tawrap_binarybroadcast(_sp.power)
true_divide = tawrap_binarybroadcast(_sp.true_divide)
divmod = tawrap_binarybroadcast(_sp.divmod)
equal = tawrap_binarybroadcast(_sp.equal, dtype=bool)
greater_equal = tawrap_binarybroadcast(_sp.greater_equal, dtype=bool)
greater = tawrap_binarybroadcast(_sp.greater, dtype=bool)
less_equal = tawrap_binarybroadcast(_sp.less_equal, dtype=bool)
less = tawrap_binarybroadcast(_sp.less, dtype=bool)
logical_and = tawrap_binarybroadcast(_sp.logical_and)
logical_or = tawrap_binarybroadcast(_sp.logical_or)
logical_xor = tawrap_binarybroadcast(_sp.logical_xor)
# these are only available here - not as methods
# allclose = tawrap_binarybroadcast(_sp.allclose, dtype=bool)
arctan2 = tawrap_binarybroadcast(_sp.arctan2)
bitwise_and = tawrap_binarybroadcast(_sp.bitwise_and)
bitwise_or = tawrap_binarybroadcast(_sp.bitwise_or)
bitwise_xor = tawrap_binarybroadcast(_sp.bitwise_xor)
copysign = tawrap_binarybroadcast(_sp.copysign)
divide = tawrap_binarybroadcast(_sp.true_divide)
float_power = tawrap_binarybroadcast(_sp.float_power)
floor_divide = tawrap_binarybroadcast(_sp.floor_divide)
fmax = tawrap_binarybroadcast(_sp.fmax)
fmin = tawrap_binarybroadcast(_sp.fmin)
fmod = tawrap_binarybroadcast(_sp.fmod)
gcd = tawrap_binarybroadcast(_sp.gcd)
heaviside = tawrap_binarybroadcast(_sp.heaviside)
hypot = tawrap_binarybroadcast(_sp.hypot)
isclose = tawrap_binarybroadcast(_sp.isclose, dtype=bool)
lcm = tawrap_binarybroadcast(_sp.lcm)
ldexp = tawrap_binarybroadcast(_sp.ldexp)
left_shift = tawrap_binarybroadcast(_sp.left_shift)
logaddexp = tawrap_binarybroadcast(_sp.logaddexp)
logaddexp2 = tawrap_binarybroadcast(_sp.logaddexp2)
maximum = tawrap_binarybroadcast(_sp.maximum)
minimum = tawrap_binarybroadcast(_sp.minimum)
mod = tawrap_binarybroadcast(_sp.remainder)
nextafter = tawrap_binarybroadcast(_sp.nextafter)
not_equal = tawrap_binarybroadcast(_sp.not_equal, dtype=bool)
remainder = tawrap_binarybroadcast(_sp.remainder)
right_shift = tawrap_binarybroadcast(_sp.right_shift)

from ..wraps import tawrap_elementwise
# elementwise functions
#abs = tawrap_elementwise(_sp.abs)
absolute = tawrap_elementwise(_sp.absolute)
angle = tawrap_elementwise(_sp.angle)
arccos = tawrap_elementwise(_sp.arccos)
arccosh = tawrap_elementwise(_sp.arccosh)
arcsin = tawrap_elementwise(_sp.arcsin)
arcsinh = tawrap_elementwise(_sp.arcsinh)
arctan = tawrap_elementwise(_sp.arctan)
arctanh = tawrap_elementwise(_sp.arctanh)
bitwise_not = tawrap_elementwise(_sp.bitwise_not)
cbrt = tawrap_elementwise(_sp.cbrt)
ceil = tawrap_elementwise(_sp.ceil)
conj = tawrap_elementwise(_sp.conjugate)
conjugate = tawrap_elementwise(_sp.conjugate)
cos = tawrap_elementwise(_sp.cos)
cosh = tawrap_elementwise(_sp.cosh)
deg2rad = tawrap_elementwise(_sp.deg2rad)
degrees = tawrap_elementwise(_sp.degrees)
exp = tawrap_elementwise(_sp.exp)
exp2 = tawrap_elementwise(_sp.exp2)
expm1 = tawrap_elementwise(_sp.expm1)
fabs = tawrap_elementwise(_sp.fabs)
floor = tawrap_elementwise(_sp.floor)
imag = tawrap_elementwise(_sp.imag)
invert = tawrap_elementwise(_sp.invert)
iscomplex = tawrap_elementwise(_sp.iscomplex)
isfinite = tawrap_elementwise(_sp.isfinite)
isinf = tawrap_elementwise(_sp.isinf)
isnan = tawrap_elementwise(_sp.isnan)
isnat = tawrap_elementwise(_sp.isnat)
isreal = tawrap_elementwise(_sp.isreal)
log = tawrap_elementwise(_sp.log)
log10 = tawrap_elementwise(_sp.log10)
log1p = tawrap_elementwise(_sp.log1p)
log2 = tawrap_elementwise(_sp.log2)
logical_not = tawrap_elementwise(_sp.logical_not)
negative = tawrap_elementwise(_sp.negative)
positive = tawrap_elementwise(_sp.positive)
rad2deg = tawrap_elementwise(_sp.rad2deg)
radians = tawrap_elementwise(_sp.radians)
#round = tawrap_elementwise(_sp.round)
real = tawrap_elementwise(_sp.real)
real_if_close = tawrap_elementwise(_sp.real_if_close)
reciprocal = tawrap_elementwise(_sp.reciprocal)
rint = tawrap_elementwise(_sp.rint)
sign = tawrap_elementwise(_sp.sign)
signbit = tawrap_elementwise(_sp.signbit)
sin = tawrap_elementwise(_sp.sin)
sinc = tawrap_elementwise(_sp.sinc)
sinh = tawrap_elementwise(_sp.sinh)
spacing = tawrap_elementwise(_sp.spacing)
square = tawrap_elementwise(_sp.square)
sqrt = tawrap_elementwise(_sp.sqrt)
tan = tawrap_elementwise(_sp.tan)
tanh = tawrap_elementwise(_sp.tanh)
trunc = tawrap_elementwise(_sp.trunc)
