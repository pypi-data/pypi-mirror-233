[tool.black]
line-length = 79

[tool.poetry]
# I use poetry as just a package manager.
# So, I only write the settings that poetry needs.
# The actual package metadata is written in setup.cfg.
# I use pypa/build for packaging.
name = "timevec"
version = "0.0.0"
description = ""
authors = []
packages = [{ include = "timevec" }]

[tool.poetry.dependencies]
python = "^3.8"
numpy = [
    { version = ">=1.26.0", python = "=3.12" },
    { version = "*", python = "^3.8" },
    { version = "~1.21.6", python = "=3.7" },
    { version = "~1.19.5", python = "=3.6" },
]
matplotlib = "^3.6.3"

[tool.poetry.group.dev.dependencies]
black = "*"
pytest = "*"
isort = "*"
pyupgrade = "*"
pytest-cov = "*"
flake8 = "*"
mypy = "*"
poethepoet = "*"
setuptools-scm = "*"
build = "*"

[build-system]
requires = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "timevec/_version.py"

[tool.poe.tasks]
test = "pytest"
coverage-xml = "pytest --cov=timevec --doctest-modules --cov-report=xml"
format = [
    { cmd = "isort timevec" },
    { cmd = "black timevec" },
    { cmd = "pyupgrade --py38-plus timevec/*.py" },
]
check = [
    { cmd = "isort --check-only --diff timevec" },
    { cmd = "black --check --diff timevec" },
    { cmd = "flake8 timevec" },
    { cmd = "mypy timevec" },
]
build = [{ cmd = "python -m build" }]
[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = false

[tool.mypy-tests."*"]
disallow_untyped_defs = false
warn_return_any = false
ignore_missing_imports = true

[tool.isort]
profile = 'black'
