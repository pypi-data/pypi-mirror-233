# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cybershuttle_sdk.gateway import gateway_service_pb2 as gateway_dot_gateway__service__pb2


class WorkspaceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.addGateway = channel.unary_unary(
                '/org.apache.airavata.api.gateway.WorkspaceService/addGateway',
                request_serializer=gateway_dot_gateway__service__pb2.GatewayAddRequest.SerializeToString,
                response_deserializer=gateway_dot_gateway__service__pb2.GatewayAddResponse.FromString,
                )
        self.updateGateway = channel.unary_unary(
                '/org.apache.airavata.api.gateway.WorkspaceService/updateGateway',
                request_serializer=gateway_dot_gateway__service__pb2.GatewayUpdateRequest.SerializeToString,
                response_deserializer=gateway_dot_gateway__service__pb2.GatewayUpdateResponse.FromString,
                )
        self.getGateway = channel.unary_unary(
                '/org.apache.airavata.api.gateway.WorkspaceService/getGateway',
                request_serializer=gateway_dot_gateway__service__pb2.GatewayGetRequest.SerializeToString,
                response_deserializer=gateway_dot_gateway__service__pb2.GatewayGetResponse.FromString,
                )
        self.deleteGateway = channel.unary_unary(
                '/org.apache.airavata.api.gateway.WorkspaceService/deleteGateway',
                request_serializer=gateway_dot_gateway__service__pb2.GatewayDeleteRequest.SerializeToString,
                response_deserializer=gateway_dot_gateway__service__pb2.GatewayDeleteResponse.FromString,
                )
        self.getAllGateways = channel.unary_unary(
                '/org.apache.airavata.api.gateway.WorkspaceService/getAllGateways',
                request_serializer=gateway_dot_gateway__service__pb2.GatewayGetAllRequest.SerializeToString,
                response_deserializer=gateway_dot_gateway__service__pb2.GatewayGetAllResponse.FromString,
                )
        self.isGatewayExist = channel.unary_unary(
                '/org.apache.airavata.api.gateway.WorkspaceService/isGatewayExist',
                request_serializer=gateway_dot_gateway__service__pb2.GatewayIsExistsRequest.SerializeToString,
                response_deserializer=gateway_dot_gateway__service__pb2.GatewayIsExistsResponse.FromString,
                )
        self.doesUserExist = channel.unary_unary(
                '/org.apache.airavata.api.gateway.WorkspaceService/doesUserExist',
                request_serializer=gateway_dot_gateway__service__pb2.UserExistsRequest.SerializeToString,
                response_deserializer=gateway_dot_gateway__service__pb2.UserExistsResponse.FromString,
                )
        self.getAllUsersInGateway = channel.unary_unary(
                '/org.apache.airavata.api.gateway.WorkspaceService/getAllUsersInGateway',
                request_serializer=gateway_dot_gateway__service__pb2.GetAllUsersRequest.SerializeToString,
                response_deserializer=gateway_dot_gateway__service__pb2.GetAllUsersResponse.FromString,
                )


class WorkspaceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def addGateway(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateGateway(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getGateway(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteGateway(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllGateways(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isGatewayExist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def doesUserExist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllUsersInGateway(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkspaceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'addGateway': grpc.unary_unary_rpc_method_handler(
                    servicer.addGateway,
                    request_deserializer=gateway_dot_gateway__service__pb2.GatewayAddRequest.FromString,
                    response_serializer=gateway_dot_gateway__service__pb2.GatewayAddResponse.SerializeToString,
            ),
            'updateGateway': grpc.unary_unary_rpc_method_handler(
                    servicer.updateGateway,
                    request_deserializer=gateway_dot_gateway__service__pb2.GatewayUpdateRequest.FromString,
                    response_serializer=gateway_dot_gateway__service__pb2.GatewayUpdateResponse.SerializeToString,
            ),
            'getGateway': grpc.unary_unary_rpc_method_handler(
                    servicer.getGateway,
                    request_deserializer=gateway_dot_gateway__service__pb2.GatewayGetRequest.FromString,
                    response_serializer=gateway_dot_gateway__service__pb2.GatewayGetResponse.SerializeToString,
            ),
            'deleteGateway': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteGateway,
                    request_deserializer=gateway_dot_gateway__service__pb2.GatewayDeleteRequest.FromString,
                    response_serializer=gateway_dot_gateway__service__pb2.GatewayDeleteResponse.SerializeToString,
            ),
            'getAllGateways': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllGateways,
                    request_deserializer=gateway_dot_gateway__service__pb2.GatewayGetAllRequest.FromString,
                    response_serializer=gateway_dot_gateway__service__pb2.GatewayGetAllResponse.SerializeToString,
            ),
            'isGatewayExist': grpc.unary_unary_rpc_method_handler(
                    servicer.isGatewayExist,
                    request_deserializer=gateway_dot_gateway__service__pb2.GatewayIsExistsRequest.FromString,
                    response_serializer=gateway_dot_gateway__service__pb2.GatewayIsExistsResponse.SerializeToString,
            ),
            'doesUserExist': grpc.unary_unary_rpc_method_handler(
                    servicer.doesUserExist,
                    request_deserializer=gateway_dot_gateway__service__pb2.UserExistsRequest.FromString,
                    response_serializer=gateway_dot_gateway__service__pb2.UserExistsResponse.SerializeToString,
            ),
            'getAllUsersInGateway': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllUsersInGateway,
                    request_deserializer=gateway_dot_gateway__service__pb2.GetAllUsersRequest.FromString,
                    response_serializer=gateway_dot_gateway__service__pb2.GetAllUsersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'org.apache.airavata.api.gateway.WorkspaceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WorkspaceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def addGateway(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.gateway.WorkspaceService/addGateway',
            gateway_dot_gateway__service__pb2.GatewayAddRequest.SerializeToString,
            gateway_dot_gateway__service__pb2.GatewayAddResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateGateway(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.gateway.WorkspaceService/updateGateway',
            gateway_dot_gateway__service__pb2.GatewayUpdateRequest.SerializeToString,
            gateway_dot_gateway__service__pb2.GatewayUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getGateway(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.gateway.WorkspaceService/getGateway',
            gateway_dot_gateway__service__pb2.GatewayGetRequest.SerializeToString,
            gateway_dot_gateway__service__pb2.GatewayGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteGateway(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.gateway.WorkspaceService/deleteGateway',
            gateway_dot_gateway__service__pb2.GatewayDeleteRequest.SerializeToString,
            gateway_dot_gateway__service__pb2.GatewayDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllGateways(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.gateway.WorkspaceService/getAllGateways',
            gateway_dot_gateway__service__pb2.GatewayGetAllRequest.SerializeToString,
            gateway_dot_gateway__service__pb2.GatewayGetAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def isGatewayExist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.gateway.WorkspaceService/isGatewayExist',
            gateway_dot_gateway__service__pb2.GatewayIsExistsRequest.SerializeToString,
            gateway_dot_gateway__service__pb2.GatewayIsExistsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def doesUserExist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.gateway.WorkspaceService/doesUserExist',
            gateway_dot_gateway__service__pb2.UserExistsRequest.SerializeToString,
            gateway_dot_gateway__service__pb2.UserExistsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllUsersInGateway(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.gateway.WorkspaceService/getAllUsersInGateway',
            gateway_dot_gateway__service__pb2.GetAllUsersRequest.SerializeToString,
            gateway_dot_gateway__service__pb2.GetAllUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
