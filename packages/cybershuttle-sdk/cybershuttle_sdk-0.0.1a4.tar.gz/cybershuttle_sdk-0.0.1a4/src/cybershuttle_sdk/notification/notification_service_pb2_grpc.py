# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cybershuttle_sdk.notification import notification_service_pb2 as notification_dot_notification__service__pb2


class NotificationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createNotification = channel.unary_unary(
                '/org.apache.airavata.api.notification.NotificationService/createNotification',
                request_serializer=notification_dot_notification__service__pb2.CreateNotificationRequest.SerializeToString,
                response_deserializer=notification_dot_notification__service__pb2.CreateNotificationResponse.FromString,
                )
        self.updateNotification = channel.unary_unary(
                '/org.apache.airavata.api.notification.NotificationService/updateNotification',
                request_serializer=notification_dot_notification__service__pb2.UpdateNotificationRequest.SerializeToString,
                response_deserializer=notification_dot_notification__service__pb2.UpdateNotificationResponse.FromString,
                )
        self.deleteNotification = channel.unary_unary(
                '/org.apache.airavata.api.notification.NotificationService/deleteNotification',
                request_serializer=notification_dot_notification__service__pb2.DeleteNotificationRequest.SerializeToString,
                response_deserializer=notification_dot_notification__service__pb2.DeleteNotificationResponse.FromString,
                )
        self.getNotification = channel.unary_unary(
                '/org.apache.airavata.api.notification.NotificationService/getNotification',
                request_serializer=notification_dot_notification__service__pb2.GetNotificationRequest.SerializeToString,
                response_deserializer=notification_dot_notification__service__pb2.GetNotificationResponse.FromString,
                )
        self.getAllNotifications = channel.unary_unary(
                '/org.apache.airavata.api.notification.NotificationService/getAllNotifications',
                request_serializer=notification_dot_notification__service__pb2.GetAllNotificationsRequest.SerializeToString,
                response_deserializer=notification_dot_notification__service__pb2.GetAllNotificationsResponse.FromString,
                )


class NotificationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createNotification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateNotification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteNotification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getNotification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NotificationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.createNotification,
                    request_deserializer=notification_dot_notification__service__pb2.CreateNotificationRequest.FromString,
                    response_serializer=notification_dot_notification__service__pb2.CreateNotificationResponse.SerializeToString,
            ),
            'updateNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.updateNotification,
                    request_deserializer=notification_dot_notification__service__pb2.UpdateNotificationRequest.FromString,
                    response_serializer=notification_dot_notification__service__pb2.UpdateNotificationResponse.SerializeToString,
            ),
            'deleteNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteNotification,
                    request_deserializer=notification_dot_notification__service__pb2.DeleteNotificationRequest.FromString,
                    response_serializer=notification_dot_notification__service__pb2.DeleteNotificationResponse.SerializeToString,
            ),
            'getNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.getNotification,
                    request_deserializer=notification_dot_notification__service__pb2.GetNotificationRequest.FromString,
                    response_serializer=notification_dot_notification__service__pb2.GetNotificationResponse.SerializeToString,
            ),
            'getAllNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllNotifications,
                    request_deserializer=notification_dot_notification__service__pb2.GetAllNotificationsRequest.FromString,
                    response_serializer=notification_dot_notification__service__pb2.GetAllNotificationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'org.apache.airavata.api.notification.NotificationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NotificationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.notification.NotificationService/createNotification',
            notification_dot_notification__service__pb2.CreateNotificationRequest.SerializeToString,
            notification_dot_notification__service__pb2.CreateNotificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.notification.NotificationService/updateNotification',
            notification_dot_notification__service__pb2.UpdateNotificationRequest.SerializeToString,
            notification_dot_notification__service__pb2.UpdateNotificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.notification.NotificationService/deleteNotification',
            notification_dot_notification__service__pb2.DeleteNotificationRequest.SerializeToString,
            notification_dot_notification__service__pb2.DeleteNotificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.notification.NotificationService/getNotification',
            notification_dot_notification__service__pb2.GetNotificationRequest.SerializeToString,
            notification_dot_notification__service__pb2.GetNotificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.api.notification.NotificationService/getAllNotifications',
            notification_dot_notification__service__pb2.GetAllNotificationsRequest.SerializeToString,
            notification_dot_notification__service__pb2.GetAllNotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
