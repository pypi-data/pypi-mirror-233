# coding: utf-8

"""
    Corva API

    The Corva API is a powerful interface providing great flexibility and extensibility with Corva. Whether your needs are simple UI visualizations, data entry, replication/sync tasks, real-time stream processing, or complex machine learning CPU-intensive apps, the Corva API is the way to make it happen. Our concepts are split into three distinct silos: data apps, visualization apps, and a REST API

    The version of the OpenAPI document: v2.146.0
    Contact: support@corva.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from corva_assets.models.assets import Assets  # noqa: E501

class TestAssets(unittest.TestCase):
    """Assets unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Assets:
        """Test Assets
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Assets`
        """
        model = Assets()  # noqa: E501
        if include_optional:
            return Assets(
                data = [
                    {"id":7926,"type":"asset","attributes":{"company_id":123,"company_name":"My Company","type":"Asset::Well","asset_type":"well","timezone":"America/Chicago","lon_lat":{"longitude":-103,"latitude":32},"created_at":"2020-01-01T00:00:00.000Z","last_active_at":"2020-01-01T00:00:00.000Z","status":"active","state":"drilling","visibility":"visible","name":"The Best Well","parent_asset_id":12345,"parent_asset_name":"A Big Rig","root_asset_id":123,"root_asset_name":"The Permian Program","api_number":"00-111-22222","county":"Eddy","basin":"Permian","area":"Midland","string_design":"4","top_hole":{"raw":"32.000000, -103.000000","coordinates":[32,-103]},"bottom_hole":{},"contractor_name":"The Contractor","directional_driller":"The DD","mud_company":"The Mud Company","customer_well_id":"customer-id-909488abtx","original_well_id":"4444","original_well_created_at":"2020-01-01T00:00:00.000Z","settings":{"day_shift_start_time":"06:00","spud_release":[],"last_mongo_refresh":"2020-01-01T00:00:00.000Z"},"stats":{"spud_at":"2020-01-01T00:00:00.000Z","well_start":100,"well_end":1000,"total_cost":10000,"total_time":999,"total_depth":10000,"first_active_at":149900000,"witsml_data_frequency":5},"source_well":{"id":12345,"name":"Rerun Source Well"},"custom_properties":{"anything":"goes"}},"relationships":{"company":{"data":{"id":"123","type":"company"}},"parent_asset":{"data":{"id":"12345","type":"asset"}},"active_child":{"data":{"id":"54321","type":"asset"}},"last_active_child":{"data":{"id":"54321","type":"asset"}}}}
                    ]
            )
        else:
            return Assets(
        )
        """

    def testAssets(self):
        """Test Assets"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
