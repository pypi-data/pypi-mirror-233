from typing import List
import ghidra.pcode.exec
import java.lang
import java.util


class BytesPcodeExecutorStateSpace(object):




    def __init__(self, __a0: ghidra.program.model.lang.Language, __a1: ghidra.program.model.address.AddressSpace, __a2: object): ...



    def clear(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def fork(self) -> ghidra.pcode.exec.BytesPcodeExecutorStateSpace: ...

    def getClass(self) -> java.lang.Class: ...

    def getRegisterValues(self, __a0: List[object]) -> java.util.Map: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def read(self, __a0: long, __a1: int, __a2: ghidra.pcode.exec.PcodeExecutorStatePiece.Reason) -> List[int]: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def write(self, __a0: long, __a1: List[int], __a2: int, __a3: int) -> None: ...

