import ghidra.app.plugin.core.debug.service.workflow
import ghidra.framework.plugintool
import ghidra.trace.model
import java.lang


class MultiToolTraceListenerManager(object):




    def __init__(self, __a0: java.util.function.Function): ...



    def disable(self) -> None: ...

    def enable(self, __a0: ghidra.app.plugin.core.debug.service.workflow.DebuggerWorkflowServicePlugin) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    def traceClosed(self, __a0: ghidra.framework.plugintool.PluginTool, __a1: ghidra.trace.model.Trace) -> None: ...

    def traceOpened(self, __a0: ghidra.framework.plugintool.PluginTool, __a1: ghidra.trace.model.Trace) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

