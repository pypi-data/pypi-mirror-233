import ghidra.util.datastruct
import java.lang


class ListenerSet(object):
    CALLING_THREAD: java.util.concurrent.Executor = ghidra.util.datastruct.ListenerMap$1@23514c9e



    @overload
    def __init__(self, __a0: java.lang.Class): ...

    @overload
    def __init__(self, __a0: java.lang.Class, __a1: java.util.concurrent.Executor): ...



    def add(self, __a0: object) -> bool: ...

    def addAll(self, __a0: ghidra.util.datastruct.ListenerSet) -> None: ...

    def clear(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def fire(self, __a0: java.lang.Class) -> object: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def isEmpty(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def remove(self, __a0: object) -> bool: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def empty(self) -> bool: ...