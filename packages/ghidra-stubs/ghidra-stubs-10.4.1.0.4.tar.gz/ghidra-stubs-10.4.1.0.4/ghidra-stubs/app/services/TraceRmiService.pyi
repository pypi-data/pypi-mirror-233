import ghidra.app.plugin.core.debug.service.rmi.trace
import java.lang
import java.net


class TraceRmiService(object):








    def acceptOne(self, __a0: java.net.SocketAddress) -> ghidra.app.plugin.core.debug.service.rmi.trace.TraceRmiAcceptor: ...

    def connect(self, __a0: java.net.SocketAddress) -> ghidra.app.plugin.core.debug.service.rmi.trace.TraceRmiHandler: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getServerAddress(self) -> java.net.SocketAddress: ...

    def hashCode(self) -> int: ...

    def isServerStarted(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setServerAddress(self, __a0: java.net.SocketAddress) -> None: ...

    def startServer(self) -> None: ...

    def stopServer(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def serverAddress(self) -> java.net.SocketAddress: ...

    @serverAddress.setter
    def serverAddress(self, value: java.net.SocketAddress) -> None: ...

    @property
    def serverStarted(self) -> bool: ...