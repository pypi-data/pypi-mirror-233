import ghidra.app.plugin.core.debug.mapping
import java.lang


class DisassemblyResult(object):
    CANCELLED: ghidra.app.plugin.core.debug.mapping.DisassemblyResult = ghidra.app.plugin.core.debug.mapping.DisassemblyResult@5aaaa9c3
    SUCCESS: ghidra.app.plugin.core.debug.mapping.DisassemblyResult = ghidra.app.plugin.core.debug.mapping.DisassemblyResult@76844247



    def __init__(self, __a0: bool, __a1: unicode): ...



    def equals(self, __a0: object) -> bool: ...

    @staticmethod
    def failed(__a0: unicode) -> ghidra.app.plugin.core.debug.mapping.DisassemblyResult: ...

    def getClass(self) -> java.lang.Class: ...

    def getErrorMessage(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def isAtLeastOne(self) -> bool: ...

    def isSuccess(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @staticmethod
    def success(__a0: bool) -> ghidra.app.plugin.core.debug.mapping.DisassemblyResult: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def atLeastOne(self) -> bool: ...

    @property
    def errorMessage(self) -> unicode: ...