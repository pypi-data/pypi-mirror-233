[tool.poetry]
name = "nicola-student-tracker"
version = "0.0.1"
description = "Simple package to display student progress."
authors = ["michael <michael__brown@tutanota.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "nicola_student_tracker", from = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
pydantic-settings = "^2.0.3"
dash = "^2.13.0"
pandas = "^2.1.0"
openpyxl = "^3.1.2"
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
dash-bootstrap-components = "^1.5.0"
black = "^23.9.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.0.290"
mypy = "^1.5.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


##################################################
####                  CLI                     ####
##################################################
[tool.poetry.scripts]
nicola = 'nicola_student_tracker.command_line.cli:start_dash'

#########################
#### tooling config  ####
#########################
[tool.black]
line-length = 99
target-version = ["py310"]

[flake8]
max-line-length = 120

[tool.mypy]
python_version = "3.10"
files = "src, tests"
mypy_path = "src"
ignore_missing_imports = true
disallow_untyped_decorators = false
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
strict = true
pretty = true

[tool.pytest]
testpaths = "test"
addopts = "--cov --strict-markers"
xfail_strict = true

[tool.coverage.paths]
source = ["src/min_poetry_example", "*/site-packages/min_poetry_example"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
fail_under = 80

[tool.ruff]

# Assume Python 3.11
target-version = "py310"

line-length = 99

select = ["A", "B", "C", "D", "E", "F", "N", "Q"]

ignore = ["B008", "D100", "D107", "D407"]

# Ignore violations in any `__init__.py` file.
# per-file-ignores = {"__init__.py" = ["F401"], "path/to/file.py" = ["F401"]}
# D104 Missing docstring in public package
per-file-ignores = {"app.py" = ["E402"], "__init__.py" = ["D101", "D104", "D107", "F401"]}

#########################
####       tox       ####
#########################
[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
env_list =
    py311

######################
# Tool configuration #
######################

[testenv]
deps = pytest
commands = pytest tests

[testenv:typecheck]
deps =
    pytest
    mypy
commands =
    mypy --ignore-missing-imports {posargs:src tests}

[testenv:format]
skip_install = True
deps =
    black
commands =
    black {posargs:--check --diff src tests}

[testenv:lint]
skip_install = True
deps =
    flake8
    flake8-bugbear
commands =
    flake8 {posargs:src tests --max-line-length=100}
"""