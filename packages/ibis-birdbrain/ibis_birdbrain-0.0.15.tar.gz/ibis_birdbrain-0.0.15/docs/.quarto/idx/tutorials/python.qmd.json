{"title":"Tutorial: Python","markdown":{"headingText":"Tutorial: Python","containsRefs":false,"markdown":"\n## Prerequisites\n\n- [Install Ibis Birdbrain](/install.qmd)\n\n## Overview\n\nYou can use Ibis Birdbrain as a Python library, but it is often used through an\ninteractive Python session. You can [see how to start one with the `birdbrain`\nCLI with Ibis Birdbrain ready to use](/tutorials/cli.qmd).\n\nIf you use the CLI, you'll have access to the `ai`/`bot`/`birdbrain` object,\nwhich is an instance of the `ibis_birdbrain.ai.Bot` class. This bot has access\nto numerous tools and can be used to interact with data via Ibis.\n\n## Getting help\n\nYou can ask the bot for help with its usage:\n\n```python\nbot(\"how do I use you?\")\n```\n\n> birdbrain:\n> \n> I'm birdbrain, your assistant for data analysis projects using Ibis, AI, and many\n> other data tools. Here's how you can interact with me:\n> \n> 1. **Ask Questions**: You can ask me anything related to Ibis, AI, and data\n> analysis. For example, you can ask about how to use certain features in Ibis, how\n> to code in Python, or ask for help in debugging your code.\n> \n> 2. **Run Analysis**: You can also ask me to run data analysis for you. You can\n> give me instructions to query data, analyze it, and even generate visualizations.\n> \n> 3. **Learning Resources**: If you're looking for resources to learn more about\n> Ibis, AI, and data analysis, I can provide you with relevant links to\n> documentation, tutorials, and more.\n> \n> 4. **File Operations**: I can help with file operations such as reading a file,\n> writing to a file, listing files in a directory, etc.\n> \n> 5. **Translation & Summarization**: If you have a large piece of text or a\n> document that you want to summarize, or if you want to translate text from one\n> language to another, I can help with that too.\n> \n> Remember, I can only provide accurate information and perform tasks based on the\n> data I have access to. I'm here to assist you. Let's explore the world of data\n> together!\n\n## Using a tool\n\nInteract via natural language to have the bot use tools on your behalf.\n\n### Interacting with a data\n\nIbis Birdbrain can read data files (limited to Delta Lake tables and Excel files, currently), registering them as tables in your Ibis backend. If you connect to a data platform with existing tables via Ibis, you will have access to them through the bot.\n\nIn this example, we'll read in a local `penguins.xlsx` file and ask the bot about it:\n\n```python\nbot(\"read in the penguins excel\")\n```\n\n> birdbrain:\n> \n> I've successfully read in the penguins Excel file. Here's a preview of the data:\n> \n> | species | island | bill_length_mm | bill_depth_mm | flipper_length_mm | body_mass_g | sex | year |\n> |---------|--------|----------------|---------------|-------------------|-------------|-----|------|\n> | Adelie  | Torgersen | 39.1 | 18.7 | 181 | 3750 | male | 2007 |\n> | Adelie  | Torgersen | 39.5 | 17.4 | 186 | 3800 | female | 2007 |\n> | Adelie  | Torgersen | 40.3 | 18.0 | 195 | 3250 | female | 2007 |\n> | Adelie  | Torgersen | NaN | NaN | - | - | - | 2007 |\n> | Adelie  | Torgersen | 36.7 | 19.3 | 193 | 3450 | female | 2007 |\n> (and so on...)\n> )\n> Note: Null values are represented as NaN (Not a Number) or '-' for numerical\n> columns, and as NULL for string columns.\n\n```python\nbot(\"what tables do you have access to? give an overview of the data\")\n```\n\n> birdbrain:\n> \n> Currently, I have access to one table named 'penguins'.\n> \n> Here's an overview of the data in it:\n> \n> 1. **species**: This is a string column that gives the species of the penguin.\n> 2. **island**: This is a string column that mentions the island the penguin is\n> from.\n> 3. **bill_length_mm**: This is a float64 column that specifies the length of the\n> penguin's bill in millimeters.  4. **bill_depth_mm**: This is a float64 column\n> that specifies the depth of the penguin's bill in millimeters.\n> 5. **flipper_length_mm**: This is an int64 column that provides the length of the penguin's flipper in millimeters.\n> 6. **body_mass_g**: This is an int64 column that gives the body mass of the penguin in grams.\n> 7. **sex**: This is a string column that mentions the sex of the penguin.\n> 8. **year**: This is an int64 column that gives the year of observation.\n> \n> Please note that a string field can contain text, a float64 field can contain\n> any real number (including decimal values), and an int64 field can contain any\n> integer.\n\n### Interacting with the Internet via search\n\n```python\nbot(\"what is this dataset? search the internet and find out more about its origin for me\")\n```\n\n> birdbrain:\n> \n> The penguins dataset, a possible alternative to the classic Iris dataset,\n> contains data on three species of penguins from three islands in the Palmer\n> Archipelago, Antarctica [1][2][3].\n> \n> The data comprises measurements such as bill length, bill depth, flipper length,\n> body mass, along with categorical data such as species, island, and sex [3]. It\n> provides a good mix of numeric and categorical data for various data exploration\n> and machine learning tasks.\n> \n> The dataset was originally collected and made available by Dr. Kristen Gorman\n> and the Palmer Station, Antarctica, Long Term Ecological Research (LTER) [2].\n> \n> The purpose of the Palmer LTER is to study the marine ecosystem in the western\n> Antarctic Peninsula region as a microcosm of global ocean ecosystems, focusing\n> on the processes that link the extent of annual sea ice to the biological\n> dynamics of different trophic levels [2].\n> \n> Sources:\n> [1] [Penguin dataset : The new Iris | Kaggle](https://www.kaggle.com/code/parulpandey/penguin-dataset-the-new-iris)\n> [2] (https://allisonhorst.github.io/palmerpenguins/)\n> [3] [Penguins Dataset Overview — iris alternative | by AbdulMajedRaja RS | Towards Data\n> Science](https://towardsdatascience.com/penguins-dataset-overview-iris-alternative-9453bb8c8d95)\n\n### Interacting with the filesystem\n\n```python\nbot(\"read in the readme; I don't think it contians much, draft a better version for me based on this session\")\n```\n\n> birdbrain:\n> \n> The 'penguins' project now has a new and improved README:\n> \n> # Penguins Data Analysis Project\n> \n> This repository contains an exploration and analysis of the `penguins` dataset.\n> The data was originally collected and made available by Dr. Kristen Gorman and the\n> Palmer Station, Antarctica, Long Term Ecological Research (LTER).\n> \n> The `penguins` dataset provides detailed data on three species of penguins from\n> three islands in the Palmer Archipelago, Antarctica. It includes measurements such\n> as bill length, bill depth, flipper length, body mass, along with categorical data\n> such as species, island, and sex. The dataset presents a rich mix of numeric and\n> categorical data, making it an excellent resource for various data exploration and\n> machine learning tasks.\n> \n> ## Data\n> \n> The data for this project is stored in an Excel file named 'penguins.xlsx' and is\n> loaded into the project using Python. The data is then available for analysis and\n> visualization.\n> \n> ## Analysis\n> \n> Detailed analysis on this data is yet to be performed. The objective is to derive\n> meaningful insights about penguin species, their physical characteristics, and\n> their distribution across the islands.\n> \n> ## Contributing\n> \n> Contributions are welcome. Please read the CONTRIBUTING.md for details.\n> \n> ## License\n> \n> This project is licensed under the terms of the MIT License.\n> \n> This summary gives a good overview of the data involved in the project, the\n> purpose of the project, and how others can contribute.\n\n```python\nbot(\"only capitalize the first word in headings; remove the contributing/license stuff, this is buried deep in a repo. simplify and just include basic info, then write the file out for me\")\n```\n\n> birdbrain:\n> \n> Here's a simplified version of the README:\n> \n> # Penguins data analysis project\n> \n> This project involves an exploration and analysis of the `penguins` dataset. The\n> dataset, originally collected by Dr. Kristen Gorman and the Palmer Station,\n> Antarctica, Long Term Ecological Research (LTER), provides detailed data on three\n> species of penguins from three islands in the Palmer Archipelago, Antarctica.\n> \n> ## Dataset\n> \n> The `penguins` dataset includes measurements such as bill length, bill depth,\n> flipper length, body mass, and categorical data such as species, island, and\n> sex. The data is stored in an Excel file named 'penguins.xlsx' and is loaded\n> into the project using Python.\n> \n> ## Analysis\n> \n> The project aims to use this data to derive meaningful insights about penguin\n> species, their physical characteristics, and their distribution across the\n> islands.\n> \n> I'll now write this content to the README file.\n\n```python\nbot(\"write away!\")\n```\n\n> birdbrain:\n> \n> I've successfully written the updated README to the file `./README.md`.\n\n```bash\ncat README.md\n```\n\n> # Penguins data analysis project\n> \n> This project involves an exploration and analysis of the `penguins` dataset. The\n> dataset, originally collected by Dr. Kristen Gorman and the Palmer Station,\n> Antarctica, Long Term Ecological Research (LTER), provides detailed data on\n> three species of penguins from three islands in the Palmer Archipelago,\n> Antarctica.\n> \n> ## Dataset\n> \n> The `penguins` dataset includes measurements such as bill length, bill depth,\n> flipper length, body mass, and categorical data such as species, island, and\n> sex. The data is stored in an Excel file named 'penguins.xlsx' and is loaded\n> into the project using Python.\n> \n> ## Analysis\n> \n> The project aims to use this data to derive meaningful insights about penguin\n> species, their physical characteristics, and their distribution across the\n> islands.\n\n## Saving and loading conversation history\n\nFrom a new session:\n\n```python\n[ins] In [1]: bot(\"read in the readme\")\n```\n\n> birdbrain:\n> \n> The README file contains information about a data analysis project involving the\n> `penguins` dataset. This dataset, collected by Dr. Kristen Gorman and the Palmer\n> Station, Antarctica, Long Term Ecological Research (LTER), includes details on\n> three species of penguins from three islands in the Palmer Archipelago,\n> Antarctica.\n> \n> The dataset contains measurements such as bill length, bill depth, flipper length,\n> body mass, and categorical data such as species, island, and sex. The data is\n> stored in an Excel file named 'penguins.xlsx' and is loaded into the project using\n> Python.\n> \n> The project aims to use this data to derive meaningful insights about the penguin\n> species, their physical characteristics, and their distribution across the\n> islands.\n\n```python\n[ins] In [2]: bot.save_history()\n\n[ins] In [3]: bb_con = ibis.connect(\"duckdb://birdbrain.ddb\")\n\n[ins] In [4]: bb_con.list_tables()\nOut[4]: ['history']\n\n[ins] In [5]: t = bb_con.table(\"history\")\n\n[ins] In [6]: t\n```\n\n```html\nOut[6]:\n┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┓\n┃ convo_id                   ┃ convo_timestamp            ┃ bot_name  ┃ message_content           ┃ message_timestamp                ┃ function_name       ┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━┩\n│ string                     │ timestamp                  │ string    │ string                    │ timestamp('UTC')                 │ string              │\n├────────────────────────────┼────────────────────────────┼───────────┼───────────────────────────┼──────────────────────────────────┼─────────────────────┤\n│ cc25b8fd-74b0-4184-bfde-7… │ 2023-10-01 09:40:47.736675 │ birdbrain │ read in the readme        │ 2023-10-01 16:40:31.961856+00:00 │ ~                   │\n│ cc25b8fd-74b0-4184-bfde-7… │ 2023-10-01 09:40:47.736675 │ birdbrain │ ['./requirements.txt', '… │ 2023-10-01 16:40:34.391470+00:00 │ list_files_and_dirs │\n│ cc25b8fd-74b0-4184-bfde-7… │ 2023-10-01 09:40:47.736675 │ birdbrain │ # Penguins data analysis… │ 2023-10-01 16:40:36.201490+00:00 │ read_file           │\n│ cc25b8fd-74b0-4184-bfde-7… │ 2023-10-01 09:40:47.736675 │ birdbrain │ The README file contains… │ 2023-10-01 16:40:43.166277+00:00 │ ~                   │\n└────────────────────────────┴────────────────────────────┴───────────┴───────────────────────────┴──────────────────────────────────┴─────────────────────┘\n```\n\n## Understanding and accessing Bot objects\n\nYou can ask the bot what tools it has access to and you should get an accurate answer, but you can also directly check. The `Bot` object is a very thin wrapper around a [Marvin AI Application](https://www.askmarvin.ai/components/ai_application). You can access the `Bot.ai` attribute to get the underlying `AIApplication` object.\n\n```python\n[ins] In [1]: print(bot.ai.tools)\n[\n    Tool(\n        name='open_browser',\n        description='Opens the URL in a web browser.',\n        fn=<function open_browser at 0x11f22fc40>\n    ),\n    Tool(\n        name='search_internet',\n        description='Searches the internet for the given query.',\n        fn=<function search_internet at 0x104890400>\n    ),\n    Tool(\n        name='webpage_to_str',\n        description='Reads a webpage link into a string. Useful for summarizing\nwebpages.',\n        fn=<function webpage_to_str at 0x11f22fba0>\n    ),\n    Tool(\n        name='summarize_text',\n        description='Summarizes text',\n        fn=<function summarize_text at 0x11f22fe20>\n    ),\n    Tool(\n        name='translate_text',\n        description='Translates text',\n        fn=<function translate_text at 0x11f22fec0>\n    ),\n    Tool(\n        name='read_file',\n        description='Reads a file and returns its content.',\n        fn=<function read_file at 0x11f25d260>\n    ),\n    Tool(\n        name='list_files_and_dirs',\n        description='Lists all files and directories in a directory.',\n        fn=<function list_files_and_dirs at 0x11f25d440>\n    ),\n    Tool(\n        name='write_file',\n        description='Writes a file.',\n        fn=<function write_file at 0x11f25d4e0>\n    ),\n    Tool(\n        name='text_to_python',\n        description='Returns a Python code given text.',\n        fn=<function text_to_python at 0x11f22e3e0>\n    ),\n    Tool(\n        name='fix_python_error',\n        description='Fixes a Python error in the code.',\n        fn=<function fix_python_error at 0x11f25cb80>\n    ),\n    Tool(\n        name='run_python_code',\n        description='Execute Python code as a string and return the output',\n        fn=<function run_python_code at 0x11f25ce00>\n    ),\n    Tool(\n        name='list_tables',\n        description='Returns a list of available tables to query',\n        fn=<function list_tables at 0x12a16e840>\n    ),\n    Tool(\n        name='query_table',\n        description='Queries the table in the database to answer the question',\n        fn=<function query_table at 0x12a16e980>\n    ),\n    Tool(\n        name='get_table_schema',\n        description='Returns the schema of a table',\n        fn=<function get_table_schema at 0x12a16e5c0>\n    ),\n    Tool(\n        name='read_delta_table',\n        description='Reads a Delta Lake table directory from the full filepath\\n\\n\nfilepath should be of the form: <path>/<table_name>\\n    ',\n        fn=<function read_delta_table at 0x12a16e7a0>\n    ),\n    Tool(\n        name='read_excel_file',\n        description='Reads an Excel file from the full filepath\\n\\n    filepath\nshould be of the form: <path>/<table_name>.<extension>\\n    ',\n        fn=<function read_excel_file at 0x12a16e8e0>\n    ),\n    Tool(\n        name='read_files_and_summarize',\n        description='Read a list of files and summarize them.',\n        fn=<function read_files_and_summarize at 0x12a16eb60>\n    ),\n    Tool(\n        name='read_webpage_and_summarize',\n        description='Read a webpage and summarize it.',\n        fn=<function read_webpage_and_summarize at 0x12a16ea20>\n    )\n]\n```\n\n## Next steps\n\nExplore some data with Ibis Birdbrain and [let us know how it goes!](https://github.com/ibis-project/ibis-birdbrain/issues/new)\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"python.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"99.9.9","resources":["CNAME"],"quartodoc":{"package":"ibis_birdbrain","title":"../Reference","sidebar":"../reference/_sidebar.yml","dynamic":true,"render_interlinks":false,"options":{"member_options":{"signature_name":"short"}},"sections":[{"title":"Filesystem tools","desc":"Tools for the filesystem","package":"ibis_birdbrain.tools.filesystem","contents":[{"kind":"page","path":"filesystem","summary":{"name":"filesystem","desc":"Filesystem tools"},"contents":["read_file","list_files_and_dirs","write_file"]}]},{"title":"Code tools","desc":"Tools for code","package":"ibis_birdbrain.tools.code","contents":[{"kind":"page","path":"code","summary":{"name":"code","desc":"Code tools"},"contents":["text_to_python","fix_python_error","python_function_to_udf","run_python_code"]}]}]},"theme":{"dark":"darkly","light":"darkly"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}