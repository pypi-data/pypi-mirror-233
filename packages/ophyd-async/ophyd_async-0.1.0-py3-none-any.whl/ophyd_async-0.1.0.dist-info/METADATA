Metadata-Version: 2.1
Name: ophyd-async
Version: 0.1.0
Summary: Asynchronous Bluesky hardware abstraction code, compatible with control systems like EPICS and Tango
Author-email: Tom Cobb <tom.cobb@diamond.ac.uk>
License: BSD 3-Clause License
        
        Copyright (c) 2014, Brookhaven National Laboratory
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: GitHub, https://github.com/bluesky/ophyd-async
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: networkx >=2.0
Requires-Dist: numpy
Requires-Dist: packaging
Requires-Dist: pint
Requires-Dist: bluesky
Requires-Dist: event-model
Requires-Dist: p4p
Requires-Dist: typing-extensions ; python_version < "3.8"
Provides-Extra: ca
Requires-Dist: aioca >=1.6 ; extra == 'ca'
Provides-Extra: dev
Requires-Dist: ophyd-async[pva] ; extra == 'dev'
Requires-Dist: ophyd-async[ca] ; extra == 'dev'
Requires-Dist: attrs >=19.3.0 ; extra == 'dev'
Requires-Dist: black ; extra == 'dev'
Requires-Dist: bluesky >=1.11.0 ; extra == 'dev'
Requires-Dist: caproto[standard] >=0.4.2rc1 ; extra == 'dev'
Requires-Dist: pytest-codecov ; extra == 'dev'
Requires-Dist: databroker >=1.0.0b1 ; extra == 'dev'
Requires-Dist: doctr ; extra == 'dev'
Requires-Dist: epics-pypdb ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: flake8-isort ; extra == 'dev'
Requires-Dist: Flake8-pyproject ; extra == 'dev'
Requires-Dist: h5py ; extra == 'dev'
Requires-Dist: inflection ; extra == 'dev'
Requires-Dist: ipython ; extra == 'dev'
Requires-Dist: ipywidgets ; extra == 'dev'
Requires-Dist: matplotlib ; extra == 'dev'
Requires-Dist: mypy ; extra == 'dev'
Requires-Dist: myst-parser ; extra == 'dev'
Requires-Dist: numpydoc ; extra == 'dev'
Requires-Dist: ophyd ; extra == 'dev'
Requires-Dist: pipdeptree ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'
Requires-Dist: pydata-sphinx-theme >=0.12 ; extra == 'dev'
Requires-Dist: pyepics >=3.4.2 ; extra == 'dev'
Requires-Dist: pyside6 ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pytest-asyncio ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: pytest-faulthandler ; extra == 'dev'
Requires-Dist: pytest-rerunfailures ; extra == 'dev'
Requires-Dist: pytest-timeout ; extra == 'dev'
Requires-Dist: sphinx-autobuild ; extra == 'dev'
Requires-Dist: sphinx-copybutton ; extra == 'dev'
Requires-Dist: sphinx-design ; extra == 'dev'
Requires-Dist: tox-direct ; extra == 'dev'
Requires-Dist: types-mock ; extra == 'dev'
Provides-Extra: pva
Requires-Dist: p4p ; extra == 'pva'

***********
Ophyd Async
***********

|build_status| |coverage| |pypi_version| |license|

Ophyd is a Python library for interfacing with hardware. It provides an
abstraction layer that enables experiment orchestration and data acquisition
code to operate above the specifics of particular devices and control systems.

Ophyd is typically used with the `Bluesky Run Engine`_ for experiment
orchestration and data acquisition. It is also sometimes used in a stand-alone
fashion.

Many facilities use ophyd to integrate with control systems that use `EPICS`_ ,
but ophyd's design and some of its objects are also used to integrate with
other control systems.

* Put the details specific to a device or control system behind a **high-level
  interface** with methods like ``trigger()``, ``read()``, and ``set(...)``.
* **Group** individual control channels (such as EPICS V3 PVs) into logical
  "Devices" to be configured and used as units with internal coordination.
* Assign readings with **names meaningful for data analysis** that will
  propagate into metadata.
* **Categorize** readings by "kind" (primary reading, configuration,
  engineering/debugging) which can be read selectively.

============== ==============================================================
PyPI           ``pip install ophyd``
Conda          ``conda install -c conda-forge ophyd``
Source code    https://github.com/bluesky/ophyd
Documentation  https://blueskyproject.io/ophyd
============== ==============================================================

See the tutorials for usage examples.

.. |build_status| image:: https://github.com/bluesky/ophyd/workflows/Unit%20Tests/badge.svg?branch=master
    :target: https://github.com/bluesky/ophyd/actions?query=workflow%3A%22Unit+Tests%22
    :alt: Build Status

.. |coverage| image:: https://codecov.io/gh/bluesky/ophyd/branch/master/graph/badge.svg
    :target: https://codecov.io/gh/bluesky/ophyd
    :alt: Test Coverage

.. |pypi_version| image:: https://img.shields.io/pypi/v/ophyd.svg
    :target: https://pypi.org/project/ophyd
    :alt: Latest PyPI version

.. |license| image:: https://img.shields.io/badge/License-BSD%203--Clause-blue.svg
    :target: https://opensource.org/licenses/BSD-3-Clause
    :alt: BSD 3-Clause License

.. _Bluesky Run Engine: http://blueskyproject.io/bluesky

.. _EPICS: http://www.aps.anl.gov/epics/

..
    Anything below this line is used when viewing README.rst and will be replaced
    when included in index.rst

See https://blueskyproject.io/ophyd-async for more detailed documentation.
