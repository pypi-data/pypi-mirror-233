Metadata-Version: 2.1
Name: pyav
Version: 11.0.1
Summary: Pythonic bindings for FFmpeg's libraries.
Home-page: https://github.com/WyattBlue/PyAV
Author: WyattBlue
Author-email: wyattblue@auto-editor.com
License: BSD
Project-URL: Bug Reports, https://github.com/PyAV-Org/PyAV/issues
Project-URL: Documentation, https://pyav.org/docs
Project-URL: Feedstock, https://github.com/conda-forge/av-feedstock
Project-URL: Download, https://pypi.org/project/av
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Cython
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Multimedia :: Sound/Audio
Classifier: Topic :: Multimedia :: Sound/Audio :: Conversion
Classifier: Topic :: Multimedia :: Video
Classifier: Topic :: Multimedia :: Video :: Conversion
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE.txt

# PyAV

PyAV is a Pythonic binding for the [FFmpeg](https://ffmpeg.org) libraries. We aim to provide all of the power and control of the underlying library, but manage the gritty details as much as possible.

---
[![Actions Status](https://github.com/WyattBlue/PyAV/workflows/tests/badge.svg)](https://github.com/wyattblue/PyAV/actions?workflow=tests)
<a href="https://github.com/psf/black"><img alt="Code style: black" src="https://img.shields.io/badge/code%20style-black-000000.svg"></a>

PyAV is for direct and precise access to your media via containers, streams, packets, codecs, and frames. It exposes a few transformations of that data, and helps you get your data to/from other packages (e.g. Numpy and Pillow).

This power does come with some responsibility as working with media is horrendously complicated and PyAV can't abstract it away or make all the best decisions for you. If the `ffmpeg` command does the job without you bending over backwards, PyAV is likely going to be more of a hindrance than a help.

But where you can't work without it, PyAV is a critical tool.


## Installing
Due to the complexity of the dependencies, PyAV is not always the easiest Python package to install from source. Binary wheels are provided on [PyPI](https://pypi.org/project/pyav) for  MacOS, Windows, and Linux linked against a modern FFmpeg. You can install these wheels by running:

```bash
pip install pyav
```

If you want to use your existing FFmpeg, the source version is available too:

```bash
pip install pyav --no-binary pyav
```

## Alternative installation methods

Another way of installing PyAV is via [conda-forge](https://conda-forge.github.io/):

```bash
conda install av -c conda-forge
```

And if you want to build from the absolute source (for development or testing):

```bash
git clone https://github.com/WyattBlue/PyAV.git
cd PyAV
source scripts/activate.sh

pip install -U -r tests/requirements.txt
./scripts/build-deps

make
# optional: make test
```

---

Have fun, and good luck!
