# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/04_repl.ipynb.

# %% auto 0
__all__ = ['swapall', 'joinall', 'is_asterick', 'is_ellipsis', 'is_upper', 'is_lower', 'remove_quotes', 'remove_whitespace',
           'comma_to_comma_', 'comma__to_comma', 'to_single_spaced_list']

# %% ../nbs/04_repl.ipynb 4
import re, string
from .nstr import ASTERICK, ELLIPSE, COMMA, SUNDER, SUB_SUNDER

# %% ../nbs/04_repl.ipynb 6
def swapall(s: str, pattern: str, repl: str = SUB_SUNDER) -> str:
    '''Replace all occurences of the pattern in string with repl'''
    return re.sub(pattern, repl, s)

def joinall(s: str, pattern: str, repl: str = SUNDER) -> str:
    '''Join all occurrences of the pattern in string with repl'''
    matches = re.findall(pattern, s)
    return repl.join(matches)

# %% ../nbs/04_repl.ipynb 8
def is_asterick(s: str) -> bool:
    return s == ASTERICK

def is_ellipsis(s: str) -> bool:
    return s == ELLIPSE

def is_upper(s:str) -> bool:
    return s in string.ascii_uppercase

def is_lower(s:str) -> bool:
    return s in string.ascii_lowercase

def remove_quotes(s:str) -> str:
    return s.replace('"', '').replace("'", '')

def remove_whitespace(s:str) -> str:
    return s.replace(' ', '')

def comma_to_comma_(s:str) -> str:
    return s.replace(',', ',_')

def comma__to_comma(s:str)->str:
    return s.replace(',_', ', ')

def to_single_spaced_list(s:str) -> str:
    s = comma_to_comma_(s)
    s = remove_whitespace(s)
    s = comma__to_comma(s)
    return s
