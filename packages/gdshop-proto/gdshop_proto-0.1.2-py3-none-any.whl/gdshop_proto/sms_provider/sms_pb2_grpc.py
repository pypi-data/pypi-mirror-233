# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from gdshop_proto.sms_provider import sms_pb2 as gdshop__proto_dot_sms__provider_dot_sms__pb2


class SMSServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Send = channel.unary_unary(
                '/sms.SMSService/Send',
                request_serializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.SendRequest.SerializeToString,
                response_deserializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.SendResponse.FromString,
                )
        self.Check = channel.unary_unary(
                '/sms.SMSService/Check',
                request_serializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.CheckRequest.SerializeToString,
                response_deserializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.CheckResponse.FromString,
                )
        self.SendAcceptCode = channel.unary_unary(
                '/sms.SMSService/SendAcceptCode',
                request_serializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.SendAcceptCodeRequest.SerializeToString,
                response_deserializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.SendResponse.FromString,
                )


class SMSServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Send(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Check(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendAcceptCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SMSServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Send': grpc.unary_unary_rpc_method_handler(
                    servicer.Send,
                    request_deserializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.SendRequest.FromString,
                    response_serializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.SendResponse.SerializeToString,
            ),
            'Check': grpc.unary_unary_rpc_method_handler(
                    servicer.Check,
                    request_deserializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.CheckRequest.FromString,
                    response_serializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.CheckResponse.SerializeToString,
            ),
            'SendAcceptCode': grpc.unary_unary_rpc_method_handler(
                    servicer.SendAcceptCode,
                    request_deserializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.SendAcceptCodeRequest.FromString,
                    response_serializer=gdshop__proto_dot_sms__provider_dot_sms__pb2.SendResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sms.SMSService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SMSService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Send(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sms.SMSService/Send',
            gdshop__proto_dot_sms__provider_dot_sms__pb2.SendRequest.SerializeToString,
            gdshop__proto_dot_sms__provider_dot_sms__pb2.SendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sms.SMSService/Check',
            gdshop__proto_dot_sms__provider_dot_sms__pb2.CheckRequest.SerializeToString,
            gdshop__proto_dot_sms__provider_dot_sms__pb2.CheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendAcceptCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sms.SMSService/SendAcceptCode',
            gdshop__proto_dot_sms__provider_dot_sms__pb2.SendAcceptCodeRequest.SerializeToString,
            gdshop__proto_dot_sms__provider_dot_sms__pb2.SendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
