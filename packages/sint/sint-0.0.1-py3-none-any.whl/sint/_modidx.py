# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/sint',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/sint',
                'lib_path': 'sint'},
  'syms': { 'sint.bflag': { 'sint.bflag.bflag': ('bflag.html#bflag', 'sint/bflag.py'),
                            'sint.bflag.bflag.__call__': ('bflag.html#bflag.__call__', 'sint/bflag.py'),
                            'sint.bflag.bflag.__new__': ('bflag.html#bflag.__new__', 'sint/bflag.py'),
                            'sint.bflag.bflag.__repr__': ('bflag.html#bflag.__repr__', 'sint/bflag.py'),
                            'sint.bflag.bflag.__str__': ('bflag.html#bflag.__str__', 'sint/bflag.py'),
                            'sint.bflag.bflag.asbool': ('bflag.html#bflag.asbool', 'sint/bflag.py'),
                            'sint.bflag.bflag.ascall': ('bflag.html#bflag.ascall', 'sint/bflag.py'),
                            'sint.bflag.bflag.boolcall': ('bflag.html#bflag.boolcall', 'sint/bflag.py'),
                            'sint.bflag.bflag.clsname': ('bflag.html#bflag.clsname', 'sint/bflag.py'),
                            'sint.bflag.bflag.fncstr': ('bflag.html#bflag.fncstr', 'sint/bflag.py'),
                            'sint.bflag.bflag.getdefs': ('bflag.html#bflag.getdefs', 'sint/bflag.py'),
                            'sint.bflag.bflag.sigstr': ('bflag.html#bflag.sigstr', 'sint/bflag.py')},
            'sint.butil': { 'sint.butil.asbool': ('butil.html#asbool', 'sint/butil.py'),
                            'sint.butil.ascall': ('butil.html#ascall', 'sint/butil.py'),
                            'sint.butil.boolcall': ('butil.html#boolcall', 'sint/butil.py'),
                            'sint.butil.callbool': ('butil.html#callbool', 'sint/butil.py'),
                            'sint.butil.echobool': ('butil.html#echobool', 'sint/butil.py'),
                            'sint.butil.isbooltype': ('butil.html#isbooltype', 'sint/butil.py')},
            'sint.cons': {},
            'sint.enums': { 'sint.enums.SIntKey': ('enums.html#sintkey', 'sint/enums.py'),
                            'sint.enums.SIntStr': ('enums.html#sintstr', 'sint/enums.py'),
                            'sint.enums.SIntSym': ('enums.html#sintsym', 'sint/enums.py'),
                            'sint.enums.SIntVal': ('enums.html#sintval', 'sint/enums.py'),
                            'sint.enums.Sign': ('enums.html#sign', 'sint/enums.py'),
                            'sint.enums.SignEnum': ('enums.html#signenum', 'sint/enums.py'),
                            'sint.enums.SignMeta': ('enums.html#signmeta', 'sint/enums.py'),
                            'sint.enums.SignMeta.NEG': ('enums.html#signmeta.neg', 'sint/enums.py'),
                            'sint.enums.SignMeta.NIL': ('enums.html#signmeta.nil', 'sint/enums.py'),
                            'sint.enums.SignMeta.POS': ('enums.html#signmeta.pos', 'sint/enums.py')},
            'sint.flags': { 'sint.flags.isint': ('flags.html#isint', 'sint/flags.py'),
                            'sint.flags.isneg': ('flags.html#isneg', 'sint/flags.py'),
                            'sint.flags.isnone': ('flags.html#isnone', 'sint/flags.py'),
                            'sint.flags.isnum': ('flags.html#isnum', 'sint/flags.py'),
                            'sint.flags.ispos': ('flags.html#ispos', 'sint/flags.py'),
                            'sint.flags.isstr': ('flags.html#isstr', 'sint/flags.py'),
                            'sint.flags.iszero': ('flags.html#iszero', 'sint/flags.py')},
            'sint.futil': { 'sint.futil.getdefs': ('futil.html#getdefs', 'sint/futil.py'),
                            'sint.futil.haskwargs': ('futil.html#haskwargs', 'sint/futil.py'),
                            'sint.futil.hasvargs': ('futil.html#hasvargs', 'sint/futil.py'),
                            'sint.futil.islambda': ('futil.html#islambda', 'sint/futil.py'),
                            'sint.futil.lambdastr': ('futil.html#lambdastr', 'sint/futil.py'),
                            'sint.futil.lambdastr_inspect': ('futil.html#lambdastr_inspect', 'sint/futil.py'),
                            'sint.futil.lambdastr_re': ('futil.html#lambdastr_re', 'sint/futil.py'),
                            'sint.futil.mergevargs': ('futil.html#mergevargs', 'sint/futil.py')},
            'sint.ntups': {'sint.ntups.sign': ('ntups.html#sign', 'sint/ntups.py')},
            'sint.sint': { 'sint.sint.sint': ('sint.html#sint', 'sint/sint.py'),
                           'sint.sint.sint.__new__': ('sint.html#sint.__new__', 'sint/sint.py'),
                           'sint.sint.sint.eval': ('sint.html#sint.eval', 'sint/sint.py'),
                           'sint.sint.sint.match': ('sint.html#sint.match', 'sint/sint.py'),
                           'sint.sint.sint.pow': ('sint.html#sint.pow', 'sint/sint.py'),
                           'sint.sint.sint.str': ('sint.html#sint.str', 'sint/sint.py'),
                           'sint.sint.sint.sym': ('sint.html#sint.sym', 'sint/sint.py'),
                           'sint.sint.sint.to': ('sint.html#sint.to', 'sint/sint.py'),
                           'sint.sint.sint.topow': ('sint.html#sint.topow', 'sint/sint.py'),
                           'sint.sint.sint.tostr': ('sint.html#sint.tostr', 'sint/sint.py'),
                           'sint.sint.sint.tosym': ('sint.html#sint.tosym', 'sint/sint.py')},
            'sint.types': {},
            'sint.utils': { 'sint.utils.any2sint': ('utils.html#any2sint', 'sint/utils.py'),
                            'sint.utils.int2sint': ('utils.html#int2sint', 'sint/utils.py'),
                            'sint.utils.isnumstr': ('utils.html#isnumstr', 'sint/utils.py'),
                            'sint.utils.negstr': ('utils.html#negstr', 'sint/utils.py'),
                            'sint.utils.numstr2sint': ('utils.html#numstr2sint', 'sint/utils.py'),
                            'sint.utils.posstr': ('utils.html#posstr', 'sint/utils.py'),
                            'sint.utils.str2sint': ('utils.html#str2sint', 'sint/utils.py'),
                            'sint.utils.tern2x': ('utils.html#tern2x', 'sint/utils.py'),
                            'sint.utils.tosint': ('utils.html#tosint', 'sint/utils.py')}}}
