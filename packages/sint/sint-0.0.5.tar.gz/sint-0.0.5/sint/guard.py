# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_guard.ipynb.

# %% auto 0
__all__ = ['isstr', 'isnum', 'isnumstr', 'issignint', 'issignchr', 'issignsym', 'ispos', 'isneg', 'iszer']

# %% ../nbs/01_guard.ipynb 3
from numbers import Number
from typing import Any, TypeGuard

# %% ../nbs/01_guard.ipynb 4
from .types import NumStr, SignInt, SignChr, SignSym

# %% ../nbs/01_guard.ipynb 6
def isstr(v: Any) -> TypeGuard[str]: return isinstance(v, str)
def isnum(v: Any) -> TypeGuard[Number]: return isinstance(v, Number)
def isnumstr(v: Any) -> TypeGuard[NumStr]: return isinstance(v, NumStr)


def issignint(v: Any) -> TypeGuard[SignInt]: return v in {1, 0, -1}     # isinstance(v, SignInt)
def issignchr(v: Any) -> TypeGuard[SignChr]: return v in {'P', 'N', ''} # isinstance(v, SignChr)
def issignsym(v: Any) -> TypeGuard[SignSym]: return v in {'+', '-', ''} # isinstance(v, SignSym)

def ispos(n: Number) -> bool: return isnum(n) and n > 0
def isneg(n: Number) -> bool: return isnum(n) and n < 0
def iszer(n: Number) -> bool: return isnum(n) and n == 0
