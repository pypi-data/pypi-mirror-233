[tool.poetry]
name = "diskcache-fernet"
version = "0.1.2"
description = ""
authors = ["phi <phi.friday@gmail.com>"]
readme = "README.md"
license = "Apache 2.0 License"
repository = "https://github.com/phi-friday/diskcache-fernet"
packages = [{ include = "diskcache_fernet", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.8"
diskcache = "5.6.3"
cryptography = "41.0.4"
typing-extensions = "4.8.0"

[tool.poetry.group.dev.dependencies]
ruff = "0.0.291"
black = "23.9.1"
pytest = "^7.4.2"
pre-commit = "^3.4.0"

[tool.ruff]
line-length = 88
target-version = "py38"
select = ["ALL"]
fixable = [
    "UP",
    'F401',   # unused imports
    "F522",   # string-dot-format-extra-named-arguments
    "F541",   # f-string-missing-placeholders
    "W292",   # no-new-line-at-end-of-file
    "E711",   # none-comparison
    "E712",   # true-false-comparison
    "E713",   # not-in-test
    "E714",   # not-is-test
    "I001",   # unsorted-imports
    "COM812", # trailing-comma-missing
    "Q000",   # bad-quotes-inline-string
    "Q001",   # bad-quotes-multiline-string
    "UP037",  # quoted-annotation
    "W293",   # blank-line-with-whitespace
    "RSE102", # unnecessary-paren-on-raise-exception
    "SIM108", # if-else-block-instead-of-if-exp
    "I002",   # missing-required-import
    "RUF100", # unused-noqa
    "TCH003", # typing-only-standard-library-import
    "UP034",  # extraneous-parentheses
    "RUF005", # unpack-instead-of-concatenating-to-collection-literal
    "C401",   # unnecessary-generator-set
    "W292",   # no-new-line-at-end-of-file
    "W291",   # trailing-whitespace
    "RUF010", # explicit-f-string-type-conversion
    "FLY002", # static-join-to-f-string
]
ignore = [
    'TD',     # flake8-todos
    'E712',   # TrueFalseComparison # sqlalchemy
    "E711",   # none-comparison # sqlalchemy
    "D100",   # public-module
    "D104",   # public-package
    "D107",   # public-init
    "D201",   # no-blank-line-before-function
    "D202",   # no-blank-line-after-function
    "D203",   # one-blank-line-before-class
    "D204",   # one-blank-line-after-class
    "D211",   # no-blank-line-before-class
    "D212",   # multi-line-summary-first-line
    "D213",   # multi-line-summary-second-line
    "D400",   # ends-in-period
    "D401",   # non-imperative-mood
    "D403",   # first-line-capitalized
    "D406",   # new-line-after-section-name
    "D407",   # dashed-underline-after-section
    "D417",   # undocumented-param
    "D415",   # ends-in-punctuation
    "EM101",  # raw-string-in-exception
    "TRY003", # raise-vanilla-args
    "ANN101", # missing-type-self
    "ANN102", # missing-type-cls
    "ANN401", # dynamically-typed-expression
    "FBT002", # boolean-default-value-in-function-definition
    "PGH003", # blanket-type-ignore
    "SIM117", # multiple-with-statements # python3.8
    "B905",   # zip-without-explicit-strict
    "PD010",  # use-of-dot-pivot-or-unstack
    "D105",   # undocumented-magic-method
    "TD",     # flake8-todos
    "FIX",    # flake8-fixme
]

[tool.ruff.per-file-ignores]
"./tests/**/*.py" = [
    "TCH001",
    "TCH002",
    "TCH003",
    "S101",
    "D101",
    "ANN001",
    "ANN201",
    "PLR0133",
    "W605",
    "D103",
    "D102",
    "PLR2004",
]

[tool.black]
line-length = 88
target-version = ['py311']
preview = true

[tool.ruff.pylint]
max-args = 10

[tool.ruff.isort]
known-local-folder = ['diskcache_fernet']
required-imports = ["from __future__ import annotations"]

[tool.pyright]
pythonVersion = '3.8'
pythonPlatform = 'Linux'
diagnostic = 'basic'
include = ['src', 'tests']

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
