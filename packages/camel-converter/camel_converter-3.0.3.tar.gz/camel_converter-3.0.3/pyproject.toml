[tool.poetry]
name = "camel-converter"
version = "3.0.3"
description = "Converts a string from snake case to camel case or camel case to snake case"
authors = ["Paul Sanders <psanders1@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/sanders41/camel-converter"
homepage = "https://github.com/sanders41/camel-converter"
documentation = "https://github.com/sanders41/camel-converter"
keywords = ["python", "pydantic"]
classifiers=[
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Typing :: Typed",
]
include = ["camel_converter/py.typed"]

[tool.poetry.dependencies]
python = "^3.8"
pydantic = {version = ">=1.8.2", optional = true}

[tool.poetry.extras]
pydantic = ["pydantic"]

[tool.poetry.group.dev.dependencies]
black = ">=22.8.0"
mypy = ">=0.981"
pre-commit = ">=2.20.0"
pytest = ">=7.1.3"
pytest-cov = ">=3.0.0"
ruff = ">=0.0.117"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | \venv
  | _build
  | buck-out
  | build
  | dist
  | setup.py
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=camel_converter --cov-report term-missing"

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.ruff]
select=["E", "F", "T201", "T203", "I001", "UP"]
ignore=["E501"]
line-length = 100
fix = true
target-version = "py38"
