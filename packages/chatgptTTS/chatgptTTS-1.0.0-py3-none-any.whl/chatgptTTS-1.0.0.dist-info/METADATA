Metadata-Version: 2.1
Name: chatgptTTS
Version: 1.0.0
Summary: This is the simplest module for AI Conversations with TTS.
Home-page: https://github.com/soyll/chatgpt-tts
Author: soyll
Author-email: soyll@vk.com
Project-URL: GitHub, https://github.com/soyll
Keywords: ai chatgpt tts text-to-speech chat-gpt torch silero audio voice
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: aiohttp (==3.8.5)
Requires-Dist: aiosignal (==1.3.1)
Requires-Dist: antlr4-python3-runtime (==4.9.3)
Requires-Dist: async-timeout (==4.0.3)
Requires-Dist: attrs (==23.1.0)
Requires-Dist: blinker (==1.6.2)
Requires-Dist: browser-cookie3 (==0.19.1)
Requires-Dist: certifi (==2023.7.22)
Requires-Dist: cffi (==1.16.0)
Requires-Dist: charset-normalizer (==3.3.0)
Requires-Dist: click (==8.1.7)
Requires-Dist: colorama (==0.4.6)
Requires-Dist: curl-cffi (==0.5.9)
Requires-Dist: filelock (==3.12.4)
Requires-Dist: Flask (==3.0.0)
Requires-Dist: Flask-Cors (==4.0.0)
Requires-Dist: frozenlist (==1.4.0)
Requires-Dist: g4f (==0.1.4.2)
Requires-Dist: idna (==3.4)
Requires-Dist: itsdangerous (==2.1.2)
Requires-Dist: Jinja2 (==3.1.2)
Requires-Dist: Js2Py (==0.74)
Requires-Dist: lz4 (==4.3.2)
Requires-Dist: MarkupSafe (==2.1.3)
Requires-Dist: mpmath (==1.3.0)
Requires-Dist: multidict (==6.0.4)
Requires-Dist: networkx (==3.1)
Requires-Dist: numpy (==1.26.0)
Requires-Dist: omegaconf (==2.3.0)
Requires-Dist: pycparser (==2.21)
Requires-Dist: pycryptodome (==3.19.0)
Requires-Dist: pycryptodomex (==3.19.0)
Requires-Dist: PyExecJS (==1.5.1)
Requires-Dist: pyjsparser (==2.7.1)
Requires-Dist: PyYAML (==6.0.1)
Requires-Dist: requests (==2.31.0)
Requires-Dist: six (==1.16.0)
Requires-Dist: soundfile (==0.12.1)
Requires-Dist: sympy (==1.12)
Requires-Dist: torch (==2.0.1)
Requires-Dist: torchaudio (==2.0.2)
Requires-Dist: typing-extensions (==4.8.0)
Requires-Dist: tzdata (==2023.3)
Requires-Dist: tzlocal (==5.0.1)
Requires-Dist: urllib3 (==2.0.5)
Requires-Dist: websockets (==11.0.3)
Requires-Dist: Werkzeug (==3.0.0)
Requires-Dist: yarl (==1.9.2)

п»ї# ChatGPT-TTS Integration Library!
 The **ChatGPT-TTS Integration Library** is a powerful open-source tool that seamlessly combines the capabilities of ChatGPT and Text-to-Speech (TTS) technology. With this library, developers can effortlessly **create** conversational AI applications that **not only understand text input** but also **generate natural-sounding spoken responses**. This integration allows for a more immersive and interactive user experience, making it ideal for chatbots, virtual assistants, and other AI-driven applications.

## Table of Contents
* [Getting Started](#getting-started)
  * [Installation](#installation)
* [Usage](#usage)
* [Models](#models)
* [Integrate with Telegram](#integrate-with-telegram)
* [Parameters](#parameters)

## Getting Started

### Installation
#### Install using pypi
```bash
pip install chatgpt-tts
```
or
* Clone the GitHub repository:
	```bash
	git clone https://github.com/soyll/chatgpt-tts.git	
	```
* Navigate to directory:
	```bash
	cd chatgpt-tts 
	```
* (Recommended) Create a virtual environment to manage Python packages for your project:
	```bash
	python3 -m venv venv
	```
* Activate the virtual enviropment
	* On windows:
		```bash
		.\venv\Scripts\activate
		```  
	* On linux or macOs:
		```
		source venv/bin/activate
		```
* Install the required Python packages from  `requirements.txt`:
	```bash
	pip install -r requirments.txt
	```
## Usage

```python
import chatgpt-tts

# init ChatGPT-TTS
chat_tts = ChatGpt_TTS(speaker, model_id, language, folder_to_save)

# use ChatGPT-TTS
chat_tts.create_tts(text, prompt, user_id)
```
## Models
#### All *support* modeles check in [Silero Models](https://github.com/snakers4/silero-models#models-and-speakers)

## Integrate with Telegram
```python
# code by bruhmnm
import telebot  
from chatgptTTS import chat  
  
TOKEN = "TELEGRAM_TOKEN"  

# init ChatGPT-TTS 
chat_tts = chat.ChatGpt_TTS("en_0", "v3_en", "en", folder="usr/audio/")  
  
bot = telebot.TeleBot(TOKEN)  
  
@bot.message_handler(content_types=['text'])  
def integrate(message):  
	audio = chat_tts.create_tts(text=message.text, prompt="prompt", id=message.from_user.id)  
	# read wav
	with open(audio[1], 'rb') as fd:  
		audio = fd.read()  
	# send voice
	bot.send_voice(message.from_user.id, audio)  
  
bot.polling(none_stop=True)
```
## Parameters
|   name	|								description										      |   example  |
|----------|----------------------------------------------------------------|-
| speaker | A trained vocal pattern with gender, accent, and tone |en_0, en_1|
| model_id| Unique id of the language, indicating its version     | en_v3, v3_ru|
|   lang  | Language indicating available model_id and speaker    | ru, en
|  folder | Absolute path to the folder where Chat-GPT responses will be saved | C:/Example/Path/
|  prompt | A set of words denoting a task or dialog scenario | _Act as an editor and correct the mistakes in this text_|
|   text  | Text indicating a request to Chat-Gpt to which it will later respond | AI help for your creativty, no mstakes, great wrting!
| 	id	| A unique number that, when integrated with social media, can be linked to an individual user for logs | self.chat_id, self.user_id, id355367865, 34567653479
