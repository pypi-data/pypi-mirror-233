[tool.poetry]
name = "confluent_cloud_sdk"
version = "0.2.3"
description = "Confluent Cloud API SDK"
authors = ["John Preston <john@ews-network.net>"]
license = "GPL-2-only"
readme = "README.rst"
keywords = ["kafka", "confluent", "sdk"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
exclude = ["*.pyc", "*~", "*pycache*"]

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.27.1"
compose-x-common = "^1.4"
pydantic = "^1.10.2"

[tool.poetry.urls]
"Bug Tracker" = "https://codeberg.org/compose-x/confluent-cloud-sdk/issues"
"Confluent API Documentation" = "https://docs.confluent.io/cloud/current/api.html"

[tool.poetry.dev-dependencies]
isort = "^5.10.1"
black = "^22.1.0"
coverage = "^6.3.1"
tox = "^3.24.5"
pre-commit = "^2.17.0"
pyupgrade = "^3.2"
pyclean = "^2.2.0"
tbump = "^6.8.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^5.3.0"
sphinx-material = "^0.0.35"
sphinx-jsonschema = "^1.19.1"


[tool.poetry.group.dev.dependencies]
datamodel-code-generator = {extras = ["http"], version = "^0.14.0"}

[tool.datamodel-codegen]
input = "confluent-cloud-api.spec.json"
input-file-type = "jsonschema"
output = "cfn_kafka_admin/confluent_cloud_api/"
field-constraints  = "true"
use-default = "true"
reuse-model = "false"
target-python-version = "3.8"


[tool.tbump]
github_url = "https://codeberg.org/compose-x/confluent-cloud-sdk"

[tool.tbump.version]
current = "0.2.3"

regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (?:(?P<rc>[\S]+))?
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "src/confluent_cloud_sdk/__init__.py"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
known_first_party = "kelvin"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
