[build-system]
requires = ["setuptools>=1.2"]
build-backend = "setuptools.build_meta"

[tool.mypy]
python_version = "3.7"
ignore_missing_imports = true
exclude = ["public"]

[tool.ruff]
line-length = 100
target-version = "py37"
respect-gitignore = true

select = [
    "F",                  # Pyflakes
    "E", "W",             # pycodestyle
    "C90",                # mccabe
    "I",                  # isort
    "D",                  # pydocstyle
    "S",                  # flake8-bandit
    "B",                  # flake8-bugbear
    "A",                  # flake8-builtins
    "C4",                 # flake8-comprehensions
    "PIE",                # flake8-pie
    "PT",                 # flake8-pytest-style
    "RSE",                # flake8-raise
    "RET",                # flake8-return
    "SIM",                # flake8-simplify
    "PLC", "PLE", "PLW",  # Pylint
    "NPY",                # NumPy-specific rules
    "PERF",               # Perflint
    "RUF"                 # Ruff-specific rules
]

ignore = [
    # E741, E743: Ambiguous variable and function names
    # eminus uses, e.g., l (quantum number) as variables or O (overlap operator) as functions
    "E741", "E743",
    # S101: Use of `assert` detected
    # This should not introduce a security issue for us
    "S101",
    # SIM108: Use ternary operator instead of `if`-`else`-block
    # if-else blocks should be written down explicitly
    "SIM108",
    # RUF005: Consider `(*t, v)` instead of concatenation
    # This seems to be slower in the cases we use it
    "RUF005"
]

[tool.ruff.per-file-ignores]
"examples/*" = [
    # D100, D103: Missing docstring in public module or function
    "D100", "D103",
    # E501: Line too long
    "E501"
]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.isort]
force-sort-within-sections = true
order-by-type = false

[tool.ruff.pydocstyle]
convention = "google"
