# generated by datamodel-codegen:
#   filename:  metadataIngestion/storageServiceMetadataPipeline.json
#   timestamp: 2023-10-03T05:19:40+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Extra, Field

from ..type import filterPattern


class StorageMetadataConfigType(Enum):
    StorageMetadata = 'StorageMetadata'


class StorageServiceMetadataPipeline(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Optional[StorageMetadataConfigType] = Field(
        StorageMetadataConfigType.StorageMetadata, description='Pipeline type'
    )
    containerFilterPattern: Optional[filterPattern.FilterPattern] = Field(
        None, description='Regex to only fetch containers that matches the pattern.'
    )
