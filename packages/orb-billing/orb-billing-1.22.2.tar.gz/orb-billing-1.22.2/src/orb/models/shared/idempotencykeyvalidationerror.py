"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from orb import utils
from typing import Any, Final, Optional



@dataclasses.dataclass
class IdempotencyKeyValidationErrorHeaders:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class IdempotencyKeyValidationError:
    validation_errors: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validation_errors') }})
    STATUS: Final[int] = dataclasses.field(default=400, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    TYPE: Final[str] = dataclasses.field(default='https://docs.withorb.com/reference/error-responses#400-request-validation-errors', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})
    headers: Optional[IdempotencyKeyValidationErrorHeaders] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('headers') }})
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    

