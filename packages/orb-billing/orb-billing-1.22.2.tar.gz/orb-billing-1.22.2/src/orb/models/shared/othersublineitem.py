"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sublineitemgrouping as shared_sublineitemgrouping
from dataclasses_json import Undefined, dataclass_json
from orb import utils
from typing import Final, Optional, Union



@dataclasses.dataclass
class OtherSubLineItemQuantity:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class OtherSubLineItem:
    amount: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})
    r"""The total amount for this sub line item."""
    grouping: Optional[shared_sublineitemgrouping.SubLineItemGrouping] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grouping') }})
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    quantity: Union[float, str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity') }})
    TYPE: Final[str] = dataclasses.field(default='\'null\'', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    

