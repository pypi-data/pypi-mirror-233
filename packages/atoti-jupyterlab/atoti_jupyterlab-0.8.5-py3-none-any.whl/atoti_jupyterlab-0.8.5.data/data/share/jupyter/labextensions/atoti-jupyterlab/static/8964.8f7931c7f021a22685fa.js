"use strict";(self.webpackChunkatoti_jupyterlab=self.webpackChunkatoti_jupyterlab||[]).push([[8964],{8964:(e,r,u)=>{u.d(r,{Position:()=>t});class t{constructor(e,r){this.lineNumber=e,this.column=r}with(e=this.lineNumber,r=this.column){return e===this.lineNumber&&r===this.column?this:new t(e,r)}delta(e=0,r=0){return this.with(this.lineNumber+e,this.column+r)}equals(e){return t.equals(this,e)}static equals(e,r){return!e&&!r||!!e&&!!r&&e.lineNumber===r.lineNumber&&e.column===r.column}isBefore(e){return t.isBefore(this,e)}static isBefore(e,r){return e.lineNumber<r.lineNumber||!(r.lineNumber<e.lineNumber)&&e.column<r.column}isBeforeOrEqual(e){return t.isBeforeOrEqual(this,e)}static isBeforeOrEqual(e,r){return e.lineNumber<r.lineNumber||!(r.lineNumber<e.lineNumber)&&e.column<=r.column}static compare(e,r){let u=0|e.lineNumber,t=0|r.lineNumber;return u===t?(0|e.column)-(0|r.column):u-t}clone(){return new t(this.lineNumber,this.column)}toString(){return"("+this.lineNumber+","+this.column+")"}static lift(e){return new t(e.lineNumber,e.column)}static isIPosition(e){return e&&"number"==typeof e.lineNumber&&"number"==typeof e.column}}}}]);