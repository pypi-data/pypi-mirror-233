# Generated by Django 4.2.2 on 2023-06-15 05:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status", models.BooleanField(default=True, verbose_name="status")),
                (
                    "url_key",
                    models.CharField(
                        help_text="Enter the url key of the search engine",
                        max_length=250,
                        verbose_name="Url key",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        help_text="Enter the meta title of the search engine",
                        max_length=250,
                        verbose_name="Meta title",
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        help_text="Enter the meta description of the search engine",
                        max_length=250,
                        verbose_name="Meta description",
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        help_text="Enter the meta keywords of the search engine",
                        max_length=250,
                        verbose_name="Meta keywords",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter the name of the brand",
                        max_length=250,
                        verbose_name="Name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Brand",
                "verbose_name_plural": "Brands",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status", models.BooleanField(default=True, verbose_name="status")),
                (
                    "url_key",
                    models.CharField(
                        help_text="Enter the url key of the search engine",
                        max_length=250,
                        verbose_name="Url key",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        help_text="Enter the meta title of the search engine",
                        max_length=250,
                        verbose_name="Meta title",
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        help_text="Enter the meta description of the search engine",
                        max_length=250,
                        verbose_name="Meta description",
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        help_text="Enter the meta keywords of the search engine",
                        max_length=250,
                        verbose_name="Meta keywords",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter the name of the category",
                        max_length=250,
                        verbose_name="Name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status", models.BooleanField(default=True, verbose_name="status")),
                (
                    "url_key",
                    models.CharField(
                        help_text="Enter the url key of the search engine",
                        max_length=250,
                        verbose_name="Url key",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        help_text="Enter the meta title of the search engine",
                        max_length=250,
                        verbose_name="Meta title",
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        help_text="Enter the meta description of the search engine",
                        max_length=250,
                        verbose_name="Meta description",
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        help_text="Enter the meta keywords of the search engine",
                        max_length=250,
                        verbose_name="Meta keywords",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter the name of the product",
                        max_length=250,
                        verbose_name="Name",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Enter the sku of the product",
                        max_length=250,
                        verbose_name="Sku",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Enter the description of the product",
                        verbose_name="Description",
                    ),
                ),
                (
                    "short_description",
                    models.TextField(
                        help_text="Enter the short description of the product",
                        verbose_name="Short description",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Enter the price of the product",
                        max_digits=10,
                        verbose_name="Price",
                    ),
                ),
                (
                    "special_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Enter the special price of the product",
                        max_digits=10,
                        verbose_name="Special price",
                    ),
                ),
                (
                    "special_price_from",
                    models.DateTimeField(
                        help_text="Enter the special price from of the product",
                        verbose_name="Special price from",
                    ),
                ),
                (
                    "special_price_to",
                    models.DateTimeField(
                        help_text="Enter the special price to of the product",
                        verbose_name="Special price to",
                    ),
                ),
                (
                    "stock",
                    models.IntegerField(
                        help_text="Enter the stock of the product", verbose_name="Stock"
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Enter the weight of the product",
                        max_digits=10,
                        verbose_name="Weight",
                    ),
                ),
                (
                    "unit_of_measure",
                    models.CharField(
                        choices=[
                            ("kg", "Kilogram"),
                            ("g", "Gram"),
                            ("l", "Liter"),
                            ("ml", "Milliliter"),
                            ("m", "Meter"),
                            ("cm", "Centimeter"),
                            ("mm", "Millimeter"),
                            ("in", "Inch"),
                            ("ft", "Foot"),
                            ("yd", "Yard"),
                            ("mi", "Mile"),
                            ("oz", "Ounce"),
                            ("lb", "Pound"),
                            ("st", "Stone"),
                            ("t", "Ton"),
                            ("gal", "Gallon"),
                            ("pt", "Pint"),
                            ("qt", "Quart"),
                            ("cup", "Cup"),
                            ("pc", "Piece"),
                            ("set", "Set"),
                            ("pair", "Pair"),
                            ("doz", "Dozen"),
                            ("box", "Box"),
                            ("pack", "Pack"),
                            ("roll", "Roll"),
                            ("bag", "Bag"),
                            ("bottle", "Bottle"),
                            ("tube", "Tube"),
                            ("can", "Can"),
                            ("jar", "Jar"),
                            ("case", "Case"),
                            ("other", "Other"),
                        ],
                        default="kg",
                        help_text="Select the unit of measure of the product",
                        max_length=250,
                        verbose_name="Unit of measure",
                    ),
                ),
                (
                    "measure",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Enter the measure of the product",
                        max_digits=10,
                        verbose_name="Measure",
                    ),
                ),
                (
                    "brand",
                    models.ForeignKey(
                        help_text="Select the brand",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="artd_product.brand",
                        verbose_name="brand",
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        help_text="Select the category",
                        to="artd_product.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
            },
        ),
        migrations.CreateModel(
            name="RootCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status", models.BooleanField(default=True, verbose_name="status")),
                (
                    "url_key",
                    models.CharField(
                        help_text="Enter the url key of the search engine",
                        max_length=250,
                        verbose_name="Url key",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        help_text="Enter the meta title of the search engine",
                        max_length=250,
                        verbose_name="Meta title",
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        help_text="Enter the meta description of the search engine",
                        max_length=250,
                        verbose_name="Meta description",
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        help_text="Enter the meta keywords of the search engine",
                        max_length=250,
                        verbose_name="Meta keywords",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter the name of the root category",
                        max_length=250,
                        verbose_name="Name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Root Category",
                "verbose_name_plural": "Root Categories",
            },
        ),
        migrations.CreateModel(
            name="Tax",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status", models.BooleanField(default=True, verbose_name="status")),
                (
                    "name",
                    models.CharField(
                        help_text="Enter the name of the tax",
                        max_length=250,
                        verbose_name="Name",
                    ),
                ),
                (
                    "percentage",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Enter the percentage of the tax",
                        max_digits=5,
                        verbose_name="Percentage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tax",
                "verbose_name_plural": "Taxes",
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status", models.BooleanField(default=True, verbose_name="status")),
                (
                    "image",
                    models.ImageField(
                        help_text="Select the image",
                        upload_to="product/images/",
                        verbose_name="Image",
                    ),
                ),
                (
                    "alt",
                    models.CharField(
                        help_text="Enter the alt of the image",
                        max_length=250,
                        verbose_name="Alt",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="Select the product",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="artd_product.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Image",
                "verbose_name_plural": "Product Images",
            },
        ),
        migrations.AddField(
            model_name="product",
            name="tax",
            field=models.ForeignKey(
                help_text="Select the tax",
                on_delete=django.db.models.deletion.CASCADE,
                to="artd_product.tax",
                verbose_name="Tax",
            ),
        ),
        migrations.CreateModel(
            name="GroupedProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status", models.BooleanField(default=True, verbose_name="status")),
                (
                    "url_key",
                    models.CharField(
                        help_text="Enter the url key of the search engine",
                        max_length=250,
                        verbose_name="Url key",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        help_text="Enter the meta title of the search engine",
                        max_length=250,
                        verbose_name="Meta title",
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        help_text="Enter the meta description of the search engine",
                        max_length=250,
                        verbose_name="Meta description",
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        help_text="Enter the meta keywords of the search engine",
                        max_length=250,
                        verbose_name="Meta keywords",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter the name of the grouped product",
                        max_length=250,
                        verbose_name="Name",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Enter the sku of the grouped product",
                        max_length=250,
                        verbose_name="Sku",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Enter the description of the grouped product",
                        verbose_name="Description",
                    ),
                ),
                (
                    "short_description",
                    models.TextField(
                        help_text="Enter the short description of the grouped product",
                        verbose_name="Short_description",
                    ),
                ),
                (
                    "products",
                    models.ManyToManyField(
                        help_text="Select the product",
                        to="artd_product.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Grouped Product",
                "verbose_name_plural": "Grouped Products",
            },
        ),
        migrations.AddField(
            model_name="category",
            name="parent",
            field=models.ForeignKey(
                help_text="Select the root category",
                on_delete=django.db.models.deletion.CASCADE,
                to="artd_product.rootcategory",
                verbose_name="Root category",
            ),
        ),
    ]
