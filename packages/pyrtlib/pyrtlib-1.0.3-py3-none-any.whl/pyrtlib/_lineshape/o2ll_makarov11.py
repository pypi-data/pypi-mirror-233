import numpy as np

#  F[GHz]
f = np.array(
    [118.7503, 56.2648, 62.4863, 58.4466, 60.3061, 59.591, 59.1642, 60.4348, 58.3239, 61.1506, 57.6125, 61.8002,
     56.9682, 62.4112, 56.3634, 62.998, 55.7838, 63.5685, 55.2214, 64.1278, 54.6712, 64.6789, 54.13, 65.2241, 53.5958,
     65.7648, 53.0669, 66.3021, 52.5424, 66.8368, 52.0214, 67.3696, 51.5034, 67.9009, 50.9877, 68.431, 50.4742, 68.9603,
     233.9461, 368.4982, 401.7398, 424.763, 487.2493, 566.8956, 715.3929, 731.1866, 773.8395, 834.1455, 895.071])
#  S(T_0)[Hz*cm2]
s300 = np.array(
    [2.906e-15, 7.957e-16, 2.444e-15, 2.194e-15, 3.301e-15, 3.243e-15, 3.664e-15, 3.834e-15, 3.588e-15, 3.947e-15,
     3.179e-15, 3.661e-15, 2.59e-15, 3.111e-15, 1.954e-15, 2.443e-15, 1.373e-15, 1.784e-15, 9.013e-16, 1.217e-15,
     5.545e-16, 7.766e-16, 3.201e-16, 4.651e-16, 1.738e-16, 2.619e-16, 8.88e-17, 1.387e-16, 4.272e-17, 6.923e-17,
     1.939e-17, 3.255e-17, 8.301e-18, 1.445e-17, 3.356e-18, 6.049e-18, 1.28e-18, 2.394e-18, 3.287e-17, 6.463e-16,
     1.334e-17, 7.049e-15, 3.011e-15, 1.797e-17, 1.826e-15, 2.193e-17, 1.153e-14, 3.974e-15, 2.512e-17])
#  (Elow+hf)/kT_0 [unitless]
be = np.array(
    [0.01, 0.014, 0.083, 0.083, 0.207, 0.207, 0.387, 0.387, 0.621, 0.621, 0.91, 0.91, 1.255, 1.255, 1.654, 1.654, 2.109,
     2.109, 2.618, 2.618, 3.182, 3.182, 3.8, 3.8, 4.474, 4.474, 5.201, 5.201, 5.983, 5.983, 6.819, 6.819, 7.709, 7.709,
     8.653, 8.653, 9.651, 9.651, 0.019, 0.048, 0.045, 0.044, 0.049, 0.084, 0.145, 0.136, 0.141, 0.145, 0.201])
#  gamma(T_0) [MHZ/mb == GHz/bar]
wb300 = 0.56
x = 0.8
w300 = np.array(
    [1.688, 1.703, 1.513, 1.491, 1.415, 1.408, 1.353, 1.339, 1.295, 1.292, 1.262, 1.263, 1.223, 1.217, 1.189, 1.174,
     1.134, 1.134, 1.089, 1.088, 1.037, 1.038, 0.996, 0.996, 0.955, 0.955, 0.906, 0.906, 0.858, 0.858, 0.811, 0.811,
     0.764, 0.764, 0.717, 0.717, 0.669, 0.669, 2.78, 1.64, 1.64, 1.64, 1.6, 1.6, 1.6, 1.6, 1.62, 1.47, 1.47])
y0 = np.append(
    [-0.041, 0.265, -0.354, 0.53, -0.547, 0.589, -0.359, 0.276, -0.0942, -0.0124, 0.0647, -0.155, 0.224, -0.299, 0.365,
     -0.426, 0.466, -0.515, 0.546, -0.587, 0.608, -0.642, 0.64, -0.668, 0.655, -0.679, 0.669, -0.689, 0.689, -0.706,
     0.715, -0.729, 0.743, -0.754, 0.771, -0.78, 0.802, -0.807], np.tile(0.0, (1, 11)))
y1 = np.append(
    [0.0, -0.0132, 0.0582, -0.0981, 0.114, -0.153, -0.0494, 0.0476, 0.186, -0.235, 0.611, -0.674, 0.628, -0.662, 0.583,
     -0.598, 0.596, -0.6, 0.617, -0.615, 0.515, -0.509, 0.406, -0.399, 0.348, -0.34, 0.335, -0.327, 0.342, -0.332,
     0.346, -0.336, 0.344, -0.334, 0.338, -0.327, 0.32, -0.309], np.tile(0.0, (1, 11)))
g0 = np.append(
    [0.0, -0.0835, -0.0947, -0.218, -0.16, -0.162, 0.0197, 0.132, 0.128, 0.166, 0.0883, 0.0713, 0.0735, 0.0582,
     -0.00369, 0.00439, -0.0213, -0.0634, -0.0868, -0.105, -0.114, -0.134, -0.163, -0.174, -0.186, -0.195, -0.179,
     -0.186, -0.184, -0.189, -0.197, -0.2, -0.212, -0.214, -0.227, -0.228, -0.215, -0.216],
    np.tile(0.0, (1, 11)))
g1 = np.append(
    [0.0, 0.00843, 0.0234, 0.0596, 0.0326, 0.041, 0.0174, 0.039, 0.262, 0.305, 0.126, 0.0799, -0.156, -0.216, -0.253,
     -0.296, -0.287, -0.324, -0.374, -0.394, -0.393, -0.4, -0.329, -0.328, -0.261, -0.258, -0.237, -0.232, -0.244,
     -0.239, -0.262, -0.254, -0.278, -0.268, -0.295, -0.283, -0.354, -0.336], np.tile(0.0, (1, 11)))
dnu0 = np.append(
    [0.0, 0.00545, -0.0175, 0.0286, -0.043, 0.0491, -0.0229, 0.0162, -0.000866, -0.00609, -0.00115, -0.00256, 0.00221,
     -0.00447, 0.00605, -0.00746, 0.00675, -0.00762, 0.00732, -0.00784, 0.00802, -0.00833, 0.00696, -0.00714, 0.00517,
     -0.00526, 0.00368, -0.00376, 0.00277, -0.00283, 0.0023, -0.00235, 0.00209, -0.00211, 0.00194, -0.00197, 0.00199,
     -0.00199], np.tile(0.0, (1, 11)))
dnu1 = np.append(
    [0.0, 0.0017, -0.0013, 0.00107, -0.00444, 0.00493, -0.0529, 0.061, -0.0193, 0.0168, 0.0393, -0.0448, 0.0247,
     -0.0265, 0.0102, -0.0106, 0.0104, -0.0105, 0.0163, -0.0163, 0.00835, -0.00815, 0.000922, -0.00076, -0.00174,
     0.00184, -0.0015, 0.00157, -0.000561, 0.000641, -9.39e-05, 0.000173, -3.66e-05, 9.9e-05, -0.000156, 0.000224,
     -0.000708, 0.000743], np.tile(0.0, (1, 11)))
