"""Autogenerated API schema"""
from argus_api import session


get_customer = {'tags': ['customers/v2/customer'], 'summary': 'Returns a Customer identified by its ID or short name. (DEV)', 'description': '', 'operationId': 'getBasicCustomer', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Customer ID or short name', 'required': True, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'Customer domain to lookup short name (defaults to current users domain)', 'required': False, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Set of flags that are on/true for this customer.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['disabled', 'denySubmitForAnonymousUser', 'allowGlobalData', 'excludeFromProduction', 'networkBaseCustomer', 'singleNetworkDomain', 'customerDataDeleted']}}, 'type': 'str', 'options': ['GROUP', 'LEAF']}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_customer_logo = {'tags': ['customers/v2/customer'], 'summary': 'Returns a Customer logo by customer shortname or id. (DEV)', 'description': '', 'operationId': 'getBasicCustomerLogo', 'produces': ['image/*'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'Customer ID or shortname', 'required': True, 'type': 'str'}, {'name': 'includeDefault', 'in': 'query', 'description': 'Include default logo', 'required': False, 'type': 'bool', 'default': True}, {'name': 'domain', 'in': 'query', 'description': 'Customer domain to lookup shortname (defaults to current users domain)', 'required': False, 'type': 'str'}, {'name': 'size', 'in': 'query', 'description': 'The preferred size of the logo (small, medium, large, xlarge). Will also crop the original logo if it is not a square (optional)', 'required': False, 'type': 'str', 'enum': ['small', 'medium', 'large', 'xlarge']}], 'responses': {'401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_user_roles = {'tags': ['customers/v2/customer'], 'summary': 'Returns a set of User roles for the customer id or shortname. (DEV)', 'description': '', 'operationId': 'getBasicCustomerUserRoles', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'Customer ID or shortname', 'required': True, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'Customer domain to lookup user (defaults to current users domain)', 'required': False, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'user': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}}, 'description': 'SPI UserInfo'}, 'role': {'type': 'str', 'position': 0, 'description': 'The role for this user.', 'enum': ['technicalAccountManager', 'logManager', 'networkManager', 'tiManager', 'keyAccountManager']}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}